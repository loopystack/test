{"version":3,"file":"static/js/518.0de3f8fb.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","services/projectService.js","../node_modules/@mui/icons-material/esm/Search.js","content/applications/Projects/AdminProjects.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Function to fetch CSRF token if needed\r\nconst fetchCSRFToken = async () => {\r\n  try {\r\n    // Check if CSRF token already exists\r\n    if (!Cookies.get('csrftoken')) {\r\n      console.log('No CSRF token found, fetching a new one...');\r\n      const response = await axios.get(`${API_BASE_URL}/api/get_csrf_token/`, {\r\n        withCredentials: true\r\n      });\r\n      if (response.status === 200) {\r\n        const token = Cookies.get('csrftoken');\r\n        console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\r\n      } else {\r\n        console.warn('Failed to fetch CSRF token:', response.status);\r\n      }\r\n    } else {\r\n      console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching CSRF token:', error);\r\n    // Continue without CSRF token - backend will handle exempt views\r\n  }\r\n};\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: `${API_BASE_URL}/api`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Enable sending cookies with requests\r\n});\r\n\r\n// Add request interceptor to include auth token and CSRF token\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Fetch CSRF token if needed\r\n    await fetchCSRFToken();\r\n    \r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add CSRF token to headers\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('accessToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const projectService = {\r\n  // Get all projects\r\n  getAllProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get user's projects\r\n  getMyProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/my_projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search projects\r\n  searchProjects: async (query, params = {}) => {\r\n    const response = await api.get('/projects/search/', {\r\n      params: { q: query, ...params }\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get single project\r\n  getProject: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Create new project\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects/', projectData);\r\n    return response;\r\n  },\r\n\r\n  // Update project\r\n  updateProject: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project\r\n  deleteProject: async (projectId) => {\r\n    const response = await api.delete(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Run project\r\n  runProject: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/run/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view\r\n  trackProjectView: async (projectId) => {\r\n    const response = await api.post(`/projects/${projectId}/view/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project analytics\r\n  getProjectAnalytics: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/analytics/`);\r\n    return response;\r\n  },\r\n\r\n  // Get collaborators\r\n  getCollaborators: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/collaborators/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator\r\n  addCollaborator: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/${projectId}/add_collaborator/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator\r\n  removeCollaborator: async (projectId, userId) => {\r\n    const response = await api.post(`/projects/${projectId}/remove_collaborator/`, { user_id: userId });\r\n    return response;\r\n  },\r\n\r\n  // Submit version for review (for collaborators)\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Promote version to public\r\n  promoteVersionToPublic: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/promote_to_public/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project versions\r\n  getProjectVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Create project version\r\n  createProjectVersion: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Update project version\r\n  updateProjectVersion: async (projectId, versionId, versionData) => {\r\n    const response = await api.put(`/projects/${projectId}/versions/${versionId}/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project version\r\n  deleteProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.delete(`/projects/${projectId}/versions/${versionId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve project version\r\n  approveProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project version\r\n  rejectProjectVersion: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Analyze computing resources\r\n  analyzeComputingResources: async (projectId, code) => {\r\n    const response = await api.post(`/projects/${projectId}/computing-resources/`, { code });\r\n    return response;\r\n  },\r\n\r\n  // Get computing resources\r\n  getComputingResources: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/computing-resources/`);\r\n    return response;\r\n  },\r\n\r\n  // Update computing resources\r\n  updateComputingResources: async (projectId, resourceId, resourceData) => {\r\n    const response = await api.put(`/projects/${projectId}/computing-resources/${resourceId}/`, resourceData);\r\n    return response;\r\n  },\r\n\r\n  // Admin functions\r\n  // Get all projects for admin\r\n  getAllProjectsAdmin: async (params = {}) => {\r\n    const response = await api.get('/projects/admin/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Delete project as admin\r\n  deleteProjectAdmin: async (projectId) => {\r\n    const response = await api.delete(`/projects/admin/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project as admin\r\n  getProjectAdmin: async (projectId) => {\r\n    const response = await api.get(`/projects/admin/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get admin analytics\r\n  getAdminAnalytics: async () => {\r\n    const response = await api.get('/projects/admin/projects/analytics/');\r\n    return response;\r\n  },\r\n\r\n  // Approve project\r\n  approveProject: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project\r\n  rejectProject: async (projectId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Update project as admin\r\n  updateProjectAdmin: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/admin/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Run project as admin\r\n  runProjectAdmin: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/run_project/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view as admin\r\n  trackProjectViewAdmin: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/track_view/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator as admin\r\n  addCollaboratorAdmin: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/add_collaborator_admin/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator as admin\r\n  removeCollaboratorAdmin: async (projectId, userId) => {\r\n    const response = await api.delete(`/projects/admin/projects/${projectId}/remove_collaborator_admin/`, { data: { user_id: userId } });\r\n    return response;\r\n  },\r\n\r\n  // Approve version as admin\r\n  approveVersionAdmin: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve_version/`, { version_id: versionId });\r\n    return response;\r\n  },\r\n\r\n  // Reject version as admin\r\n  rejectVersionAdmin: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject_version/`, { version_id: versionId, reason });\r\n    return response;\r\n  },\r\n\r\n  // Get project usage statistics\r\n  getProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user's project usage\r\n  getUserProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project\r\n  getUserUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project (admin version)\r\n  getUserUsageAdmin: async (projectId) => {\r\n    const response = await api.get(`/projects/admin/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve a version\r\n  approveVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject a version\r\n  rejectVersion: async (projectId, versionId, reason) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Submit a new version for review\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Submit project for review\r\n  submitForReview: async (projectId, reviewData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_for_review/`, reviewData);\r\n    return response;\r\n  },\r\n\r\n  // Get public project by ID\r\n  getPublicProject: async (projectId) => {\r\n    const response = await api.get(`/projects/public/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get private project by URL\r\n  getPrivateProject: async (privateUrl) => {\r\n    const response = await api.get(`/projects/private/${privateUrl}/`);\r\n    return response;\r\n  },\r\n\r\n  // Execute code using backend endpoint\r\n  executeCode: async (code, language) => {\r\n    const response = await api.post('/projects/execute-code/', {\r\n      code: code,\r\n      language: language\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search with filters\r\n  advancedSearch: async (filters = {}) => {\r\n    const {\r\n      query = '',\r\n      projectType = '',\r\n      language = '',\r\n      sortBy = 'created_at',\r\n      sortOrder = 'desc'\r\n    } = filters;\r\n\r\n    const params = {\r\n      q: query,\r\n      type: projectType,\r\n      language: language,\r\n      sort_by: sortBy,\r\n      sort_order: sortOrder\r\n    };\r\n\r\n    const response = await api.get('/projects/search/', { params });\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default projectService;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n    Alert,\n    Avatar,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Chip,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    MenuItem,\n    Paper,\n    Select,\n    Snackbar,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    TextField,\n    Tooltip,\n    Typography\n} from '@mui/material';\nimport {\n    Cancel as RejectIcon,\n    CheckCircle as ApproveIcon,\n    Delete as DeleteIcon,\n    Edit as EditIcon,\n    Person as PersonIcon,\n    Search as SearchIcon,\n    Visibility as ViewIcon\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport { useAuth } from 'src/contexts/AuthContext';\nimport { projectService } from 'src/services/projectService';\n\nconst AdminProjects = () => {\n    const { user } = useAuth();\n    \n    const [projects, setProjects] = useState([]);\n    const [filteredProjects, setFilteredProjects] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterStatus, setFilterStatus] = useState('all');\n    const [selectedProject, setSelectedProject] = useState(null);\n    const [openRejectDialog, setOpenRejectDialog] = useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [rejectReason, setRejectReason] = useState('');\n    const [snackbar, setSnackbar] = useState({\n        open: false,\n        message: '',\n        severity: 'success'\n    });\n\n    useEffect(() => {\n        loadProjects();\n    }, []);\n\n    useEffect(() => {\n        filterProjects();\n    }, [projects, searchTerm, filterStatus]);\n\n    const loadProjects = async () => {\n        try {\n            setLoading(true);\n            const response = await projectService.getAllProjectsAdmin();\n            setProjects(response.data);\n        } catch (error) {\n            console.error('Error loading projects:', error);\n            setSnackbar({\n                open: true,\n                message: 'Failed to load projects',\n                severity: 'error'\n            });\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const filterProjects = () => {\n        let filtered = [...projects];\n\n        // Filter by search term\n        if (searchTerm) {\n            filtered = filtered.filter(project =>\n                project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.owner.email.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        // Filter by status\n        if (filterStatus !== 'all') {\n            filtered = filtered.filter(project => project.status === filterStatus);\n        }\n\n        setFilteredProjects(filtered);\n    };\n\n    const handleApproveProject = async (projectId) => {\n        try {\n            await projectService.approveProject(projectId);\n            setProjects(projects.map(project => \n                project.id === projectId \n                    ? { ...project, status: 'approved', is_approved: true }\n                    : project\n            ));\n            setSnackbar({\n                open: true,\n                message: 'Project approved successfully!',\n                severity: 'success'\n            });\n        } catch (error) {\n            console.error('Error approving project:', error);\n            setSnackbar({\n                open: true,\n                message: 'Failed to approve project',\n                severity: 'error'\n            });\n        }\n    };\n\n    const handleRejectProject = async (projectId) => {\n        try {\n            await projectService.rejectProject(projectId, rejectReason);\n            setProjects(projects.map(project => \n                project.id === projectId \n                    ? { ...project, status: 'rejected' }\n                    : project\n            ));\n            setOpenRejectDialog(false);\n            setRejectReason('');\n            setSnackbar({\n                open: true,\n                message: 'Project rejected successfully!',\n                severity: 'success'\n            });\n        } catch (error) {\n            console.error('Error rejecting project:', error);\n            setSnackbar({\n                open: true,\n                message: 'Failed to reject project',\n                severity: 'error'\n            });\n        }\n    };\n\n    const handleDeleteProject = async (projectId) => {\n        try {\n            await projectService.deleteProjectAdmin(projectId);\n            setProjects(projects.filter(project => project.id !== projectId));\n            setOpenDeleteDialog(false);\n            setSelectedProject(null);\n            setSnackbar({\n                open: true,\n                message: 'Project deleted successfully!',\n                severity: 'success'\n            });\n        } catch (error) {\n            console.error('Error deleting project:', error);\n            setSnackbar({\n                open: true,\n                message: 'Failed to delete project',\n                severity: 'error'\n            });\n        }\n    };\n\n    const handleConfirmDelete = () => {\n        if (selectedProject) {\n            handleDeleteProject(selectedProject.id);\n        }\n    };\n\n    const handleCancelDelete = () => {\n        setOpenDeleteDialog(false);\n        setSelectedProject(null);\n    };\n\n    const getStatusColor = (status) => {\n        switch (status) {\n            case 'approved':\n                return 'success';\n            case 'pending':\n                return 'warning';\n            case 'rejected':\n                return 'error';\n            case 'draft':\n                return 'default';\n            default:\n                return 'default';\n        }\n    };\n\n    const getProjectTypeIcon = (type) => {\n        switch (type) {\n            case 'code':\n                return '💻';\n            case 'text':\n                return '📝';\n            default:\n                return '📄';\n        }\n    };\n\n    return (\n        <>\n            <Helmet>\n                <title>Admin Projects - OneDollarAI</title>\n            </Helmet>\n\n            <Container maxWidth=\"xl\">\n                <Box sx={{ mt: 3, mb: 4 }}>\n                    <Typography variant=\"h2\" component=\"h1\" gutterBottom sx={{ color: 'black' }}>\n                        Admin Projects\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ color: 'black' }}>\n                        Manage and review all projects in the system.\n                    </Typography>\n                </Box>\n\n                <Card sx={{ mb: 3 }}>\n                    <CardContent>\n                        <Grid container spacing={2} alignItems=\"center\">\n                            <Grid item xs={12} md={6}>\n                                <TextField\n                                    fullWidth\n                                    placeholder=\"Search projects by title, description, or owner...\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <SearchIcon sx={{ color: 'black' }} />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    sx={{\n                                        '& .MuiInputBase-root': {\n                                            color: 'black',\n                                            '& fieldset': {\n                                                borderColor: 'black'\n                                            },\n                                            '&:hover fieldset': {\n                                                borderColor: 'black'\n                                            },\n                                            '&.Mui-focused fieldset': {\n                                                borderColor: 'black'\n                                            }\n                                        },\n                                        '& .MuiInputLabel-root': {\n                                            color: 'black',\n                                            '&.Mui-focused': {\n                                                color: 'black'\n                                            }\n                                        },\n                                        '& .MuiFormHelperText-root': {\n                                            color: 'black'\n                                        }\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={3}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Status</InputLabel>\n                                    <Select\n                                        value={filterStatus}\n                                        onChange={(e) => setFilterStatus(e.target.value)}\n                                        label=\"Status\"\n                                    >\n                                        <MenuItem value=\"all\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>All Statuses</MenuItem>\n                                        <MenuItem value=\"draft\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Draft</MenuItem>\n                                        <MenuItem value=\"pending\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Pending Review</MenuItem>\n                                        <MenuItem value=\"approved\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Approved</MenuItem>\n                                        <MenuItem value=\"rejected\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Rejected</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={3}>\n                                <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                                    Total: {filteredProjects.length} projects\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n\n                <TableContainer component={Paper} sx={{ \n                    backgroundColor: '#fff',\n                    '& .MuiTableHead-root .MuiTableCell-root': {\n                        backgroundColor: '#f5f5f5',\n                        color: 'black',\n                        fontWeight: 600\n                    },\n                    '& .MuiTableBody-root .MuiTableCell-root': {\n                        color: 'black'\n                    }\n                }}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Project</TableCell>\n                                <TableCell>Owner</TableCell>\n                                <TableCell>Type</TableCell>\n                                <TableCell>Status</TableCell>\n                                <TableCell>Cost per use</TableCell>\n                                <TableCell>Created</TableCell>\n                                <TableCell>Actions</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {filteredProjects.map((project) => (\n                                <TableRow key={project.id} sx={{ '&:hover': { backgroundColor: '#f8f9fa' } }}>\n                                    <TableCell>\n                                        <Box>\n                                            <Typography variant=\"subtitle2\" noWrap sx={{ color: 'black' }}>\n                                                {project.title}\n                                            </Typography>\n                                            <Typography \n                                                variant=\"caption\" \n                                                sx={{ color: 'black' }}\n                                                noWrap\n                                            >\n                                                {project.description.substring(0, 50)}...\n                                            </Typography>\n                                        </Box>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                                            <Avatar sx={{ width: 32, height: 32 }}>\n                                                {project.owner.avatar ? (\n                                                    <img \n                                                        src={project.owner.avatar} \n                                                        alt={project.owner.first_name} \n                                                    />\n                                                ) : (\n                                                    <PersonIcon fontSize=\"small\" sx={{ color: 'black' }} />\n                                                )}\n                                            </Avatar>\n                                            <Box>\n                                                <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                                                    {project.owner.first_name} {project.owner.last_name}\n                                                </Typography>\n                                                <Typography variant=\"caption\" sx={{ color: 'black' }}>\n                                                    {project.owner.email}\n                                                </Typography>\n                                            </Box>\n                                        </Box>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Chip\n                                            label={project.project_type}\n                                            size=\"small\"\n                                            icon={\n                                                <span>\n                                                    {getProjectTypeIcon(project.project_type)}\n                                                </span>\n                                            }\n                                            sx={{ color: 'black' }}\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <Chip\n                                            label={project.status}\n                                            color={getStatusColor(project.status)}\n                                            size=\"small\"\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"caption\" sx={{ color: 'black' }}>\n                                            ${project.price_per_use}/use\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                                            {formatDistanceToNow(\n                                                new Date(project.created_at), \n                                                { addSuffix: true }\n                                            )}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Box sx={{ display: 'flex', gap: 0.5 }}>\n                                            <Tooltip title=\"View Project\">\n                                                <IconButton \n                                                    size=\"small\"\n                                                    onClick={() => window.open(`/project/${project.id}`, '_blank')}\n                                                >\n                                                    <ViewIcon fontSize=\"small\" sx={{ color: 'black' }} />\n                                                </IconButton>\n                                            </Tooltip>\n                                            \n                                            {project.status === 'pending' && (\n                                                <>\n                                                    <Tooltip title=\"Approve Project\">\n                                                        <IconButton\n                                                            size=\"small\"\n                                                            color=\"success\"\n                                                            onClick={() => handleApproveProject(project.id)}\n                                                        >\n                                                            <ApproveIcon fontSize=\"small\" />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                    <Tooltip title=\"Reject Project\">\n                                                        <IconButton\n                                                            size=\"small\"\n                                                            color=\"error\"\n                                                            onClick={() => {\n                                                                setSelectedProject(project);\n                                                                setOpenRejectDialog(true);\n                                                            }}\n                                                        >\n                                                            <RejectIcon fontSize=\"small\" />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </>\n                                            )}\n                                            \n                                            <Tooltip title=\"Delete Project\">\n                                                <IconButton\n                                                    size=\"small\"\n                                                    color=\"error\"\n                                                    onClick={() => {\n                                                        setSelectedProject(project);\n                                                        setOpenDeleteDialog(true);\n                                                    }}\n                                                >\n                                                    <DeleteIcon fontSize=\"small\" />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Box>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n\n                {filteredProjects.length === 0 && !loading && (\n                    <Box sx={{ textAlign: 'center', mt: 4 }}>\n                        <Typography variant=\"h6\" sx={{ color: 'black' }} gutterBottom>\n                            No projects found\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                            {searchTerm || filterStatus !== 'all' \n                                ? 'Try adjusting your search or filters'\n                                : 'No projects in the system yet'\n                            }\n                        </Typography>\n                    </Box>\n                )}\n\n                {/* Reject Dialog */}\n                <Dialog\n                    open={openRejectDialog}\n                    onClose={() => setOpenRejectDialog(false)}\n                    maxWidth=\"sm\"\n                    fullWidth\n                >\n                    <DialogTitle sx={{ color: 'black' }}>Reject Project</DialogTitle>\n                    <DialogContent>\n                        <Typography variant=\"body2\" sx={{ mb: 2, color: 'black' }}>\n                            Are you sure you want to reject \"{selectedProject?.title}\"?\n                        </Typography>\n                        <TextField\n                            fullWidth\n                            multiline\n                            rows={3}\n                            label=\"Reason for rejection (optional)\"\n                            value={rejectReason}\n                            onChange={(e) => setRejectReason(e.target.value)}\n                            placeholder=\"Please provide a reason for rejection...\"\n                            sx={{\n                                '& .MuiInputBase-root': {\n                                    color: 'black',\n                                    '& fieldset': {\n                                        borderColor: 'black'\n                                    },\n                                    '&:hover fieldset': {\n                                        borderColor: 'black'\n                                    },\n                                    '&.Mui-focused fieldset': {\n                                        borderColor: 'black'\n                                    }\n                                },\n                                '& .MuiInputLabel-root': {\n                                    color: 'black',\n                                    '&.Mui-focused': {\n                                        color: 'black'\n                                    }\n                                },\n                                '& .MuiFormHelperText-root': {\n                                    color: 'black'\n                                }\n                            }}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={() => setOpenRejectDialog(false)} sx={{ color: 'black' }}>\n                            Cancel\n                        </Button>\n                        <Button\n                            onClick={() => handleRejectProject(selectedProject.id)}\n                            color=\"error\"\n                            variant=\"contained\"\n                        >\n                            Reject Project\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* Delete Confirmation Dialog */}\n                <Dialog\n                    open={openDeleteDialog}\n                    onClose={handleCancelDelete}\n                    maxWidth=\"sm\"\n                    fullWidth\n                >\n                    <DialogTitle sx={{ \n                        color: 'black', \n                        backgroundColor: '#fff3cd',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 1\n                    }}>\n                        <DeleteIcon sx={{ color: '#856404' }} />\n                        Confirm Delete\n                    </DialogTitle>\n                    <DialogContent sx={{ backgroundColor: '#fff3cd', pt: 2 }}>\n                        <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\n                            Are you sure you want to delete the project \"{selectedProject?.title}\"?\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#856404' }}>\n                            This action cannot be undone. The project and all its data will be permanently removed.\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions sx={{ backgroundColor: '#fff3cd', px: 3, pb: 2 }}>\n                        <Button \n                            onClick={handleCancelDelete}\n                            sx={{ \n                                color: 'black',\n                                borderColor: 'black',\n                                '&:hover': {\n                                    borderColor: 'black',\n                                    backgroundColor: 'rgba(0, 0, 0, 0.04)'\n                                }\n                            }}\n                        >\n                            Cancel\n                        </Button>\n                        <Button \n                            onClick={handleConfirmDelete}\n                            variant=\"contained\"\n                            color=\"error\"\n                            startIcon={<DeleteIcon />}\n                            sx={{\n                                backgroundColor: '#dc3545',\n                                '&:hover': {\n                                    backgroundColor: '#c82333'\n                                }\n                            }}\n                        >\n                            Delete Project\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                <Snackbar\n                    open={snackbar.open}\n                    autoHideDuration={6000}\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\n                >\n                    <Alert\n                        onClose={() => setSnackbar({ ...snackbar, open: false })}\n                        severity={snackbar.severity}\n                        sx={{ width: '100%' }}\n                    >\n                        {snackbar.message}\n                    </Alert>\n                </Snackbar>\n            </Container>\n        </>\n    );\n};\n\nexport default AdminProjects; "],"names":["createSvgIcon","_jsx","d","getTableBodyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableBodyRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","value","children","clsx","as","role","getTableHeadUtilityClass","TableHeadRoot","API_BASE_URL","process","api","axios","create","baseURL","headers","withCredentials","interceptors","request","use","async","Cookies","get","console","log","response","status","token","warn","error","fetchCSRFToken","localStorage","getItem","config","Authorization","csrfToken","Promise","reject","_error$response","removeItem","window","location","href","projectService","getAllProjects","params","arguments","length","undefined","getMyProjects","searchProjects","query","q","getProject","projectId","createProject","post","projectData","updateProject","put","deleteProject","delete","runProject","inputData","trackProjectView","getProjectAnalytics","getCollaborators","addCollaborator","collaboratorData","removeCollaborator","userId","user_id","submitVersionForReview","versionData","getPendingVersions","promoteVersionToPublic","versionId","getProjectVersions","createProjectVersion","updateProjectVersion","deleteProjectVersion","approveProjectVersion","rejectProjectVersion","reason","analyzeComputingResources","code","getComputingResources","updateComputingResources","resourceId","resourceData","getAllProjectsAdmin","deleteProjectAdmin","getProjectAdmin","getAdminAnalytics","approveProject","rejectProject","updateProjectAdmin","runProjectAdmin","trackProjectViewAdmin","addCollaboratorAdmin","removeCollaboratorAdmin","data","approveVersionAdmin","version_id","rejectVersionAdmin","getProjectUsage","getUserProjectUsage","getUserUsage","getUserUsageAdmin","approveVersion","rejectVersion","submitForReview","reviewData","getPublicProject","getPrivateProject","privateUrl","executeCode","language","advancedSearch","filters","projectType","sortBy","sortOrder","type","sort_by","sort_order","AdminProjects","user","useAuth","projects","setProjects","useState","filteredProjects","setFilteredProjects","loading","setLoading","searchTerm","setSearchTerm","filterStatus","setFilterStatus","selectedProject","setSelectedProject","openRejectDialog","setOpenRejectDialog","openDeleteDialog","setOpenDeleteDialog","rejectReason","setRejectReason","snackbar","setSnackbar","open","message","severity","useEffect","loadProjects","filterProjects","filtered","filter","project","title","toLowerCase","includes","description","owner","email","handleCancelDelete","getStatusColor","getProjectTypeIcon","_jsxs","_Fragment","Helmet","Container","maxWidth","Box","sx","mt","mb","Typography","gutterBottom","color","Card","CardContent","Grid","container","spacing","alignItems","item","xs","md","TextField","fullWidth","placeholder","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","borderColor","FormControl","InputLabel","Select","label","MenuItem","TableContainer","Paper","backgroundColor","fontWeight","Table","TableHead","TableRow","TableCell","TableBody","map","noWrap","substring","gap","Avatar","width","height","avatar","src","alt","first_name","PersonIcon","fontSize","last_name","Chip","project_type","size","icon","price_per_use","formatDistanceToNow","Date","created_at","addSuffix","Tooltip","IconButton","onClick","id","ViewIcon","is_approved","handleApproveProject","ApproveIcon","RejectIcon","DeleteIcon","textAlign","Dialog","onClose","DialogTitle","DialogContent","multiline","rows","DialogActions","Button","handleRejectProject","pt","px","pb","handleConfirmDelete","handleDeleteProject","startIcon","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}