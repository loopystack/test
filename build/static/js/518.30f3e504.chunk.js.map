{"version":3,"file":"static/js/518.30f3e504.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","services/projectService.js","../node_modules/@mui/icons-material/esm/Search.js","content/applications/Projects/AdminProjects.js","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Function to fetch CSRF token if needed\r\nconst fetchCSRFToken = async () => {\r\n  try {\r\n    // Check if CSRF token already exists\r\n    if (!Cookies.get('csrftoken')) {\r\n      console.log('No CSRF token found, fetching a new one...');\r\n      const response = await axios.get(`${API_BASE_URL}/api/get_csrf_token/`, {\r\n        withCredentials: true\r\n      });\r\n      if (response.status === 200) {\r\n        const token = Cookies.get('csrftoken');\r\n        console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\r\n      } else {\r\n        console.warn('Failed to fetch CSRF token:', response.status);\r\n      }\r\n    } else {\r\n      console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching CSRF token:', error);\r\n    // Continue without CSRF token - backend will handle exempt views\r\n  }\r\n};\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: `${API_BASE_URL}/api`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Enable sending cookies with requests\r\n});\r\n\r\n// Add request interceptor to include auth token and CSRF token\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Fetch CSRF token if needed\r\n    await fetchCSRFToken();\r\n    \r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add CSRF token to headers\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('accessToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const projectService = {\r\n  // Get all projects\r\n  getAllProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get user's projects\r\n  getMyProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/my_projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search projects\r\n  searchProjects: async (query, params = {}) => {\r\n    const response = await api.get('/projects/search/', {\r\n      params: { q: query, ...params }\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get single project\r\n  getProject: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Create new project\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects/', projectData);\r\n    return response;\r\n  },\r\n\r\n  // Update project\r\n  updateProject: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project\r\n  deleteProject: async (projectId) => {\r\n    const response = await api.delete(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Run project\r\n  runProject: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/run/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Buy project\r\n  buyProject: async (projectId, purchaseData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/buy/`, purchaseData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view\r\n  trackProjectView: async (projectId) => {\r\n    const response = await api.post(`/projects/${projectId}/view/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project analytics\r\n  getProjectAnalytics: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/analytics/`);\r\n    return response;\r\n  },\r\n\r\n  // Get collaborators\r\n  getCollaborators: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/collaborators/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator\r\n  addCollaborator: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/${projectId}/add_collaborator/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator\r\n  removeCollaborator: async (projectId, userId) => {\r\n    const response = await api.post(`/projects/${projectId}/remove_collaborator/`, { user_id: userId });\r\n    return response;\r\n  },\r\n\r\n  // Submit version for review (for collaborators)\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Promote version to public\r\n  promoteVersionToPublic: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/promote_to_public/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project versions\r\n  getProjectVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Create project version\r\n  createProjectVersion: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Update project version\r\n  updateProjectVersion: async (projectId, versionId, versionData) => {\r\n    const response = await api.put(`/projects/${projectId}/versions/${versionId}/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project version\r\n  deleteProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.delete(`/projects/${projectId}/versions/${versionId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve project version\r\n  approveProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project version\r\n  rejectProjectVersion: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Analyze computing resources\r\n  analyzeComputingResources: async (projectId, code) => {\r\n    const response = await api.post(`/projects/${projectId}/computing-resources/`, { code });\r\n    return response;\r\n  },\r\n\r\n  // Get computing resources\r\n  getComputingResources: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/computing-resources/`);\r\n    return response;\r\n  },\r\n\r\n  // Update computing resources\r\n  updateComputingResources: async (projectId, resourceId, resourceData) => {\r\n    const response = await api.put(`/projects/${projectId}/computing-resources/${resourceId}/`, resourceData);\r\n    return response;\r\n  },\r\n\r\n  // Admin functions\r\n  // Get all projects for admin\r\n  getAllProjectsAdmin: async (params = {}) => {\r\n    const response = await api.get('/projects/admin/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get admin analytics\r\n  getAdminAnalytics: async () => {\r\n    const response = await api.get('/projects/admin/projects/analytics/');\r\n    return response;\r\n  },\r\n\r\n  // Approve project\r\n  approveProject: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project\r\n  rejectProject: async (projectId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Get project usage statistics\r\n  getProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user's project usage\r\n  getUserProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project\r\n  getUserUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve a version\r\n  approveVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject a version\r\n  rejectVersion: async (projectId, versionId, reason) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Submit a new version for review\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Submit project for review\r\n  submitForReview: async (projectId, reviewData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_for_review/`, reviewData);\r\n    return response;\r\n  },\r\n\r\n  // Get public project by ID\r\n  getPublicProject: async (projectId) => {\r\n    const response = await api.get(`/projects/public/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get private project by URL\r\n  getPrivateProject: async (privateUrl) => {\r\n    const response = await api.get(`/projects/private/${privateUrl}/`);\r\n    return response;\r\n  },\r\n\r\n  // Execute code using backend endpoint\r\n  executeCode: async (code, language) => {\r\n    const response = await api.post('/projects/execute-code/', {\r\n      code: code,\r\n      language: language\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search with filters\r\n  advancedSearch: async (filters = {}) => {\r\n    const {\r\n      query = '',\r\n      projectType = '',\r\n      language = '',\r\n      minPrice = '',\r\n      maxPrice = '',\r\n      sortBy = 'created_at',\r\n      sortOrder = 'desc'\r\n    } = filters;\r\n\r\n    const params = {\r\n      q: query,\r\n      type: projectType,\r\n      language: language,\r\n      min_price: minPrice,\r\n      max_price: maxPrice,\r\n      sort_by: sortBy,\r\n      sort_order: sortOrder\r\n    };\r\n\r\n    const response = await api.get('/projects/search/', { params });\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default projectService;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n    Alert,\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    FormControl,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    MenuItem,\r\n    Paper,\r\n    Select,\r\n    Snackbar,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    TextField,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\nimport {\r\n    Cancel as RejectIcon,\r\n    CheckCircle as ApproveIcon,\r\n    Delete as DeleteIcon,\r\n    Edit as EditIcon,\r\n    Person as PersonIcon,\r\n    Search as SearchIcon,\r\n    Visibility as ViewIcon\r\n} from '@mui/icons-material';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport { projectService } from 'src/services/projectService';\r\n\r\nconst AdminProjects = () => {\r\n    const { user } = useAuth();\r\n    \r\n    const [projects, setProjects] = useState([]);\r\n    const [filteredProjects, setFilteredProjects] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [filterStatus, setFilterStatus] = useState('all');\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n    const [openRejectDialog, setOpenRejectDialog] = useState(false);\r\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n    const [rejectReason, setRejectReason] = useState('');\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadProjects();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterProjects();\r\n    }, [projects, searchTerm, filterStatus]);\r\n\r\n    const loadProjects = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await projectService.getAllProjectsAdmin();\r\n            setProjects(response.data);\r\n        } catch (error) {\r\n            console.error('Error loading projects:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to load projects',\r\n                severity: 'error'\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const filterProjects = () => {\r\n        let filtered = [...projects];\r\n\r\n        // Filter by search term\r\n        if (searchTerm) {\r\n            filtered = filtered.filter(project =>\r\n                project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                project.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                project.owner.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n            );\r\n        }\r\n\r\n        // Filter by status\r\n        if (filterStatus !== 'all') {\r\n            filtered = filtered.filter(project => project.status === filterStatus);\r\n        }\r\n\r\n        setFilteredProjects(filtered);\r\n    };\r\n\r\n    const handleApproveProject = async (projectId) => {\r\n        try {\r\n            await projectService.approveProject(projectId);\r\n            setProjects(projects.map(project => \r\n                project.id === projectId \r\n                    ? { ...project, status: 'approved', is_approved: true }\r\n                    : project\r\n            ));\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Project approved successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error approving project:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to approve project',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRejectProject = async (projectId) => {\r\n        try {\r\n            await projectService.rejectProject(projectId, rejectReason);\r\n            setProjects(projects.map(project => \r\n                project.id === projectId \r\n                    ? { ...project, status: 'rejected' }\r\n                    : project\r\n            ));\r\n            setOpenRejectDialog(false);\r\n            setRejectReason('');\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Project rejected successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error rejecting project:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to reject project',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDeleteProject = async (projectId) => {\r\n        try {\r\n            await projectService.deleteProject(projectId);\r\n            setProjects(projects.filter(project => project.id !== projectId));\r\n            setOpenDeleteDialog(false);\r\n            setSelectedProject(null);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Project deleted successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error deleting project:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to delete project',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleConfirmDelete = () => {\r\n        if (selectedProject) {\r\n            handleDeleteProject(selectedProject.id);\r\n        }\r\n    };\r\n\r\n    const handleCancelDelete = () => {\r\n        setOpenDeleteDialog(false);\r\n        setSelectedProject(null);\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'approved':\r\n                return 'success';\r\n            case 'pending':\r\n                return 'warning';\r\n            case 'rejected':\r\n                return 'error';\r\n            case 'draft':\r\n                return 'default';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    const getProjectTypeIcon = (type) => {\r\n        switch (type) {\r\n            case 'code':\r\n                return '💻';\r\n            case 'text':\r\n                return '📝';\r\n            default:\r\n                return '📄';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Admin Projects - OneDollarAI</title>\r\n            </Helmet>\r\n\r\n            <Container maxWidth=\"xl\">\r\n                <Box sx={{ mt: 3, mb: 4 }}>\r\n                    <Typography variant=\"h2\" component=\"h1\" gutterBottom sx={{ color: 'black' }}>\r\n                        Admin Projects\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ color: 'black' }}>\r\n                        Manage and review all projects in the system.\r\n                    </Typography>\r\n                </Box>\r\n\r\n                <Card sx={{ mb: 3 }}>\r\n                    <CardContent>\r\n                        <Grid container spacing={2} alignItems=\"center\">\r\n                            <Grid item xs={12} md={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    placeholder=\"Search projects by title, description, or owner...\"\r\n                                    value={searchTerm}\r\n                                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                                    InputProps={{\r\n                                        startAdornment: (\r\n                                            <InputAdornment position=\"start\">\r\n                                                <SearchIcon sx={{ color: 'black' }} />\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                    sx={{\r\n                                        '& .MuiInputBase-root': {\r\n                                            color: 'black',\r\n                                            '& fieldset': {\r\n                                                borderColor: 'black'\r\n                                            },\r\n                                            '&:hover fieldset': {\r\n                                                borderColor: 'black'\r\n                                            },\r\n                                            '&.Mui-focused fieldset': {\r\n                                                borderColor: 'black'\r\n                                            }\r\n                                        },\r\n                                        '& .MuiInputLabel-root': {\r\n                                            color: 'black',\r\n                                            '&.Mui-focused': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        },\r\n                                        '& .MuiFormHelperText-root': {\r\n                                            color: 'black'\r\n                                        }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={3}>\r\n                                <FormControl fullWidth sx={{\r\n                                    '& .MuiInputBase-root': {\r\n                                        color: 'black',\r\n                                        '& fieldset': {\r\n                                            borderColor: 'black'\r\n                                        },\r\n                                        '&:hover fieldset': {\r\n                                            borderColor: 'black'\r\n                                        },\r\n                                        '&.Mui-focused fieldset': {\r\n                                            borderColor: 'black'\r\n                                        }\r\n                                    },\r\n                                    '& .MuiInputLabel-root': {\r\n                                        color: 'black',\r\n                                        '&.Mui-focused': {\r\n                                            color: 'black'\r\n                                        }\r\n                                    },\r\n                                    '& .MuiSelect-icon': {\r\n                                        color: 'black'\r\n                                    }\r\n                                }}>\r\n                                    <InputLabel>Status</InputLabel>\r\n                                    <Select\r\n                                        value={filterStatus}\r\n                                        onChange={(e) => setFilterStatus(e.target.value)}\r\n                                        label=\"Status\"\r\n                                    >\r\n                                        <MenuItem value=\"all\" sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>All Statuses</MenuItem>\r\n                                        <MenuItem value=\"draft\" sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>Draft</MenuItem>\r\n                                        <MenuItem value=\"pending\" sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>Pending Review</MenuItem>\r\n                                        <MenuItem value=\"approved\" sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>Approved</MenuItem>\r\n                                        <MenuItem value=\"rejected\" sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>Rejected</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={3}>\r\n                                <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                    Total: {filteredProjects.length} projects\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <TableContainer component={Paper} sx={{ \r\n                    backgroundColor: '#fff',\r\n                    '& .MuiTableHead-root .MuiTableCell-root': {\r\n                        backgroundColor: '#f5f5f5',\r\n                        color: 'black',\r\n                        fontWeight: 600\r\n                    },\r\n                    '& .MuiTableBody-root .MuiTableCell-root': {\r\n                        color: 'black'\r\n                    }\r\n                }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Project</TableCell>\r\n                                <TableCell>Owner</TableCell>\r\n                                <TableCell>Type</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell>Price</TableCell>\r\n                                <TableCell>Created</TableCell>\r\n                                <TableCell>Actions</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {filteredProjects.map((project) => (\r\n                                <TableRow key={project.id} sx={{ '&:hover': { backgroundColor: '#f8f9fa' } }}>\r\n                                    <TableCell>\r\n                                        <Box>\r\n                                            <Typography variant=\"subtitle2\" noWrap sx={{ color: 'black' }}>\r\n                                                {project.title}\r\n                                            </Typography>\r\n                                            <Typography \r\n                                                variant=\"caption\" \r\n                                                sx={{ color: 'black' }}\r\n                                                noWrap\r\n                                            >\r\n                                                {project.description.substring(0, 50)}...\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                            <Avatar sx={{ width: 32, height: 32 }}>\r\n                                                {project.owner.avatar ? (\r\n                                                    <img \r\n                                                        src={project.owner.avatar} \r\n                                                        alt={project.owner.first_name} \r\n                                                    />\r\n                                                ) : (\r\n                                                    <PersonIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                                                )}\r\n                                            </Avatar>\r\n                                            <Box>\r\n                                                <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                    {project.owner.first_name} {project.owner.last_name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                                                    {project.owner.email}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Chip\r\n                                            label={project.project_type}\r\n                                            size=\"small\"\r\n                                            icon={\r\n                                                <span>\r\n                                                    {getProjectTypeIcon(project.project_type)}\r\n                                                </span>\r\n                                            }\r\n                                            sx={{ color: 'black' }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Chip\r\n                                            label={project.status}\r\n                                            color={getStatusColor(project.status)}\r\n                                            size=\"small\"\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                            ${project.price}\r\n                                        </Typography>\r\n                                        <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                                            ${project.price_per_use}/use\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                            {formatDistanceToNow(\r\n                                                new Date(project.created_at), \r\n                                                { addSuffix: true }\r\n                                            )}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                                            <Tooltip title=\"View Project\">\r\n                                                <IconButton \r\n                                                    size=\"small\"\r\n                                                    onClick={() => window.open(`/project/${project.id}`, '_blank')}\r\n                                                >\r\n                                                    <ViewIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                            \r\n                                            {project.status === 'pending' && (\r\n                                                <>\r\n                                                    <Tooltip title=\"Approve Project\">\r\n                                                        <IconButton\r\n                                                            size=\"small\"\r\n                                                            color=\"success\"\r\n                                                            onClick={() => handleApproveProject(project.id)}\r\n                                                        >\r\n                                                            <ApproveIcon fontSize=\"small\" />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip title=\"Reject Project\">\r\n                                                        <IconButton\r\n                                                            size=\"small\"\r\n                                                            color=\"error\"\r\n                                                            onClick={() => {\r\n                                                                setSelectedProject(project);\r\n                                                                setOpenRejectDialog(true);\r\n                                                            }}\r\n                                                        >\r\n                                                            <RejectIcon fontSize=\"small\" />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                </>\r\n                                            )}\r\n                                            \r\n                                            <Tooltip title=\"Delete Project\">\r\n                                                <IconButton\r\n                                                    size=\"small\"\r\n                                                    color=\"error\"\r\n                                                    onClick={() => {\r\n                                                        setSelectedProject(project);\r\n                                                        setOpenDeleteDialog(true);\r\n                                                    }}\r\n                                                >\r\n                                                    <DeleteIcon fontSize=\"small\" />\r\n                                                </IconButton>\r\n                                            </Tooltip>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n                {filteredProjects.length === 0 && !loading && (\r\n                    <Box sx={{ textAlign: 'center', mt: 4 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black' }} gutterBottom>\r\n                            No projects found\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                            {searchTerm || filterStatus !== 'all' \r\n                                ? 'Try adjusting your search or filters'\r\n                                : 'No projects in the system yet'\r\n                            }\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Reject Dialog */}\r\n                <Dialog\r\n                    open={openRejectDialog}\r\n                    onClose={() => setOpenRejectDialog(false)}\r\n                    maxWidth=\"sm\"\r\n                    fullWidth\r\n                >\r\n                    <DialogTitle sx={{ color: 'black' }}>Reject Project</DialogTitle>\r\n                    <DialogContent>\r\n                        <Typography variant=\"body2\" sx={{ mb: 2, color: 'black' }}>\r\n                            Are you sure you want to reject \"{selectedProject?.title}\"?\r\n                        </Typography>\r\n                        <TextField\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            label=\"Reason for rejection (optional)\"\r\n                            value={rejectReason}\r\n                            onChange={(e) => setRejectReason(e.target.value)}\r\n                            placeholder=\"Please provide a reason for rejection...\"\r\n                            sx={{\r\n                                '& .MuiInputBase-root': {\r\n                                    color: 'black',\r\n                                    '& fieldset': {\r\n                                        borderColor: 'black'\r\n                                    },\r\n                                    '&:hover fieldset': {\r\n                                        borderColor: 'black'\r\n                                    },\r\n                                    '&.Mui-focused fieldset': {\r\n                                        borderColor: 'black'\r\n                                    }\r\n                                },\r\n                                '& .MuiInputLabel-root': {\r\n                                    color: 'black',\r\n                                    '&.Mui-focused': {\r\n                                        color: 'black'\r\n                                    }\r\n                                },\r\n                                '& .MuiFormHelperText-root': {\r\n                                    color: 'black'\r\n                                }\r\n                            }}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={() => setOpenRejectDialog(false)} sx={{ color: 'black' }}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => handleRejectProject(selectedProject.id)}\r\n                            color=\"error\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Reject Project\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                {/* Delete Confirmation Dialog */}\r\n                <Dialog\r\n                    open={openDeleteDialog}\r\n                    onClose={handleCancelDelete}\r\n                    maxWidth=\"sm\"\r\n                    fullWidth\r\n                >\r\n                    <DialogTitle sx={{ \r\n                        color: 'black', \r\n                        backgroundColor: '#fff3cd',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1\r\n                    }}>\r\n                        <DeleteIcon sx={{ color: '#856404' }} />\r\n                        Confirm Delete\r\n                    </DialogTitle>\r\n                    <DialogContent sx={{ backgroundColor: '#fff3cd', pt: 2 }}>\r\n                        <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\r\n                            Are you sure you want to delete the project \"{selectedProject?.title}\"?\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: '#856404' }}>\r\n                            This action cannot be undone. The project and all its data will be permanently removed.\r\n                        </Typography>\r\n                    </DialogContent>\r\n                    <DialogActions sx={{ backgroundColor: '#fff3cd', px: 3, pb: 2 }}>\r\n                        <Button \r\n                            onClick={handleCancelDelete}\r\n                            sx={{ \r\n                                color: 'black',\r\n                                borderColor: 'black',\r\n                                '&:hover': {\r\n                                    borderColor: 'black',\r\n                                    backgroundColor: 'rgba(0, 0, 0, 0.04)'\r\n                                }\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <Button \r\n                            onClick={handleConfirmDelete}\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            startIcon={<DeleteIcon />}\r\n                            sx={{\r\n                                backgroundColor: '#dc3545',\r\n                                '&:hover': {\r\n                                    backgroundColor: '#c82333'\r\n                                }\r\n                            }}\r\n                        >\r\n                            Delete Project\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n\r\n                <Snackbar\r\n                    open={snackbar.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                >\r\n                    <Alert\r\n                        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                        severity={snackbar.severity}\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {snackbar.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminProjects; ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["createSvgIcon","_jsx","d","getTableBodyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableBodyRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","value","children","clsx","as","role","getTableHeadUtilityClass","TableHeadRoot","API_BASE_URL","process","api","axios","create","baseURL","headers","withCredentials","interceptors","request","use","async","Cookies","get","console","log","response","status","token","warn","error","fetchCSRFToken","localStorage","getItem","config","Authorization","csrfToken","Promise","reject","_error$response","removeItem","window","location","href","projectService","getAllProjects","params","arguments","length","undefined","getMyProjects","searchProjects","query","q","getProject","projectId","createProject","post","projectData","updateProject","put","deleteProject","delete","runProject","inputData","buyProject","purchaseData","trackProjectView","getProjectAnalytics","getCollaborators","addCollaborator","collaboratorData","removeCollaborator","userId","user_id","submitVersionForReview","versionData","getPendingVersions","promoteVersionToPublic","versionId","getProjectVersions","createProjectVersion","updateProjectVersion","deleteProjectVersion","approveProjectVersion","rejectProjectVersion","reason","analyzeComputingResources","code","getComputingResources","updateComputingResources","resourceId","resourceData","getAllProjectsAdmin","getAdminAnalytics","approveProject","rejectProject","getProjectUsage","getUserProjectUsage","getUserUsage","approveVersion","rejectVersion","submitForReview","reviewData","getPublicProject","getPrivateProject","privateUrl","executeCode","language","advancedSearch","filters","projectType","minPrice","maxPrice","sortBy","sortOrder","type","min_price","max_price","sort_by","sort_order","AdminProjects","user","useAuth","projects","setProjects","useState","filteredProjects","setFilteredProjects","loading","setLoading","searchTerm","setSearchTerm","filterStatus","setFilterStatus","selectedProject","setSelectedProject","openRejectDialog","setOpenRejectDialog","openDeleteDialog","setOpenDeleteDialog","rejectReason","setRejectReason","snackbar","setSnackbar","open","message","severity","useEffect","loadProjects","filterProjects","data","filtered","filter","project","title","toLowerCase","includes","description","owner","email","handleCancelDelete","getStatusColor","getProjectTypeIcon","_jsxs","_Fragment","Helmet","Container","maxWidth","Box","sx","mt","mb","Typography","gutterBottom","color","Card","CardContent","Grid","container","spacing","alignItems","item","xs","md","TextField","fullWidth","placeholder","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","borderColor","FormControl","InputLabel","Select","label","MenuItem","TableContainer","Paper","backgroundColor","fontWeight","Table","TableHead","TableRow","TableCell","TableBody","map","noWrap","substring","gap","Avatar","width","height","avatar","src","alt","first_name","PersonIcon","fontSize","last_name","Chip","project_type","size","icon","price","price_per_use","formatDistanceToNow","Date","created_at","addSuffix","Tooltip","IconButton","onClick","id","ViewIcon","is_approved","handleApproveProject","ApproveIcon","RejectIcon","DeleteIcon","textAlign","Dialog","onClose","DialogTitle","DialogContent","multiline","rows","DialogActions","Button","handleRejectProject","pt","px","pb","handleConfirmDelete","handleDeleteProject","startIcon","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}