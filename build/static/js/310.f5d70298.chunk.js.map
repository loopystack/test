{"version":3,"file":"static/js/310.f5d70298.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Lock.js","../node_modules/@mui/material/TableBody/tableBodyClasses.js","../node_modules/@mui/material/TableBody/TableBody.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Public.js","../node_modules/@mui/material/TableHead/tableHeadClasses.js","../node_modules/@mui/material/TableHead/TableHead.js","../node_modules/@mui/icons-material/esm/Info.js","../node_modules/@mui/icons-material/esm/Timer.js","../node_modules/@mui/icons-material/esm/Memory.js","../node_modules/@mui/icons-material/esm/Refresh.js","../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/icons-material/esm/Speed.js","../node_modules/@mui/icons-material/esm/Storage.js","content/applications/Projects/components/ComputingResourceAnalysis.js","content/applications/Projects/components/ProjectDetails.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableBodyUtilityClass(slot) {\n  return generateUtilityClass('MuiTableBody', slot);\n}\nconst tableBodyClasses = generateUtilityClasses('MuiTableBody', ['root']);\nexport default tableBodyClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableBodyUtilityClass } from './tableBodyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableBodyUtilityClass, classes);\n};\nconst TableBodyRoot = styled('tbody', {\n  name: 'MuiTableBody',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-row-group'\n});\nconst tablelvl2 = {\n  variant: 'body'\n};\nconst defaultComponent = 'tbody';\nconst TableBody = /*#__PURE__*/React.forwardRef(function TableBody(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableBody'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableBodyRoot, _extends({\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableBody;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-1 17.93c-3.95-.49-7-3.85-7-7.93 0-.62.08-1.21.21-1.79L9 15v1c0 1.1.9 2 2 2zm6.9-2.54c-.26-.81-1-1.39-1.9-1.39h-1v-3c0-.55-.45-1-1-1H8v-2h2c.55 0 1-.45 1-1V7h2c1.1 0 2-.9 2-2v-.41c2.93 1.19 5 4.06 5 7.41 0 2.08-.8 3.97-2.1 5.39\"\n}), 'Public');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableHeadUtilityClass(slot) {\n  return generateUtilityClass('MuiTableHead', slot);\n}\nconst tableHeadClasses = generateUtilityClasses('MuiTableHead', ['root']);\nexport default tableHeadClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getTableHeadUtilityClass } from './tableHeadClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTableHeadUtilityClass, classes);\n};\nconst TableHeadRoot = styled('thead', {\n  name: 'MuiTableHead',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'table-header-group'\n});\nconst tablelvl2 = {\n  variant: 'head'\n};\nconst defaultComponent = 'thead';\nconst TableHead = /*#__PURE__*/React.forwardRef(function TableHead(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableHead'\n  });\n  const {\n      className,\n      component = defaultComponent\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(Tablelvl2Context.Provider, {\n    value: tablelvl2,\n    children: /*#__PURE__*/_jsx(TableHeadRoot, _extends({\n      as: component,\n      className: clsx(classes.root, className),\n      ref: ref,\n      role: component === defaultComponent ? null : 'rowgroup',\n      ownerState: ownerState\n    }, other))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TableHead;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-6h2zm0-8h-2V7h2z\"\n}), 'Info');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 1h6v2H9zm10.03 6.39 1.42-1.42c-.43-.51-.9-.99-1.41-1.41l-1.42 1.42C16.07 4.74 14.12 4 12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9 9-4.03 9-9c0-2.12-.74-4.07-1.97-5.61M13 14h-2V8h2z\"\n}), 'Timer');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 9H9v6h6zm-2 4h-2v-2h2zm8-2V9h-2V7c0-1.1-.9-2-2-2h-2V3h-2v2h-2V3H9v2H7c-1.1 0-2 .9-2 2v2H3v2h2v2H3v2h2v2c0 1.1.9 2 2 2h2v2h2v-2h2v2h2v-2h2c1.1 0 2-.9 2-2v-2h2v-2h-2v-2zm-4 6H7V7h10z\"\n}), 'Memory');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4z\"\n}), 'Refresh');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.38 8.57-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83\"\n}), 'Speed');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2 20h20v-4H2zm2-3h2v2H4zM2 4v4h20V4zm4 3H4V5h2zm-4 7h20v-4H2zm2-3h2v2H4z\"\n}), 'Storage');","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    LinearProgress,\r\n    Grid,\r\n    Chip,\r\n    Alert,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    IconButton,\r\n    Tooltip\r\n} from '@mui/material';\r\nimport {\r\n    Memory as MemoryIcon,\r\n    Speed as SpeedIcon,\r\n    Storage as StorageIcon,\r\n    Timer as TimerIcon,\r\n    MonetizationOn as CostIcon,\r\n    Info as InfoIcon,\r\n    Refresh as RefreshIcon,\r\n    TrendingUp as TrendingIcon,\r\n    Warning as WarningIcon,\r\n    CheckCircle as CheckIcon\r\n} from '@mui/icons-material';\r\nimport { projectService } from 'src/services/projectService';\r\n\r\nconst ComputingResourceAnalysis = ({ project, onUpdate }) => {\r\n    const [resources, setResources] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        loadResources();\r\n    }, [project.id]);\r\n\r\n    const loadResources = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await projectService.getComputingResources(project.id);\r\n            setResources(response.data);\r\n        } catch (error) {\r\n            console.error('Error loading computing resources:', error);\r\n            setError('Failed to load computing resources');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const analyzeResources = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await projectService.analyzeComputingResources(project.id, project.latest_version?.content || '');\r\n            setResources(response.data);\r\n            if (onUpdate) onUpdate();\r\n        } catch (error) {\r\n            console.error('Error analyzing resources:', error);\r\n            setError('Failed to analyze computing resources');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const calculateMonthlyCost = () => {\r\n        if (!resources) return 0;\r\n        const monthlyServerCost = 20; // $20/month server cost\r\n        const cpuPercentage = resources.cpu_usage || 0;\r\n        const memoryPercentage = resources.memory_usage || 0;\r\n        const avgUsage = (cpuPercentage + memoryPercentage) / 2;\r\n        return (avgUsage / 100) * monthlyServerCost;\r\n    };\r\n\r\n    const getResourceIntensityColor = (intensity) => {\r\n        switch (intensity) {\r\n            case 'low':\r\n                return 'success';\r\n            case 'medium':\r\n                return 'warning';\r\n            case 'high':\r\n                return 'error';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    const getComplexityLevel = (score) => {\r\n        if (score < 30) return 'Low';\r\n        if (score < 70) return 'Medium';\r\n        return 'High';\r\n    };\r\n\r\n    if (loading && !resources) {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                            Analyzing Computing Resources...\r\n                        </Typography>\r\n                        <LinearProgress />\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Alert severity=\"error\" sx={{ color: 'black' }}>\r\n                        {error}\r\n                    </Alert>\r\n                    <Button\r\n                        startIcon={<RefreshIcon />}\r\n                        onClick={loadResources}\r\n                        sx={{ mt: 2, color: 'black' }}\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                            Computing Resource Analysis\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', gap: 1 }}>\r\n                            <Tooltip title=\"View Detailed Analysis\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setShowDetails(true)}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <InfoIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Re-analyze Resources\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={analyzeResources}\r\n                                    disabled={loading}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    {resources ? (\r\n                        <>\r\n                            <Grid container spacing={3}>\r\n                                {/* Resource Usage */}\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Resource Usage\r\n                                    </Typography>\r\n                                    \r\n                                    <Box sx={{ mb: 3 }}>\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                CPU Usage\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {resources.cpu_usage?.toFixed(1)}%\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <LinearProgress \r\n                                            variant=\"determinate\" \r\n                                            value={Math.min(resources.cpu_usage || 0, 100)} \r\n                                            sx={{ mb: 2 }}\r\n                                        />\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Memory Usage\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {resources.memory_usage?.toFixed(1)} MB\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <LinearProgress \r\n                                            variant=\"determinate\" \r\n                                            value={Math.min((resources.memory_usage || 0) / 10, 100)} \r\n                                            sx={{ mb: 2 }}\r\n                                        />\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Execution Time\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {resources.execution_time?.toFixed(2)}s\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <LinearProgress \r\n                                            variant=\"determinate\" \r\n                                            value={Math.min((resources.execution_time || 0) * 10, 100)} \r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n\r\n                                {/* Cost Analysis */}\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Cost Analysis\r\n                                    </Typography>\r\n                                    \r\n                                    <Box sx={{ mb: 3 }}>\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Cost per Run\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'green', fontWeight: 'bold' }}>\r\n                                                ${project.price_per_use}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    {/* Complexity Score */}\r\n                                    <Box sx={{ mb: 2 }}>\r\n                                        <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\r\n                                            Complexity Score: {resources.complexity_score || 0}/100\r\n                                        </Typography>\r\n                                        <Chip\r\n                                            label={`${getComplexityLevel(resources.complexity_score || 0)} Complexity`}\r\n                                            color={getResourceIntensityColor(resources.resource_intensity)}\r\n                                            size=\"small\"\r\n                                            sx={{ mr: 1 }}\r\n                                        />\r\n                                        <Chip\r\n                                            label={`${resources.resource_intensity} Intensity`}\r\n                                            color={getResourceIntensityColor(resources.resource_intensity)}\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    ) : (\r\n                        <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                            <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\r\n                                No computing resource analysis available\r\n                            </Typography>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                startIcon={<TrendingIcon />}\r\n                                onClick={analyzeResources}\r\n                                disabled={loading}\r\n                                sx={{ backgroundColor: 'black', color: 'white' }}\r\n                            >\r\n                                Analyze Resources\r\n                            </Button>\r\n                        </Box>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Detailed Analysis Dialog */}\r\n            <Dialog\r\n                open={showDetails}\r\n                onClose={() => setShowDetails(false)}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>\r\n                    Detailed Computing Resource Analysis\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {resources && (\r\n                        <Box>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Resource Breakdown\r\n                                    </Typography>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Resource</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Usage</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Percentage</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Status</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <SpeedIcon fontSize=\"small\" />\r\n                                                            CPU Usage\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.cpu_usage?.toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.cpu_usage?.toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.cpu_usage > 70 ? 'High' : resources.cpu_usage > 30 ? 'Medium' : 'Low'}\r\n                                                            color={resources.cpu_usage > 70 ? 'error' : resources.cpu_usage > 30 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <MemoryIcon fontSize=\"small\" />\r\n                                                            Memory Usage\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.memory_usage?.toFixed(1)} MB\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {((resources.memory_usage || 0) / 1000 * 100).toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.memory_usage > 700 ? 'High' : resources.memory_usage > 300 ? 'Medium' : 'Low'}\r\n                                                            color={resources.memory_usage > 700 ? 'error' : resources.memory_usage > 300 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <TimerIcon fontSize=\"small\" />\r\n                                                            Execution Time\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.execution_time?.toFixed(2)}s\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {((resources.execution_time || 0) / 30 * 100).toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.execution_time > 20 ? 'High' : resources.execution_time > 10 ? 'Medium' : 'Low'}\r\n                                                            color={resources.execution_time > 20 ? 'error' : resources.execution_time > 10 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <StorageIcon fontSize=\"small\" />\r\n                                                            Storage Usage\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.storage_usage?.toFixed(1)} MB\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {((resources.storage_usage || 0) / 100 * 100).toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.storage_usage > 70 ? 'High' : resources.storage_usage > 30 ? 'Medium' : 'Low'}\r\n                                                            color={resources.storage_usage > 70 ? 'error' : resources.storage_usage > 30 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Cost Analysis Details\r\n                                    </Typography>\r\n                                    <Alert severity=\"info\" sx={{ color: 'black' }}>\r\n                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                                            <strong>Cost Calculation Formula:</strong>\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>\r\n                                            Cost per run = (CPU% + Memory%) × Execution Time × Monthly Server Cost ÷ (30 days × 24 hours × 3600 seconds)\r\n                                        </Typography>\r\n                                    </Alert>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowDetails(false)} sx={{ color: 'black' }}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComputingResourceAnalysis; ","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  Chip,\n  Avatar,\n  Tabs,\n  Tab,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n} from '@mui/material';\nimport {\n  Public as PublicIcon,\n  Lock as LockIcon,\n  PlayArrow as PlayIcon,\n  Person as PersonIcon,\n  CheckCircle as CheckCircleIcon,\n  Edit as EditIcon\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\nimport { projectService } from 'src/services/projectService';\nimport ComputingResourceAnalysis from './ComputingResourceAnalysis';\n\nconst ProjectDetails = ({\n  project,\n  onClose,\n  onRun,\n  isOwner\n}) => {\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState(0);\n  const [computingResources, setComputingResources] = useState(null);\n  const [collaborators, setCollaborators] = useState([]);\n\n  useEffect(() => {\n    loadComputingResources();\n    loadCollaborators();\n  }, [project.id, isOwner]);\n\n  const loadComputingResources = async () => {\n    try {\n      const response = await projectService.getComputingResources(project.id);\n      setComputingResources(response.data);\n    } catch (error) {\n      console.error('Error loading computing resources:', error);\n    }\n  };\n\n  const loadCollaborators = async () => {\n    try {\n      const response = await projectService.getCollaborators(project.id);\n      setCollaborators(response.data);\n    } catch (error) {\n      console.error('Error loading collaborators:', error);\n    }\n  };\n\n  const calculateMonthlyCost = () => {\n    if (!computingResources) return 0;\n    const monthlyServerCost = 20; // $20/month server cost\n    const cpuPercentage = computingResources.cpu_usage;\n    const memoryPercentage = computingResources.memory_usage;\n    const avgUsage = (cpuPercentage + memoryPercentage) / 2;\n    return (avgUsage / 100) * monthlyServerCost;\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const handleRun = () => {\n    navigate(`/project/${project.id}/run`);\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'approved':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'error';\n      case 'draft':\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n\n\n  const latestVersion = project.latest_public_version || project.latest_private_version;\n\n  return (\n    <Box sx={{ width: '100%', maxHeight: '80vh', overflow: 'auto' }}>\n      {/* Header */}\n      <Box sx={{ mb: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n          <Box>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ color: 'black' }}>\n              {project.title}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, color: 'black' }}>\n              {project.description}\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            {project.is_public ? (\n              <Chip icon={<PublicIcon sx={{ color: 'black' }} />} label=\"Public\" color=\"primary\" variant=\"outlined\" />\n            ) : (\n              <Chip icon={<LockIcon sx={{ color: 'black' }} />} label=\"Private\" color=\"default\" variant=\"outlined\" />\n            )}\n            <Chip\n              icon={<CheckCircleIcon sx={{ color: 'black' }} />}\n              label={project.status}\n              color={getStatusColor(project.status)}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n\n        {/* Action Buttons */}\n        <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n          <Button\n            variant=\"contained\"\n            startIcon={<PlayIcon sx={{ color: 'white' }} />}\n            onClick={handleRun}\n            sx={{ backgroundColor: 'black', color: 'white' }}\n          >\n            Run Project\n          </Button>\n          {isOwner && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<EditIcon sx={{ color: 'black' }} />}\n              onClick={() => navigate(`/project/${project.id}/edit`)}\n              sx={{ color: 'black', borderColor: 'black' }}\n            >\n              Edit Project\n            </Button>\n          )}\n        </Box>\n      </Box>\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n        <Tabs value={activeTab} onChange={handleTabChange}>\n          <Tab label=\"Content\" sx={{ color: 'black' }} />\n          <Tab label=\"Computing Resources\" sx={{ color: 'black' }} />\n          {isOwner && <Tab label=\"Collaboration\" sx={{ color: 'black' }} />}\n        </Tabs>\n      </Box>\n\n      {/* Tab Content */}\n      <Box sx={{ mt: 2 }}>\n        {/* Content Tab */}\n        {activeTab === 0 && (\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\n                Project Content\n              </Typography>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: '#f5f5f5',\n                  fontFamily: 'monospace',\n                  whiteSpace: 'pre-wrap',\n                  overflow: 'auto',\n                  maxHeight: '400px'\n                }}\n              >\n                {project.project_type === 'code' ? (\n                  <div style={{ color: 'black' }}>\n                    <ReactMarkdown rehypePlugins={[rehypeHighlight]}>\n                      {latestVersion?.content || 'No content available'}\n                    </ReactMarkdown>\n                  </div>\n                ) : (\n                  <Typography variant=\"body1\" sx={{ color: 'black' }}>\n                    {latestVersion?.content || 'No content available'}\n                  </Typography>\n                )}\n              </Paper>\n            </CardContent>\n          </Card>\n        )}\n\n\n\n        {/* Computing Resources Tab */}\n        {activeTab === 1 && (\n          <ComputingResourceAnalysis \n            project={project} \n            onUpdate={loadComputingResources}\n          />\n        )}\n\n\n\n        {/* Collaboration Tab (Owner Only) */}\n        {activeTab === 2 && isOwner && (\n          <Card>\n            <CardContent>\n              {/* Collaborators List */}\n              <Box sx={{ mb: 3 }}>\n                <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\n                  Collaborators ({collaborators.length})\n                </Typography>\n                \n                {collaborators.length > 0 ? (\n                  <List>\n                    {collaborators.map((collaborator) => (\n                      <ListItem key={collaborator.id} sx={{ px: 0 }}>\n                        <ListItemIcon>\n                          <Avatar sx={{ width: 32, height: 32 }}>\n                            <PersonIcon />\n                          </Avatar>\n                        </ListItemIcon>\n                        <ListItemText\n                          primary={\n                            <Typography variant=\"body1\" sx={{ color: 'black' }}>\n                              {collaborator.user.first_name} {collaborator.user.last_name}\n                            </Typography>\n                          }\n                          secondary={\n                            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                              <Typography variant=\"body2\" sx={{ color: 'gray' }}>\n                                {collaborator.user.email}\n                              </Typography>\n                              <Chip\n                                label={collaborator.role}\n                                size=\"small\"\n                                color={collaborator.role === 'admin' ? 'primary' : 'default'}\n                                sx={{ textTransform: 'capitalize' }}\n                              />\n                              {collaborator.is_public && (\n                                <Chip\n                                  label=\"Public\"\n                                  size=\"small\"\n                                  color=\"success\"\n                                  variant=\"outlined\"\n                                />\n                              )}\n                            </Box>\n                          }\n                        />\n                        <Typography variant=\"caption\" sx={{ color: 'gray' }}>\n                          Added {formatDistanceToNow(new Date(collaborator.added_at), { addSuffix: true })}\n                        </Typography>\n                      </ListItem>\n                    ))}\n                  </List>\n                ) : (\n                  <Typography variant=\"body2\" sx={{ color: 'gray', fontStyle: 'italic' }}>\n                    No collaborators yet\n                  </Typography>\n                )}\n              </Box>\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ProjectDetails; "],"names":["createSvgIcon","_jsx","d","getTableBodyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TableBodyRoot","styled","name","overridesResolver","props","styles","root","display","tablelvl2","variant","defaultComponent","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","Tablelvl2Context","Provider","value","children","clsx","as","role","getTableHeadUtilityClass","TableHeadRoot","_ref","_resources$cpu_usage","_resources$memory_usa","_resources$execution_","_resources$cpu_usage2","_resources$cpu_usage3","_resources$memory_usa2","_resources$execution_2","_resources$storage_us","project","onUpdate","resources","setResources","useState","loading","setLoading","showDetails","setShowDetails","error","setError","useEffect","loadResources","id","async","response","projectService","getComputingResources","data","console","analyzeResources","_project$latest_versi","analyzeComputingResources","latest_version","content","getResourceIntensityColor","intensity","Card","CardContent","_jsxs","Box","sx","textAlign","py","Typography","color","mb","LinearProgress","Alert","severity","Button","startIcon","RefreshIcon","onClick","mt","_Fragment","justifyContent","alignItems","gap","Tooltip","title","IconButton","size","InfoIcon","disabled","Grid","container","spacing","item","xs","md","cpu_usage","toFixed","Math","min","memory_usage","execution_time","fontWeight","price_per_use","complexity_score","Chip","label","score","resource_intensity","mr","TrendingIcon","backgroundColor","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","SpeedIcon","fontSize","MemoryIcon","TimerIcon","StorageIcon","storage_usage","fontFamily","DialogActions","onRun","isOwner","navigate","useNavigate","activeTab","setActiveTab","computingResources","setComputingResources","collaborators","setCollaborators","loadComputingResources","loadCollaborators","getCollaborators","latestVersion","latest_public_version","latest_private_version","width","maxHeight","overflow","gutterBottom","description","is_public","icon","PublicIcon","LockIcon","CheckCircleIcon","status","getStatusColor","PlayIcon","handleRun","EditIcon","borderColor","borderBottom","Tabs","onChange","handleTabChange","event","newValue","Tab","p","whiteSpace","project_type","style","ReactMarkdown","rehypePlugins","rehypeHighlight","ComputingResourceAnalysis","length","List","map","collaborator","ListItem","px","ListItemIcon","Avatar","height","PersonIcon","ListItemText","primary","user","first_name","last_name","secondary","email","textTransform","formatDistanceToNow","Date","added_at","addSuffix","fontStyle"],"sourceRoot":""}