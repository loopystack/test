{"version":3,"file":"static/js/147.9c09ac4a.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.js","content/applications/TextToSpeech/index.js","utils/pdfParser.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Box, Container, styled } from '@mui/material';\n\nconst PageTitle = styled(Box)(\n  ({ theme }) => `\n        padding: ${theme.spacing(4)};\n`\n);\n\nconst PageTitleWrapper = ({ children }) => {\n  return (\n    <PageTitle className=\"MuiPageTitle-wrapper\">\n      <Container maxWidth=\"lg\">{children}</Container>\n    </PageTitle>\n  );\n};\n\nPageTitleWrapper.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default PageTitleWrapper;\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  TextField,\n  Container,\n  Divider,\n  Paper,\n  IconButton,\n  Grid,\n  MenuItem,\n  Select,\n  FormControl,\n  InputLabel,\n  Tooltip,\n  Alert,\n  CircularProgress,\n  styled,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport { useDropzone } from 'react-dropzone';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport StopIcon from '@mui/icons-material/Stop';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport AudioFileIcon from '@mui/icons-material/AudioFile';\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { Helmet } from 'react-helmet-async';\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\nimport { extractTextFromPDF, isPDFSupported } from 'src/utils/pdfParser';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useAuth } from 'src/contexts/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport { topupModalShow } from 'src/actions/paymentAction';\nimport AuthDialogContent from '../Messenger/Auth/AuthDialogContent'; // Import the AuthDialogContent\n\n// Set default icon color to black\nconst BlackIcon = styled(Box)(({ theme }) => ({\n  '& .MuiSvgIcon-root': {\n    color: 'black',\n  }\n}));\n\n// Custom Audio Player Component\nconst AudioPlayer = ({ src, filename }) => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n\n  const handlePlayPause = () => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play().catch(err => {\n          console.error(\"Audio play error:\", err);\n          setHasError(true);\n        });\n      }\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n      setHasError(false);\n    }\n  };\n\n  const handleError = (e) => {\n    console.error(\"Audio error:\", e);\n    setHasError(true);\n    setIsPlaying(false);\n  };\n\n  const formatTime = (time) => {\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n\n  const handleRetry = () => {\n    setHasError(false);\n    if (audioRef.current) {\n      audioRef.current.load();\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <audio\n        ref={audioRef}\n        src={src}\n        onTimeUpdate={handleTimeUpdate}\n        onLoadedMetadata={handleLoadedMetadata}\n        onError={handleError}\n        onEnded={() => setIsPlaying(false)}\n        style={{ display: 'none' }}\n      />\n\n      {hasError ? (\n        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', p: 1, borderRadius: 1, bgcolor: alpha('#f44336', 0.1) }}>\n          <Typography variant=\"body2\" color=\"error\">Error loading audio</Typography>\n          <BlackIcon>\n            <IconButton size=\"small\" color=\"primary\" onClick={handleRetry}>\n              <RefreshIcon fontSize=\"small\" />\n            </IconButton>\n          </BlackIcon>\n        </Box>\n      ) : (\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <BlackIcon>\n            <IconButton onClick={handlePlayPause} disabled={hasError}>\n              {isPlaying ? <PauseIcon /> : <PlayArrowIcon />}\n            </IconButton>\n          </BlackIcon>\n\n          <Box sx={{ flexGrow: 1, height: 4, bgcolor: alpha('#000', 0.1), borderRadius: 2, position: 'relative' }}>\n            <Box\n              sx={{\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                height: '100%',\n                width: `${(currentTime / duration) * 100 || 0}%`,\n                bgcolor: 'black',\n                borderRadius: 2\n              }}\n            />\n          </Box>\n\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            {formatTime(currentTime)} / {formatTime(duration || 0)}\n          </Typography>\n\n          <BlackIcon>\n            <VolumeUpIcon fontSize=\"small\" />\n          </BlackIcon>\n        </Box>\n      )}\n\n      {filename && (\n        <Typography variant=\"caption\" color=\"black\" sx={{ mt: 1, display: 'block' }}>\n          File: {filename}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\n// Custom styled components\nconst StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  color: 'black !important',\n  fontWeight: 400,\n  padding: '8px 16px',\n  '&.Mui-selected': {\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\n    color: 'black !important',\n    fontWeight: 500\n  },\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.primary.main, 0.05),\n    color: 'black !important'\n  }\n}));\n\nconst StyledSelect = styled(Select)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    color: 'black !important',\n    fontWeight: 500,\n    padding: '8px 14px',\n    height: '44px !important',\n  },\n  '& .MuiSvgIcon-root': {\n    color: 'black !important',\n  }\n}));\n\nconst ScrollableContainer = styled(Container)({\n  maxHeight: '100%',\n  overflow: 'auto',\n  '&::-webkit-scrollbar': {\n    width: '8px',\n  },\n  '&::-webkit-scrollbar-track': {\n    background: '#f1f1f1',\n    borderRadius: '4px',\n  },\n  '&::-webkit-scrollbar-thumb': {\n    background: '#888',\n    borderRadius: '4px',\n  },\n  '&::-webkit-scrollbar-thumb:hover': {\n    background: '#555',\n  }\n});\n\nconst ControlButton = styled(Button)(({ theme }) => ({\n  borderRadius: '30px',\n  padding: '10px 20px',\n  minWidth: '100px',\n  boxShadow: 'none',\n  color: 'black',\n  '& .MuiSvgIcon-root': {\n    color: 'black',\n  },\n  '&.MuiButton-contained': {\n    backgroundColor: theme.palette.grey[200],\n    color: 'black',\n    '&:hover': {\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: '0 3px 10px rgba(0, 0, 0, 0.2)',\n    }\n  },\n  '&.MuiButton-outlined': {\n    borderColor: 'black',\n    color: 'black',\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.black, 0.05),\n      borderColor: 'black',\n    }\n  }\n}));\n\nconst UploadArea = styled(Paper)(({ theme, isDragActive }) => ({\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  border: '1px dashed',\n  borderColor: isDragActive ? theme.palette.primary.main : alpha(theme.palette.grey[400], 0.5),\n  borderRadius: theme.spacing(1),\n  height: '60px',\n  transition: 'all 0.3s ease',\n  backgroundColor: isDragActive ? alpha(theme.palette.primary.main, 0.03) : alpha(theme.palette.grey[100], 0.3),\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: alpha(theme.palette.primary.main, 0.03)\n  }\n}));\n\n// Voice models\nconst voiceModels = [\n  { id: '#g1_aura-angus-en', label: 'Aura Angus (EN)' },\n  { id: '#g1_aura-arcas-en', label: 'Aura Arcas (EN)' },\n  { id: '#g1_aura-asteria-en', label: 'Aura Asteria (EN)' },\n  { id: '#g1_aura-athena-en', label: 'Aura Athena (EN)' },\n  { id: '#g1_aura-helios-en', label: 'Aura Helios (EN)' },\n  { id: '#g1_aura-hera-en', label: 'Aura Hera (EN)' },\n  { id: '#g1_aura-luna-en', label: 'Aura Luna (EN)' },\n  { id: '#g1_aura-orion-en', label: 'Aura Orion (EN)' },\n  { id: '#g1_aura-orpheus-en', label: 'Aura Orpheus (EN)' },\n  { id: '#g1_aura-perseus-en', label: 'Aura Perseus (EN)' },\n  { id: '#g1_aura-stella-en', label: 'Aura Stella (EN)' },\n  { id: '#g1_aura-zeus-en', label: 'Aura Zeus (EN)' }\n];\n\nconst TextToSpeech = () => {\n  const theme = useTheme();\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const [text, setText] = useState('');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [selectedModel, setSelectedModel] = useState('#g1_aura-asteria-en');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [pdfSupported, setPdfSupported] = useState(false);\n  const [fileName, setFileName] = useState('');\n  const [isConverting, setIsConverting] = useState(false);\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioUrl, setAudioUrl] = useState('');\n  const [isAuthDialogOpen, setAuthDialogOpen] = useState(false); // State for Auth Dialog\n\n  const { speak, cancel, speaking, supported, voices, pause, resume } = useSpeechSynthesis();\n\n  useEffect(() => {\n    // Check if PDF.js is supported\n    const checkPDFSupport = async () => {\n      const supported = await isPDFSupported();\n      setPdfSupported(supported);\n    };\n\n    checkPDFSupport();\n\n    // Fetch CSRF token if needed\n    const fetchCSRFToken = async () => {\n      try {\n        const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n        // Check if CSRF token already exists\n        if (!Cookies.get('csrftoken')) {\n          console.log('No CSRF token found, fetching a new one...');\n          const response = await axios.get(`${backendUrl}/api/get_csrf_token/`, {\n            withCredentials: true\n          });\n          if (response.status === 200) {\n            const token = Cookies.get('csrftoken');\n            console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\n          } else {\n            console.warn('Failed to fetch CSRF token:', response.status);\n          }\n        } else {\n          console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\n        }\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n        // Continue without CSRF token - backend will handle exempt views\n      }\n    };\n\n    fetchCSRFToken();\n  }, []);\n\n  const handleTextChange = (e) => {\n    setText(e.target.value);\n  };\n\n  const handlePlay = () => {\n    if (!text.trim()) {\n      setError('Please enter text or upload a file first');\n      return;\n    }\n\n    setError('');\n    setIsPlaying(true);\n    setIsPaused(false);\n\n    // Here we would use the selectedModel to determine which voice to use\n    // For now, using the browser's default speech synthesis\n    speak({\n      text,\n      onend: () => {\n        setIsPlaying(false);\n        setIsPaused(false);\n      }\n    });\n  };\n\n  const handlePause = () => {\n    if (speaking) {\n      if (isPaused) {\n        resume();\n        setIsPaused(false);\n      } else {\n        pause();\n        setIsPaused(true);\n      }\n    }\n  };\n\n  const handleStop = () => {\n    cancel();\n    setIsPlaying(false);\n    setIsPaused(false);\n  };\n\n  const handleClearText = () => {\n    setText('');\n    setFileName('');\n    setError('');\n    setAudioFile(null);\n    setAudioUrl('');\n    cancel();\n    setIsPlaying(false);\n    setIsPaused(false);\n  };\n\n  const handleCopyText = () => {\n    if (text) {\n      navigator.clipboard.writeText(text);\n    }\n  };\n\n  const processFile = async (file) => {\n    if (!file) return;\n\n    setIsLoading(true);\n    setError('');\n    setFileName(file.name);\n    setAudioFile(null);\n    setAudioUrl('');\n\n    // Check if it's a PDF file\n    if (file.type === 'application/pdf') {\n      if (!pdfSupported) {\n        setError('PDF support is available but requires additional configuration. Please check the console for details.');\n        console.error('PDF.js library installed but not properly configured. Check worker path.');\n        setIsLoading(false);\n        return;\n      }\n\n      try {\n        const extractedText = await extractTextFromPDF(file);\n        setText(extractedText);\n        setIsLoading(false);\n      } catch (err) {\n        console.error('PDF parsing error:', err);\n        setError('Error processing PDF file: ' + (err.message || 'Unknown error'));\n        setIsLoading(false);\n      }\n    }\n    // Handle text files\n    else if (file.type === 'text/plain') {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setText(e.target.result);\n        setIsLoading(false);\n      };\n      reader.onerror = (e) => {\n        console.error('File reading error:', e);\n        setError('Error reading file: ' + (e.target.error?.message || 'Unknown error'));\n        setIsLoading(false);\n      };\n      reader.readAsText(file);\n    } else {\n      setError('Please upload a PDF or text file (.pdf or .txt)');\n      setIsLoading(false);\n    }\n  };\n\n  const onDrop = useCallback((acceptedFiles) => {\n    if (acceptedFiles.length > 0) {\n      processFile(acceptedFiles[0]);\n    }\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/plain': ['.txt']\n    },\n    multiple: false\n  });\n\n  const handleModelChange = (event) => {\n    setSelectedModel(event.target.value);\n  };\n\n  // Function to convert text to speech using the backend API\n  const handleConvertToSpeech = async () => {\n    // Check if user is logged in\n    if (!user) {\n      setAuthDialogOpen(true); // Open the Auth Dialog\n      return;\n    }\n\n    if (!text.trim()) {\n      setError('Please enter text or upload a file first');\n      return;\n    }\n\n    // Check user balance\n    if (user.balance <= 0) {\n      dispatch(topupModalShow());\n      return;\n    }\n\n    try {\n      setIsConverting(true);\n      setError('');\n\n      // Create form data\n      const formData = new FormData();\n      formData.append('text', text);\n      formData.append('model', selectedModel);\n      if (user && user.id) {\n        formData.append('user_id', user.id);\n      }\n\n      // Make API call to backend - use the full backend URL\n      const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n      // Configure axios with proper headers\n      const response = await axios.post(`${backendUrl}/api/text_to_speech/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': Cookies.get('csrftoken') // Include the CSRF token in the headers\n        },\n        withCredentials: true\n      });\n\n      if (response.data && response.data.file_url) {\n        // Get the full URL for the audio file\n        const audioFileUrl = `${backendUrl}${response.data.file_url}`;\n        console.log('Audio URL:', audioFileUrl);\n\n        // Set the audio file information for download\n        setAudioFile({\n          url: audioFileUrl,\n          name: response.data.file_name\n        });\n\n        // Create audio URL for preview\n        setAudioUrl(audioFileUrl);\n      } else {\n        throw new Error('Invalid response from server');\n      }\n    } catch (error) {\n      console.error('Error converting text to speech:', error);\n      let errorMessage = 'Failed to convert text to speech. Please try again.';\n\n      if (error.response) {\n        console.error('Error response data:', error.response.data);\n        console.error('Error response status:', error.response.status);\n        errorMessage = error.response.data.error || errorMessage;\n      } else if (error.request) {\n        console.error('Error request:', error.request);\n        errorMessage = 'No response from server. Please check if the server is running.';\n      }\n\n      setError(errorMessage);\n    } finally {\n      setIsConverting(false);\n    }\n  };\n\n  // Function to download the generated audio file\n  const handleDownloadAudio = () => {\n    if (!audioFile || !audioFile.url) {\n      setError('No audio file available for download');\n      return;\n    }\n\n    try {\n      console.log('Downloading audio file:', audioFile);\n\n      // Get file name from the URL\n      const fileName = audioFile.name || audioFile.url.split('/').pop();\n\n      // Create direct download URL using the backend's download endpoint\n      const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n      let downloadUrl = `${backendUrl}/api/download_tts_file/?file_name=${fileName}`;\n\n      // Add user_id to download URL if available\n      if (user && user.id) {\n        downloadUrl += `&user_id=${user.id}`;\n      }\n\n      // Create a link with the CSRF token and open it\n      const link = document.createElement('a');\n      link.href = downloadUrl;\n      link.setAttribute('download', fileName);\n      link.setAttribute('target', '_blank');\n\n      // Add CSRF token to the request headers\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', downloadUrl, true);\n      xhr.setRequestHeader('X-CSRFToken', Cookies.get('csrftoken'));\n      xhr.responseType = 'blob';\n\n      xhr.onload = function() {\n        if (this.status === 200) {\n          const blob = new Blob([this.response], { type: 'audio/mpeg' });\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.style.display = 'none';\n          a.href = url;\n          a.download = fileName;\n          document.body.appendChild(a);\n          a.click();\n          window.URL.revokeObjectURL(url);\n        } else {\n          // Fallback method if XHR fails\n          window.open(downloadUrl, '_blank');\n        }\n      };\n\n      xhr.onerror = function() {\n        // Fallback method if XHR fails\n        window.open(downloadUrl, '_blank');\n      };\n\n      xhr.send();\n\n    } catch (error) {\n      console.error('Error initiating download:', error);\n      setError(`Failed to initiate download: ${error.message}`);\n\n      // Fallback method if the first one fails\n      if (audioFile && audioFile.url) {\n        window.location.href = audioFile.url;\n      }\n    }\n  };\n\n  if (!supported) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Alert severity=\"error\" sx={{ mb: 3, background: 'transparent', color: 'red' }}>\n          Your browser does not support the Speech Synthesis API. Please try a different browser.\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Text to Speech | OneDollarAI</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.background.default, 0.9) : alpha(theme.palette.grey[100], 0.9),\n          pt: 3,\n          pb: 6\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom color=\"black\" sx={{ fontSize: '2rem', fontWeight: 600 }}>\n            Text to Speech\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"black\" sx={{ mb: 4 }}>\n            Convert your text to natural-sounding speech or upload a document to listen to it.\n          </Typography>\n\n          <Card\n            elevation={0}\n            sx={{\n              borderRadius: 2,\n              overflow: 'hidden',\n              backgroundColor: '#fff',\n              border: '1px solid',\n              borderColor: alpha(theme.palette.grey[300], 0.5),\n            }}\n          >\n            <CardContent sx={{ p: { xs: 2, md: 3 } }}>\n              {!pdfSupported && (\n                <Alert severity=\"warning\" sx={{ mb: 3, background: 'transparent', color: 'orange' }}>\n                  PDF support is not available. We've installed the library but it may need additional configuration.\n                </Alert>\n              )}\n\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 3, background: 'transparent', color: 'red' }}>\n                  {error}\n                </Alert>\n              )}\n\n              {/* Row 1: Text Area */}\n              {isLoading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                  <CircularProgress />\n                </Box>\n              ) : (\n                <Box sx={{ mb: 3, position: 'relative' }}>\n                  <TextField\n                    placeholder=\"Enter text to convert to speech\"\n                    multiline\n                    rows={6}\n                    fullWidth\n                    value={text}\n                    onChange={handleTextChange}\n                    variant=\"outlined\"\n                    InputProps={{\n                      style: { color: 'black' }\n                    }}\n                    sx={{\n                      backgroundColor: alpha(theme.palette.grey[100], 0.5),\n                      '& .MuiOutlinedInput-root': {\n                        '& fieldset': {\n                          borderColor: 'rgba(0, 0, 0, 0.1)',\n                        },\n                        '&:hover fieldset': {\n                          borderColor: alpha(theme.palette.grey[400], 0.5),\n                        },\n                        '&.Mui-focused fieldset': {\n                          borderColor: theme.palette.primary.main,\n                        },\n                      },\n                    }}\n                  />\n                  <Box sx={{ position: 'absolute', right: 8, top: 8, display: 'flex' }}>\n                    <Tooltip title=\"Copy text\">\n                      <BlackIcon>\n                        <IconButton onClick={handleCopyText} disabled={!text} sx={{ color: 'black' }}>\n                          <ContentCopyIcon fontSize=\"small\" />\n                        </IconButton>\n                      </BlackIcon>\n                    </Tooltip>\n                    <Tooltip title=\"Clear text\">\n                      <BlackIcon>\n                        <IconButton onClick={handleClearText} disabled={!text} sx={{ color: 'black' }}>\n                          <ClearIcon fontSize=\"small\" />\n                        </IconButton>\n                      </BlackIcon>\n                    </Tooltip>\n                  </Box>\n                </Box>\n              )}\n\n              {/* Row 2: Upload Area and Voice Model Selection */}\n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                {/* PDF Upload Area */}\n                <Grid item xs={12} md={6}>\n                  <UploadArea {...getRootProps()} isDragActive={isDragActive} variant=\"outlined\">\n                    <input {...getInputProps()} />\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                      <BlackIcon>\n                        <UploadFileIcon sx={{ fontSize: 28, mr: 2 }} />\n                      </BlackIcon>\n                      <Box>\n                        <Typography variant=\"body2\" color=\"black\">\n                          {isDragActive ? \"Drop the file here...\" : \"Attach File  PDF AND TXT FILES\"}\n                        </Typography>\n\n                        {fileName && (\n                          <Typography variant=\"caption\" color=\"black\" sx={{ fontWeight: 'bold' }}>\n                            Current file: {fileName}\n                          </Typography>\n                        )}\n                      </Box>\n                    </Box>\n                  </UploadArea>\n                </Grid>\n\n                {/* Voice Model Selection */}\n                <Grid item xs={12} md={6}>\n                  <Box>\n                    <FormControl\n                      fullWidth\n                      variant=\"outlined\"\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: alpha(theme.palette.grey[100], 0.5),\n                        '& .MuiOutlinedInput-root': {\n                          color: 'black',\n                          '& fieldset': {\n                            borderColor: 'rgba(0, 0, 0, 0.1)',\n                          },\n                          '&:hover fieldset': {\n                            borderColor: alpha(theme.palette.grey[400], 0.5),\n                          },\n                          '&.Mui-focused fieldset': {\n                            borderColor: theme.palette.primary.main,\n                          },\n                        }\n                      }}\n                    >\n                      <StyledSelect\n                        value={selectedModel}\n                        onChange={handleModelChange}\n                        displayEmpty\n                        renderValue={(selected) => {\n                          const selectedVoice = voiceModels.find(model => model.id === selected);\n                          return (\n                            <Typography\n                              variant=\"body1\"\n                              sx={{\n                                color: 'black !important',\n                                fontWeight: 500,\n                                whiteSpace: 'nowrap',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                display: 'flex',\n                                alignItems: 'center',\n                                height: '100%'\n                              }}\n                            >\n                              {selectedVoice ? selectedVoice.label : 'Select Voice Model'}\n                            </Typography>\n                          );\n                        }}\n                        MenuProps={{\n                          PaperProps: {\n                            sx: {\n                              borderRadius: 2,\n                              boxShadow: '0 8px 16px rgba(0, 0, 0, 0.1)',\n                              '.MuiList-root': {\n                                padding: '4px 0',\n                              },\n                            },\n                          },\n                          anchorOrigin: {\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                          },\n                          transformOrigin: {\n                            vertical: 'top',\n                            horizontal: 'left',\n                          },\n                        }}\n                      >\n                        {voiceModels.map((model) => (\n                          <StyledMenuItem key={model.id} value={model.id}>\n                            <Typography variant=\"body2\" sx={{ color: 'black !important' }}>\n                              {model.label}\n                            </Typography>\n                          </StyledMenuItem>\n                        ))}\n                      </StyledSelect>\n                    </FormControl>\n                  </Box>\n                </Grid>\n              </Grid>\n\n              {/* Audio preview if available */}\n              {audioUrl && (\n                <Box sx={{ mb: 4, p: 2, backgroundColor: alpha(theme.palette.primary.light, 0.05), borderRadius: 1 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\n                    <Typography variant=\"subtitle2\" color=\"black\" sx={{ fontWeight: 600 }}>\n                      Audio Preview\n                    </Typography>\n\n                  </Box>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    <BlackIcon>\n                      <AudioFileIcon />\n                    </BlackIcon>\n                    <Box sx={{ width: '100%' }}>\n                      <AudioPlayer\n                        src={audioUrl}\n                        filename={audioFile ? audioFile.name : null}\n                      />\n                    </Box>\n                  </Box>\n                </Box>\n              )}\n\n              {/* Controls */}\n              <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, flexWrap: 'wrap' }}>\n                <ControlButton\n                  variant=\"contained\"\n                  onClick={handleConvertToSpeech}\n                  disabled={isConverting}\n                  startIcon={isConverting ?\n                    <CircularProgress size={20} sx={{ color: 'black' }} /> :\n                    <BlackIcon sx={{ display: 'inline-flex' }}><AudioFileIcon /></BlackIcon>\n                  }\n                  size=\"large\"\n                >\n                  {!user ? 'Login Required' : user.balance <= 0 ? 'Insufficient Balance' : isConverting ? 'Converting...' : 'Convert to Audio'}\n                </ControlButton>\n                {audioFile && (\n                  <ControlButton\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    onClick={handleDownloadAudio}\n                    startIcon={<BlackIcon sx={{ display: 'inline-flex' }}><DownloadIcon /></BlackIcon>}\n                    size=\"large\"\n                    sx={{\n                      bgcolor: theme.palette.grey[200],\n                      '&:hover': {\n                        bgcolor: theme.palette.grey[300],\n                      }\n                    }}\n                  >\n                    Download Audio\n                  </ControlButton>\n                )}\n              </Box>\n\n              {!user && (\n                <Box sx={{ mt: 3, p: 2, backgroundColor: alpha(theme.palette.info.light, 0.1), borderRadius: 1 }}>\n                  <Typography variant=\"body2\" color=\"black\" align=\"center\">\n                    Please log in to use the text-to-speech conversion feature\n                  </Typography>\n                </Box>\n              )}\n\n              {user && user.balance <= 0 && (\n                <Box sx={{ mt: 3, p: 2, backgroundColor: alpha(theme.palette.warning.light, 0.1), borderRadius: 1 }}>\n                  <Typography variant=\"body2\" color=\"black\" align=\"center\">\n                    Your balance is insufficient. Please top up to use the text-to-speech conversion feature.\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n\n      {/* Auth Dialog */}\n      <AuthDialogContent\n        isMainDialogOpen={isAuthDialogOpen}\n        closeMainDialog={() => setAuthDialogOpen(false)}\n        switchBetweenDialogs={() => {}}\n        isSecondaryDialogOpen={false}\n        closeSecondaryDialog={() => {}}\n        renderActiveFormComponent={() => {}}\n      />\n    </>\n  );\n};\n\nexport default TextToSpeech;\n","/**\n * PDF Parser Utility\n * \n * This utility uses PDF.js to extract text from PDF files.\n * Note: You need to install the pdfjs-dist package to use this utility:\n * npm install pdfjs-dist\n */\n\n// The PDF.js library needs to be installed with:\n// npm install pdfjs-dist\n\n/**\n * Extracts text from a PDF file\n * @param {File} file - The PDF file to extract text from\n * @returns {Promise<string>} - The extracted text\n */\nexport const extractTextFromPDF = async (file) => {\n  try {\n    // Dynamic import of pdfjs-dist\n    const pdfjs = await import('pdfjs-dist/build/pdf');\n    const pdfjsWorker = await import('pdfjs-dist/build/pdf.worker.entry');\n    \n    // Set worker source\n    pdfjs.GlobalWorkerOptions.workerSrc = pdfjsWorker;\n    \n    // Read the file as an ArrayBuffer\n    const arrayBuffer = await file.arrayBuffer();\n    \n    // Load the PDF document\n    const loadingTask = pdfjs.getDocument(arrayBuffer);\n    const pdf = await loadingTask.promise;\n    \n    let fullText = '';\n    \n    // Extract text from each page\n    for (let i = 1; i <= pdf.numPages; i++) {\n      const page = await pdf.getPage(i);\n      const textContent = await page.getTextContent();\n      const pageText = textContent.items.map(item => item.str).join(' ');\n      fullText += pageText + '\\n\\n';\n    }\n    \n    return fullText.trim();\n  } catch (error) {\n    console.error('Error parsing PDF:', error);\n    throw new Error('Failed to extract text from PDF: ' + (error.message || 'Unknown error'));\n  }\n};\n\n/**\n * Check if the browser supports PDF.js\n * @returns {Promise<boolean>} - True if PDF.js is supported, false otherwise\n */\nexport const isPDFSupported = async () => {\n  try {\n    await import('pdfjs-dist/build/pdf');\n    return true;\n  } catch (error) {\n    console.error('PDF.js not supported:', error);\n    return false;\n  }\n}; "],"names":["styled","Box","_ref","theme","spacing","BlackIcon","color","AudioPlayer","_ref2","src","filename","audioRef","useRef","isPlaying","setIsPlaying","useState","hasError","setHasError","duration","setDuration","currentTime","setCurrentTime","formatTime","time","minutes","Math","floor","seconds","_jsxs","sx","width","children","_jsx","ref","onTimeUpdate","handleTimeUpdate","current","onLoadedMetadata","handleLoadedMetadata","onError","e","console","error","onEnded","style","display","alignItems","justifyContent","p","borderRadius","bgcolor","alpha","Typography","variant","IconButton","size","onClick","handleRetry","load","RefreshIcon","fontSize","gap","handlePlayPause","pause","play","catch","err","disabled","PauseIcon","PlayArrowIcon","flexGrow","height","position","left","top","VolumeUpIcon","mt","StyledMenuItem","MenuItem","_ref3","fontWeight","padding","backgroundColor","palette","primary","main","StyledSelect","Select","_ref4","ControlButton","Container","maxHeight","overflow","background","Button","_ref5","minWidth","boxShadow","grey","borderColor","common","black","UploadArea","Paper","_ref6","isDragActive","cursor","border","transition","voiceModels","id","label","TextToSpeech","useTheme","user","useAuth","dispatch","useDispatch","text","setText","isPaused","setIsPaused","selectedModel","setSelectedModel","isLoading","setIsLoading","setError","pdfSupported","setPdfSupported","fileName","setFileName","isConverting","setIsConverting","audioFile","setAudioFile","audioUrl","setAudioUrl","isAuthDialogOpen","setAuthDialogOpen","speak","cancel","speaking","supported","voices","resume","useSpeechSynthesis","useEffect","async","isPDFSupported","checkPDFSupport","backendUrl","process","Cookies","get","log","response","axios","withCredentials","status","token","warn","fetchCSRFToken","processFile","file","name","type","extractedText","pdfjs","pdfjsWorker","GlobalWorkerOptions","workerSrc","arrayBuffer","loadingTask","getDocument","pdf","promise","fullText","i","numPages","page","getPage","getTextContent","items","map","item","str","join","trim","Error","message","extractTextFromPDF","reader","FileReader","onload","target","result","onerror","_e$target$error","readAsText","onDrop","useCallback","acceptedFiles","length","getRootProps","getInputProps","useDropzone","accept","multiple","_Fragment","Helmet","mode","default","pt","pb","maxWidth","component","gutterBottom","mb","Card","elevation","CardContent","xs","md","Alert","severity","my","CircularProgress","TextField","placeholder","multiline","rows","fullWidth","value","onChange","InputProps","right","Tooltip","title","handleCopyText","navigator","clipboard","writeText","ContentCopyIcon","handleClearText","ClearIcon","Grid","container","UploadFileIcon","mr","FormControl","event","displayEmpty","renderValue","selected","selectedVoice","find","model","whiteSpace","textOverflow","MenuProps","PaperProps","anchorOrigin","vertical","horizontal","transformOrigin","light","AudioFileIcon","flexWrap","balance","topupModalShow","formData","FormData","append","post","headers","data","file_url","audioFileUrl","url","file_name","errorMessage","request","startIcon","handleDownloadAudio","split","pop","downloadUrl","link","document","createElement","href","setAttribute","xhr","XMLHttpRequest","open","setRequestHeader","responseType","this","blob","Blob","window","URL","createObjectURL","a","download","body","appendChild","click","revokeObjectURL","send","location","DownloadIcon","info","align","warning","AuthDialogContent","isMainDialogOpen","closeMainDialog","switchBetweenDialogs","isSecondaryDialogOpen","closeSecondaryDialog","renderActiveFormComponent"],"sourceRoot":""}