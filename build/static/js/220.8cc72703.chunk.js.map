{"version":3,"file":"static/js/220.8cc72703.chunk.js","mappings":"gJAIA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,sCACD,M,kOCoCJ,MAAMC,EAAaC,IAAqE,IAApE,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,EAAW,aAAY,SAAEC,GAAW,GAAOJ,EAC9E,MAAMK,GAASC,EAAAA,EAAAA,QAAO,MAChBC,GAAaD,EAAAA,EAAAA,QAAO,MAEpBE,GAAuBC,EAAAA,EAAAA,cAAaC,IACtC,OAAQA,GACJ,IAAK,SACD,OAAOC,EAAAA,EAAAA,MACX,IAAK,OACD,OAAOC,EAAAA,EAAAA,KACX,IAAK,MACD,OAAOC,EAAAA,EAAAA,KACX,IAAK,KACD,OAAOC,EAAAA,EAAeC,OAAOC,EAAAA,IACjC,IAAK,OACD,OAAOC,EAAAA,EAAAA,KACX,IAAK,MACD,OAAOC,EAAAA,EAAAA,MACX,QACI,OAAOC,EAAAA,EAAAA,IAAW,CAAEC,YAAY,IACxC,GACD,IAiEH,OA/DAC,EAAAA,EAAAA,YAAU,KAAO,IAADC,EACZ,IAAKjB,EAAOkB,QAAS,OAErB,MAAMC,EAAiBC,EAAAA,GAAWD,eAAeE,IAAIC,IACjD,GAAIA,EAAOC,WAAY,CACnB,MACMC,EADMF,EAAOG,MAAMC,IACLC,WACZ,OAAR9B,QAAQ,IAARA,GAAAA,EAAW2B,EACf,KAGEI,EAAaC,EAAAA,GAAYC,OAAO,CAClCJ,IAAK9B,EACLmC,WAAY,CACRC,EAAAA,GACA7B,EAAqBL,GACrBmC,EAAAA,IACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,KACAV,EAAAA,GAAYW,wBAAwBnB,IAAG,IACvCoB,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,IAAmBC,EAAAA,KACnBC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,MACAhC,EACAC,EAAAA,GAAWgC,aACXC,EAAAA,GAAOhC,GAAG,IACHiC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,MACAC,EAAAA,QAKf1D,EAAWgB,QAAU,IAAIE,EAAAA,GAAW,CAChCK,MAAOG,EACPiC,OAAQ7D,EAAOkB,UAGnB,MAAM4C,EAAyB,QAAjB7C,EAAGjB,EAAOkB,eAAO,IAAAD,OAAA,EAAdA,EAAgB8C,cAAc,cAK/C,OAJID,IACAA,EAASE,MAAMC,OAAS,QAGrB,KAAO,IAADC,EACS,QAAlBA,EAAAhE,EAAWgB,eAAO,IAAAgD,GAAlBA,EAAoBC,SAAS,CAChC,GACF,CAAChE,EAAsBL,KAGtBN,EAAAA,EAAAA,KAAA,OACI4E,IAAKpE,EACLgE,MAAO,CACHK,OAAQ,iBACRC,SAAU,EACVL,OAAQ,OACRM,UAAW,OACXC,SAAU,SAEhB,EAWV9E,EAAW+E,aAAe,CACtB7E,MAAO,GACPE,SAAU,aACVC,UAAU,GAGd,S,yDCvJA,SAAeR,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,0KACD,S,yDCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,uIACD,O,yDCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mNACD,a,+QCJG,SAASiF,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,IAAqB,oBAAqBD,EACnD,EAC8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,wB,aCDnF,MAAMC,EAAY,CAAC,aAoBbC,GAAqBC,EAAAA,EAAAA,IAAO,MAAO,CACvCC,KAAM,oBACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAACC,EAAOE,KAAgC,eAA1BD,EAAWE,YAA+BH,EAAOI,oBAAoB,GAPnER,EASxBrF,IAAA,IAAC,WACF0F,GACD1F,EAAA,OAAK8F,EAAAA,EAAAA,GAAS,CACbC,SAAU,GACVC,WAAY,GACe,eAA1BN,EAAWE,YAA+B,CAC3CK,UAAW,GACX,IA+CF,EA1CoCC,EAAAA,YAAiB,SAAwBC,EAAS1B,GACpF,MAAMe,GAAQY,EAAAA,EAAAA,GAAgB,CAC5BZ,MAAOW,EACPb,KAAM,uBAEF,UACFe,GACEb,EACJc,GAAQC,EAAAA,EAAAA,GAA8Bf,EAAOL,GACzCqB,EAAUN,EAAAA,WAAiBO,EAAAA,GAC3Bf,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAGN,EAAO,CACrCI,WAAYY,EAAQZ,aAEhBc,EA5CkBhB,KACxB,MAAM,WACJE,EAAU,QACVc,GACEhB,EACEiB,EAAQ,CACZhB,KAAM,CAAC,OAAuB,eAAfC,GAA+B,wBAEhD,OAAOgB,EAAAA,EAAAA,GAAeD,EAAO5B,EAA+B2B,EAAQ,EAoCpDG,CAAkBnB,GAClC,OAAoB7F,EAAAA,EAAAA,KAAKuF,GAAoBU,EAAAA,EAAAA,GAAS,CACpDO,WAAWS,EAAAA,EAAAA,GAAKJ,EAAQf,KAAMU,GAC9BX,WAAYA,EACZjB,IAAKA,GACJ6B,GACL,I,wMC5DA,SAAe1G,E,QAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,uCACD,W,qDC2CJ,MAAMiH,IAAc1B,EAAAA,EAAAA,IAAO2B,EAAAA,EAAP3B,EAAYrF,IAAA,IAAC,MAAEiH,GAAOjH,EAAA,MAAM,CAC5CkH,QAAS,OACTC,MAAO,OACPC,cAAe,SACfC,UAAW,iBAAiBJ,EAAMK,OAAOC,gBACzC,CAACN,EAAMO,YAAYC,GAAG,OAAQ,CAC1BJ,UAAW,iBAAiBJ,EAAMK,OAAOhD,WAEhD,IAEKoD,GAAWC,IAAA,IAAC,SAAEC,EAAQ,MAAE3H,EAAK,MAAE4H,KAAUvB,GAAOqB,EAAA,OAClD9H,EAAAA,EAAAA,KAAA,OACIiI,KAAK,WACLC,OAAQ9H,IAAU4H,EAClBG,GAAI,0BAA0BH,IAC9B,kBAAiB,qBAAqBA,OAClCvB,EAAKsB,SAER3H,IAAU4H,IAAShI,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACiB,GAAI,CAAEC,EAAG,GAAIN,SAAEA,KACtC,EAurBV,GAprB6BO,KACzB,MAAM,UAAEC,IAAcC,EAAAA,EAAAA,KAChBC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,OAEVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,OAChCC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,KAChDO,EAASC,IAAcR,EAAAA,EAAAA,WAAS,IAChCS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,IAClCW,GAAuBC,KAA4BZ,EAAAA,EAAAA,WAAS,IAC5Da,GAAiBC,KAAsBd,EAAAA,EAAAA,UAAS,CAAEe,MAAO,GAAI7B,KAAM,SAAU8B,UAAU,EAAOC,aAAa,KAC3GC,GAAqBC,KAA0BnB,EAAAA,EAAAA,WAAS,IACxDoB,GAAYC,KAAiBrB,EAAAA,EAAAA,UAAS,CAAE/G,QAAS,GAAIqI,mBAAoB,GAAIC,SAAU,MACvFC,GAAiBC,KAAsBzB,EAAAA,EAAAA,UAAS,OAChD0B,GAAcC,KAAmB3B,EAAAA,EAAAA,WAAS,IAC1C4B,GAAcC,KAAmB7B,EAAAA,EAAAA,UAAS,KAC1C8B,GAAUC,KAAe/B,EAAAA,EAAAA,UAAS,CACrCgC,MAAM,EACNC,QAAS,GACTC,SAAU,aAGdzJ,EAAAA,EAAAA,YAAU,KACN0J,IAAiB,GAClB,CAAC3C,IAEJ,MAAM2C,GAAkBC,UACpB,IACI5B,GAAW,GACX,MAAO6B,EAAYC,EAAkBC,EAAaC,SAAoBC,QAAQC,IAAI,CAC9EC,GAAAA,EAAeC,WAAWpD,GAC1BmD,GAAAA,EAAeE,iBAAiBrD,GAChCmD,GAAAA,EAAeG,mBAAmBtD,GAClCmD,GAAAA,EAAeI,mBAAmBvD,KAGtCO,EAAWsC,EAAWW,MACtB9C,EAAiBoC,EAAiBU,MAClC5C,EAAYmC,EAAYS,MACxB1C,EAAmBkC,EAAWQ,KAClC,CAAE,MAAOC,GACLC,QAAQD,MAAM,8BAA+BA,GAC7ClB,GAAY,CACRC,MAAM,EACNC,QAAS,8BACTC,SAAU,SAElB,CAAC,QACG1B,GAAW,EACf,GAgEE2C,GAAuBf,UACzB,UACUO,GAAAA,EAAeS,sBAAsB5D,EAAW6D,GACtDlB,KACAJ,GAAY,CACRC,MAAM,EACNC,QAAS,iCACTC,SAAU,WAElB,CAAE,MAAOe,GACLC,QAAQD,MAAM,2BAA4BA,GAC1ClB,GAAY,CACRC,MAAM,EACNC,QAAS,4BACTC,SAAU,SAElB,GA4CEoB,GAAgBpE,IAClB,OAAQA,GACJ,IAAK,QAAS,MAAO,QACrB,IAAK,SAAU,MAAO,UACtB,IAAK,SAAU,MAAO,OACtB,QAAS,MAAO,UACpB,EAOJ,GAAIqB,EACA,OACItJ,EAAAA,EAAAA,KAACkH,GAAW,CAAAa,UACR/H,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiF,eAAgB,SAAUvG,WAAY,SAAUtB,OAAQ,QAASsD,UACzF/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACnE,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,sCAMpD,IAAKc,EACD,OACI7I,EAAAA,EAAAA,KAACkH,GAAW,CAAAa,UACR/H,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiF,eAAgB,SAAUvG,WAAY,SAAUtB,OAAQ,QAASsD,UACzF/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACnE,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,0BAMpD,MAAM0E,GAAU5D,EAAQ6D,MAAMvE,MAAW,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMR,IACrCwE,GAAiB3D,EAAc4D,MAAKC,GAAUA,EAAOlE,KAAKR,MAAW,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMR,MAE7E,OAAKsE,IAAYE,IAWbG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhF,SAAA,EACI/H,EAAAA,EAAAA,KAACgN,EAAAA,GAAM,CAAAjF,UACH+E,EAAAA,EAAAA,MAAA,SAAA/E,SAAA,CAAO,mBAAiBc,EAAQoE,MAAM,uBAG1CjN,EAAAA,EAAAA,KAACkH,GAAW,CAAAa,UACR+E,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAACC,SAAS,KAAIpF,SAAA,EAEpB/H,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACiB,GAAI,CAAEgF,GAAI,EAAGC,GAAI,GAAItF,UACtB+E,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQtB,WAAY,SAAUuH,IAAK,EAAGD,GAAI,GAAItF,SAAA,EAC9D/H,EAAAA,EAAAA,KAACuN,EAAAA,EAAU,CACPC,QAASA,IAAM/E,EAAS,YAAYF,KACpCH,GAAI,CAAEoE,MAAO,SAAUzE,UAEvB/H,EAAAA,EAAAA,KAACyN,EAAAA,EAAQ,OAEbX,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,KAAKC,UAAU,KAAKvF,GAAI,CAAEoE,MAAO,SAAUzE,SAAA,CAAC,mBAC3Cc,EAAQoE,eAMrCH,EAAAA,EAAAA,MAACc,EAAAA,EAAI,CAAA7F,SAAA,EACD/H,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACiB,GAAI,CAAEyF,aAAc,EAAGC,YAAa,WAAY/F,UACjD+E,EAAAA,EAAAA,MAACiB,EAAAA,EAAI,CACD3N,MAAOoJ,EACPnJ,SAAUA,CAAC2N,EAAGC,IAAaxE,EAAYwE,GACvC7F,GAAI,CACA,iBAAkB,CACdoE,MAAO,QACP,iBAAkB,CACdA,MAAO,WAGjBzE,SAAA,EAEF/H,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,mBACXnO,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,cACXnO,EAAAA,EAAAA,KAACkO,EAAAA,EAAG,CAACC,MAAM,yBAKnBrB,EAAAA,EAAAA,MAACjF,GAAQ,CAACzH,MAAOoJ,EAAUxB,MAAO,EAAED,SAAA,EAChC+E,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiF,eAAgB,gBAAiBvG,WAAY,SAAUsH,GAAI,GAAItF,SAAA,EACvF/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACmB,QAAQ,KAAKtF,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,0BAGhD0E,KACGzM,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHV,QAAQ,YACRW,WAAWrO,EAAAA,EAAAA,KAACsO,EAAAA,EAAO,IACnBd,QAASA,IAAM7D,IAAyB,GACxCvB,GAAI,CACAmG,gBAAiB,QACjB/B,MAAO,QACP,UAAW,CACP+B,gBAAiB,uBAEvBxG,SACL,yBAMT/H,EAAAA,EAAAA,KAACwO,EAAAA,EAAI,CAAAzG,SACAiB,EAAcyF,KAAKC,IAChB5B,EAAAA,EAAAA,MAAC6B,EAAAA,GAAQ,CAELvG,GAAI,CACAvD,OAAQ,EACRiJ,YAAa,UACbc,aAAc,EACdvB,GAAI,GAERwB,gBACIpC,KACIzM,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACH5B,MAAM,QACNgB,QAASA,IApOxBrC,WAC7B,UACUO,GAAAA,EAAeoD,mBAAmBvG,EAAWwG,GACnD7D,KACAJ,GAAY,CACRC,MAAM,EACNC,QAAS,qCACTC,SAAU,WAElB,CAAE,MAAOe,GACLC,QAAQD,MAAM,+BAAgCA,GAC9ClB,GAAY,CACRC,MAAM,EACNC,QAAS,gCACTC,SAAU,SAElB,GAoN2D+D,CAAyBN,EAAa/F,KAAKR,IAAIJ,SACjE,WAIRA,SAAA,EAED/H,EAAAA,EAAAA,KAACiP,EAAc,CAAAlH,UACX/H,EAAAA,EAAAA,KAACkP,EAAAA,EAAM,CAAAnH,UACH/H,EAAAA,EAAAA,KAACmP,EAAAA,EAAU,SAGnBnP,EAAAA,EAAAA,KAACoP,EAAAA,EAAY,CACTC,SACIvC,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQtB,WAAY,SAAUuH,IAAK,GAAIvF,SAAA,EACvD+E,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,SAAUzE,SAAA,CAC9C2G,EAAa/F,KAAK2G,WAAW,IAAEZ,EAAa/F,KAAK4G,cAEtDvP,EAAAA,EAAAA,KAACwP,EAAAA,EAAI,CACDrB,MAAOO,EAAazG,KACpBwH,KAAK,QACLjD,MAAOH,GAAaqC,EAAazG,WAI7CyH,WACI5C,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAAAY,SAAA,EACA/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,SAAUzE,SAC9C2G,EAAa/F,KAAKmB,SAEvBgD,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiG,IAAK,EAAGF,GAAI,GAAIrF,SAAA,CACvC2G,EAAa3E,WACV/J,EAAAA,EAAAA,KAACwP,EAAAA,EAAI,CAACrB,MAAM,WAAWsB,KAAK,QAAQjD,MAAM,YAE7CkC,EAAa1E,cACVhK,EAAAA,EAAAA,KAACwP,EAAAA,EAAI,CAACrB,MAAM,cAAcsB,KAAK,QAAQjD,MAAM,UAEhDkC,EAAaiB,YACV3P,EAAAA,EAAAA,KAACwP,EAAAA,EAAI,CAACrB,MAAM,SAASsB,KAAK,QAAQjD,MAAM,mBAjDvDkC,EAAavG,YA6DlC2E,EAAAA,EAAAA,MAACjF,GAAQ,CAACzH,MAAOoJ,EAAUxB,MAAO,EAAED,SAAA,EAChC+E,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiF,eAAgB,gBAAiBvG,WAAY,SAAUsH,GAAI,GAAItF,SAAA,EACvF/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACmB,QAAQ,KAAKtF,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,qBAGhD4E,KACG3M,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHV,QAAQ,YACRW,WAAWrO,EAAAA,EAAAA,KAACsO,EAAAA,EAAO,IACnBd,QAASA,IAAMtD,IAAuB,GACtC9B,GAAI,CACAmG,gBAAiB,QACjB/B,MAAO,QACP,UAAW,CACP+B,gBAAiB,uBAEvBxG,SACL,2BAMT/H,EAAAA,EAAAA,KAAC4P,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE/H,SACtBmB,EAASuF,KAAKsB,IACX/P,SAAAA,EAAAA,KAAC4P,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAEnI,UACrB/H,EAAAA,EAAAA,KAAC4N,EAAAA,EAAI,CAAA7F,UACD+E,EAAAA,EAAAA,MAACqD,EAAAA,EAAW,CAAApI,SAAA,EACR+E,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQtB,WAAY,SAAUuH,IAAK,EAAGD,GAAI,GAAItF,SAAA,EArMlFqI,EAsMwCL,EAAQM,aArMxD,WAATD,GAAoBpQ,EAAAA,EAAAA,KAACsQ,EAAAA,EAAQ,KAAMtQ,EAAAA,EAAAA,KAACuQ,EAAAA,EAAQ,MAsMPzD,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,KAAKtF,GAAI,CAAEoE,MAAO,SAAUzE,SAAA,CAAC,WACpCgI,EAAQS,eAAe,KAAGT,EAAQM,aAAa,OAE3DN,EAAQU,cACLzQ,EAAAA,EAAAA,KAACwP,EAAAA,EAAI,CACDkB,MAAM1Q,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAW,IAClBxC,MAAM,WACN3B,MAAM,UACNiD,KAAK,cAKjB3C,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,QAASa,GAAI,GAAItF,SAAA,CAAC,eAC1CgI,EAAQa,WAAWtB,WAAW,IAAES,EAAQa,WAAWrB,cAGpEzC,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,QAASa,GAAI,GAAItF,SAAA,CAAC,aAC7C8I,EAAAA,EAAAA,GAAoB,IAAIC,KAAKf,EAAQgB,YAAa,CAAEC,WAAW,OAG5EjB,EAAQkB,mBACLnE,EAAAA,EAAAA,MAACoE,EAAAA,EAAK,CAACjG,SAAS,QAAQ7C,GAAI,CAAEiF,GAAI,GAAItF,SAAA,CAAC,aACxBgI,EAAQkB,qBAI3BnE,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiG,IAAK,EAAG6D,SAAU,QAASpJ,SAAA,CAClD0E,IAAoC,YAAzBsD,EAAQM,cAA8BN,EAAQU,cACtDzQ,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHqB,KAAK,QACLpB,WAAWrO,EAAAA,EAAAA,KAACoR,EAAW,IACvB5D,QAASA,IAnQpCrC,WACzB,UACUO,GAAAA,EAAe2F,uBAAuB9I,EAAW6D,GACvDlB,KACAJ,GAAY,CACRC,MAAM,EACNC,QAAS,2CACTC,SAAU,WAElB,CAAE,MAAOe,GACLC,QAAQD,MAAM,2BAA4BA,GAC1ClB,GAAY,CACRC,MAAM,EACNC,QAAS,4BACTC,SAAU,SAElB,GAmPmEqG,CAAqBvB,EAAQ5H,IAC5CuF,QAAQ,WAAU3F,SACrB,sBAKJ0E,KAAYsD,EAAQU,cACjB3D,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAhF,SAAA,EACI/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHqB,KAAK,QACLpB,WAAWrO,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAW,IACvBnD,QAASA,IAAMtB,GAAqB6D,EAAQ5H,IAC5CqE,MAAM,UACNkB,QAAQ,WAAU3F,SACrB,aAGD/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHqB,KAAK,QACLpB,WAAWrO,EAAAA,EAAAA,KAACuR,EAAAA,EAAU,IACtB/D,QAASA,KACLhD,GAAmBuF,GACnBrF,IAAgB,EAAK,EAEzB8B,MAAM,QACNkB,QAAQ,WAAU3F,SACrB,uBAhEMgI,EAAQ5H,IAlM3CiI,KA2QC,UAKTtD,EAAAA,EAAAA,MAACjF,GAAQ,CAACzH,MAAOoJ,EAAUxB,MAAO,EAAED,SAAA,EAChC+E,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,KAAKtF,GAAI,CAAEoE,MAAO,QAASa,GAAI,GAAItF,SAAA,CAAC,mBACnCqB,EAAgBoI,OAAO,OAGhB,IAA3BpI,EAAgBoI,QACbxR,EAAAA,EAAAA,KAACkR,EAAAA,EAAK,CAACjG,SAAS,OAAMlD,SAAC,gCAEvB/H,EAAAA,EAAAA,KAAC4P,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE/H,SACtBqB,EAAgBqF,KAAKsB,IAClB/P,EAAAA,EAAAA,KAAC4P,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAGlI,UACd/H,EAAAA,EAAAA,KAAC4N,EAAAA,EAAI,CAAA7F,UACD+E,EAAAA,EAAAA,MAACqD,EAAAA,EAAW,CAAApI,SAAA,EACR+E,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQtB,WAAY,SAAUuH,IAAK,EAAGD,GAAI,GAAItF,SAAA,EAC9D/H,EAAAA,EAAAA,KAACuQ,EAAAA,EAAQ,KACTzD,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,KAAKtF,GAAI,CAAEoE,MAAO,SAAUzE,SAAA,CAAC,WACpCgI,EAAQS,eAAe,oBAIxC1D,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,QAASa,GAAI,GAAItF,SAAA,CAAC,iBACxCgI,EAAQa,WAAWtB,WAAW,IAAES,EAAQa,WAAWrB,cAGtEzC,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,QAASa,GAAI,GAAItF,SAAA,CAAC,eAC3C8I,EAAAA,EAAAA,GAAoB,IAAIC,KAAKf,EAAQgB,YAAa,CAAEC,WAAW,OAG9EjB,EAAQ/N,UACL8K,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEiF,GAAI,GAAItF,SAAA,EACf/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACmB,QAAQ,YAAYtF,GAAI,CAAEoE,MAAO,QAASa,GAAI,GAAItF,SAAC,sBAG/D/H,EAAAA,EAAAA,KAACyR,EAAAA,EAAK,CAACrJ,GAAI,CAAEC,EAAG,EAAGtD,UAAW,IAAKC,SAAU,QAAS+C,UAClD+E,EAAAA,EAAAA,MAACP,EAAAA,EAAU,CAACmB,QAAQ,QAAQtF,GAAI,CAAEoE,MAAO,SAAUzE,SAAA,CAC9CgI,EAAQ/N,QAAQ0P,UAAU,EAAG,KAAK,cAMlDjF,KACGK,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiG,IAAK,GAAIvF,SAAA,EACjC/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHC,WAAWrO,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAW,IACvBnD,QAASA,IAAMtB,GAAqB6D,EAAQ5H,IAC5CqE,MAAM,UACNkB,QAAQ,YAAW3F,SACtB,aAGD/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHC,WAAWrO,EAAAA,EAAAA,KAACuR,EAAAA,EAAU,IACtB/D,QAASA,KACLhD,GAAmBuF,GACnBrF,IAAgB,EAAK,EAEzB8B,MAAM,QACNkB,QAAQ,WAAU3F,SACrB,oBAjDGgI,EAAQ5H,oBAkE5D2E,EAAAA,EAAAA,MAAC6E,EAAAA,EAAM,CACH5G,KAAMrB,GACNkI,QAASA,IAAMjI,IAAyB,GACxCwD,SAAS,KACT0E,WAAS,EAAA9J,SAAA,EAET/H,EAAAA,EAAAA,KAAC8R,EAAAA,EAAW,CAAC1J,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,sBACrC+E,EAAAA,EAAAA,MAACiF,EAAAA,EAAa,CAAAhK,SAAA,EACV/H,EAAAA,EAAAA,KAACgS,EAAAA,EAAS,CACNH,WAAS,EACT1D,MAAM,QACN/N,MAAOwJ,GAAgBE,MACvBzJ,SAAW2N,GAAMnE,GAAmB,IAAKD,GAAiBE,MAAOkE,EAAEiE,OAAO7R,QAC1EgI,GAAI,CAAEiF,GAAI,EAAGD,GAAI,MAErBN,EAAAA,EAAAA,MAACkF,EAAAA,EAAS,CACNH,WAAS,EACTK,QAAM,EACN/D,MAAM,OACN/N,MAAOwJ,GAAgB3B,KACvB5H,SAAW2N,GAAMnE,GAAmB,IAAKD,GAAiB3B,KAAM+F,EAAEiE,OAAO7R,QACzEgI,GAAI,CAAEiF,GAAI,GAAItF,SAAA,EAEd/H,EAAAA,EAAAA,KAACmS,EAAAA,EAAQ,CAAC/R,MAAM,SAAQ2H,SAAC,YACzB/H,EAAAA,EAAAA,KAACmS,EAAAA,EAAQ,CAAC/R,MAAM,SAAQ2H,SAAC,YACzB/H,EAAAA,EAAAA,KAACmS,EAAAA,EAAQ,CAAC/R,MAAM,QAAO2H,SAAC,cAE5B+E,EAAAA,EAAAA,MAAC3F,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiG,IAAK,GAAIvF,SAAA,EACjC/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHV,QAAS9D,GAAgBG,SAAW,YAAc,WAClDyD,QAASA,IAAM3D,GAAmB,IAAKD,GAAiBG,UAAWH,GAAgBG,WAAYhC,SAClG,cAGD/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHV,QAAS9D,GAAgBI,YAAc,YAAc,WACrDwD,QAASA,IAAM3D,GAAmB,IAAKD,GAAiBI,aAAcJ,GAAgBI,cAAejC,SACxG,uBAKT+E,EAAAA,EAAAA,MAACsF,EAAAA,EAAa,CAAArK,SAAA,EACV/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CAACZ,QAASA,IAAM7D,IAAyB,GAAQvB,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,YAGhF/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHZ,QA7gBUrC,UAC1B,UACUO,GAAAA,EAAe2G,gBAAgB9J,EAAWqB,IAChDD,IAAyB,GACzBE,GAAmB,CAAEC,MAAO,GAAI7B,KAAM,SAAU8B,UAAU,EAAOC,aAAa,IAC9EkB,KACAJ,GAAY,CACRC,MAAM,EACNC,QAAS,mCACTC,SAAU,WAElB,CAAE,MAAOe,GAAQ,IAADsG,EAAAC,EACZtG,QAAQD,MAAM,6BAA8BA,GAC5ClB,GAAY,CACRC,MAAM,EACNC,SAAuB,QAAdsH,EAAAtG,EAAMwG,gBAAQ,IAAAF,GAAM,QAANC,EAAdD,EAAgBvG,YAAI,IAAAwG,OAAN,EAAdA,EAAsBvG,QAAS,6BACxCf,SAAU,SAElB,GA4fgByC,QAAQ,YACRtF,GAAI,CACAmG,gBAAiB,QACjB/B,MAAO,QACP,UAAW,CACP+B,gBAAiB,uBAEvBxG,SACL,eAOT+E,EAAAA,EAAAA,MAAC6E,EAAAA,EAAM,CACH5G,KAAMd,GACN2H,QAASA,IAAM1H,IAAuB,GACtCiD,SAAS,KACT0E,WAAS,EAAA9J,SAAA,EAET/H,EAAAA,EAAAA,KAAC8R,EAAAA,EAAW,CAAC1J,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,wBACrC+E,EAAAA,EAAAA,MAACiF,EAAAA,EAAa,CAAAhK,SAAA,EACV/H,EAAAA,EAAAA,KAACgS,EAAAA,EAAS,CACNH,WAAS,EACTY,WAAS,EACTC,KAAM,EACNvE,MAAM,UACN/N,MAAO+J,GAAWnI,QAClB3B,SAAW2N,GAAM5D,GAAc,IAAKD,GAAYnI,QAASgM,EAAEiE,OAAO7R,QAClEgI,GAAI,CAAEiF,GAAI,EAAGD,GAAI,MAErBpN,EAAAA,EAAAA,KAACgS,EAAAA,EAAS,CACNH,WAAS,EACTY,WAAS,EACTC,KAAM,EACNvE,MAAM,qBACN/N,MAAO+J,GAAWE,mBAClBhK,SAAW2N,GAAM5D,GAAc,IAAKD,GAAYE,mBAAoB2D,EAAEiE,OAAO7R,QAC7EgI,GAAI,CAAEiF,GAAI,SAGlBP,EAAAA,EAAAA,MAACsF,EAAAA,EAAa,CAAArK,SAAA,EACV/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CAACZ,QAASA,IAAMtD,IAAuB,GAAQ9B,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,YAG9E/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHZ,QArhBQrC,UACxB,UACUO,GAAAA,EAAeiH,uBAAuBpK,EAAW4B,IACvDD,IAAuB,GACvBE,GAAc,CAAEpI,QAAS,GAAIqI,mBAAoB,GAAIC,SAAU,KAC/DY,KACAJ,GAAY,CACRC,MAAM,EACNC,QAAS,6CACTC,SAAU,WAElB,CAAE,MAAOe,GAAQ,IAAD4G,EAAAC,EACZ5G,QAAQD,MAAM,4BAA6BA,GAC3ClB,GAAY,CACRC,MAAM,EACNC,SAAuB,QAAd4H,EAAA5G,EAAMwG,gBAAQ,IAAAI,GAAM,QAANC,EAAdD,EAAgB7G,YAAI,IAAA8G,OAAN,EAAdA,EAAsB7G,QAAS,2BACxCf,SAAU,SAElB,GAogBgByC,QAAQ,YACRtF,GAAI,CACAmG,gBAAiB,QACjB/B,MAAO,QACP,UAAW,CACP+B,gBAAiB,uBAEvBxG,SACL,kBAOT+E,EAAAA,EAAAA,MAAC6E,EAAAA,EAAM,CACH5G,KAAMN,GACNmH,QAASA,IAAMlH,IAAgB,GAC/ByC,SAAS,KACT0E,WAAS,EAAA9J,SAAA,EAET/H,EAAAA,EAAAA,KAAC8R,EAAAA,EAAW,CAAC1J,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,oBACrC/H,EAAAA,EAAAA,KAAC+R,EAAAA,EAAa,CAAAhK,UACV/H,EAAAA,EAAAA,KAACgS,EAAAA,EAAS,CACNH,WAAS,EACTY,WAAS,EACTC,KAAM,EACNvE,MAAM,mBACN/N,MAAOuK,GACPtK,SAAW2N,GAAMpD,GAAgBoD,EAAEiE,OAAO7R,OAC1CgI,GAAI,CAAEgF,GAAI,QAGlBN,EAAAA,EAAAA,MAACsF,EAAAA,EAAa,CAAArK,SAAA,EACV/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CAACZ,QAASA,IAAM9C,IAAgB,GAAQtC,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,YAGvE/H,EAAAA,EAAAA,KAACoO,EAAAA,EAAM,CACHZ,QAASA,IAphBDrC,WACxB,UACUO,GAAAA,EAAeoH,qBAAqBvK,EAAW6D,EAAWzB,IAChED,IAAgB,GAChBE,GAAgB,IAChBJ,GAAmB,MACnBU,KACAJ,GAAY,CACRC,MAAM,EACNC,QAAS,iCACTC,SAAU,WAElB,CAAE,MAAOe,GACLC,QAAQD,MAAM,2BAA4BA,GAC1ClB,GAAY,CACRC,MAAM,EACNC,QAAS,2BACTC,SAAU,SAElB,GAigB+B8H,CAAmC,OAAfxI,SAAe,IAAfA,QAAe,EAAfA,GAAiBpC,IACpDqE,MAAM,QACNkB,QAAQ,YAAW3F,SACtB,kBAMT/H,EAAAA,EAAAA,KAACgT,EAAAA,EAAQ,CACLjI,KAAMF,GAASE,KACfkI,iBAAkB,IAClBrB,QAASA,IAAM9G,GAAY,IAAKD,GAAUE,MAAM,IAAShD,UAEzD/H,EAAAA,EAAAA,KAACkR,EAAAA,EAAK,CACFU,QAASA,IAAM9G,GAAY,IAAKD,GAAUE,MAAM,IAChDE,SAAUJ,GAASI,SACnB7C,GAAI,CAAEd,MAAO,QAASS,SAErB8C,GAASG,gBAxdlBhL,EAAAA,EAAAA,KAACkH,GAAW,CAAAa,UACR/H,EAAAA,EAAAA,KAACmH,EAAAA,EAAG,CAACiB,GAAI,CAAEf,QAAS,OAAQiF,eAAgB,SAAUvG,WAAY,SAAUtB,OAAQ,QAASsD,UACzF/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAU,CAACnE,GAAI,CAAEoE,MAAO,SAAUzE,SAAC,sEAyd7C,C,0DCpvBX,MAAMmL,EAAeC,0BA2BfC,EAAMC,EAAAA,EAAM/Q,OAAO,CACvBgR,QAAS,GAAGJ,QACZK,QAAS,CACP,eAAgB,oBAElBC,iBAAiB,IAInBJ,EAAIK,aAAaC,QAAQC,KACvBxI,eAlCqBA,WACrB,IAEE,GAAKyI,EAAAA,EAAQC,IAAI,aAYf5H,QAAQ6H,IAAI,6BAA8BF,EAAAA,EAAQC,IAAI,aAAe,eAAiB,sBAZzD,CAC7B5H,QAAQ6H,IAAI,8CACZ,MAAMtB,QAAiBa,EAAAA,EAAMQ,IAAI,GAAGX,wBAAoC,CACtEM,iBAAiB,IAEnB,GAAwB,MAApBhB,EAASuB,OAAgB,CAC3B,MAAMC,EAAQJ,EAAAA,EAAQC,IAAI,aAC1B5H,QAAQ6H,IAAI,mCAAoCE,EAAQ,iBAAmB,eAC7E,MACE/H,QAAQgI,KAAK,8BAA+BzB,EAASuB,OAEzD,CAGF,CAAE,MAAO/H,GACPC,QAAQD,MAAM,6BAA8BA,EAE9C,GAgBQkI,GAEN,MAAMF,EAAQG,aAAaC,QAAQ,eAC/BJ,IACFK,EAAOd,QAAQe,cAAgB,UAAUN,KAI3C,MAAMO,EAAYX,EAAAA,EAAQC,IAAI,aAK9B,OAJIU,IACFF,EAAOd,QAAQ,eAAiBgB,GAG3BF,CAAM,IAEdrI,GACQR,QAAQgJ,OAAOxI,KAK1BoH,EAAIK,aAAajB,SAASmB,KACvBnB,GAAaA,IACbxG,IAAW,IAADsG,EAMT,OAL+B,OAAb,QAAdA,EAAAtG,EAAMwG,gBAAQ,IAAAF,OAAA,EAAdA,EAAgByB,UAElBI,aAAaM,WAAW,eACxBC,OAAOC,SAASC,KAAO,UAElBpJ,QAAQgJ,OAAOxI,EAAM,IAIzB,MAAMN,EAAiB,CAE5BmJ,eAAgB1J,iBAAwB,IAAjB2J,EAAMC,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE/B,aADuB3B,EAAIS,IAAI,aAAc,CAAEiB,UAEjD,EAGAG,cAAe9J,iBAAwB,IAAjB2J,EAAMC,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE9B,aADuB3B,EAAIS,IAAI,yBAA0B,CAAEiB,UAE7D,EAGAI,eAAgB/J,eAAOgK,GAAwB,IAAjBL,EAAMC,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAItC,aAHuB3B,EAAIS,IAAI,oBAAqB,CAClDiB,OAAQ,CAAEM,EAAGD,KAAUL,IAG3B,EAGAnJ,WAAYR,eACaiI,EAAIS,IAAI,aAAatL,MAK9C8M,cAAelK,eACUiI,EAAIkC,KAAK,aAAcC,GAKhDC,cAAerK,MAAO5C,EAAWgN,UACRnC,EAAIqC,IAAI,aAAalN,KAAcgN,GAK5DG,cAAevK,eACUiI,EAAIuC,OAAO,aAAapN,MAKjDqN,WAAYzK,eAAO5C,GAA+B,IAApBsN,EAASd,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEzC,aADuB3B,EAAIkC,KAAK,aAAa/M,SAAkBsN,EAEjE,EAGAC,WAAY3K,eAAO5C,GAAkC,IAAvBwN,EAAYhB,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE5C,aADuB3B,EAAIkC,KAAK,aAAa/M,SAAkBwN,EAEjE,EAGAC,iBAAkB7K,eACOiI,EAAIkC,KAAK,aAAa/M,WAK/C0N,oBAAqB9K,eACIiI,EAAIS,IAAI,aAAatL,gBAK9CqD,iBAAkBT,eACOiI,EAAIS,IAAI,aAAatL,oBAK9C8J,gBAAiBlH,MAAO5C,EAAW2N,UACV9C,EAAIkC,KAAK,aAAa/M,sBAA+B2N,GAK9EpH,mBAAoB3D,MAAO5C,EAAWwG,UACbqE,EAAIkC,KAAK,aAAa/M,yBAAkC,CAAE4N,QAASpH,IAK5F4D,uBAAwBxH,MAAO5C,EAAW6N,UACjBhD,EAAIkC,KAAK,aAAa/M,+BAAwC6N,GAKvFtK,mBAAoBX,eACKiI,EAAIS,IAAI,aAAatL,uBAK9C8I,uBAAwBlG,MAAO5C,EAAW6D,UACjBgH,EAAIkC,KAAK,aAAa/M,cAAsB6D,wBAKrEP,mBAAoBV,eACKiI,EAAIS,IAAI,aAAatL,eAK9C8N,qBAAsBlL,MAAO5C,EAAW6N,UACfhD,EAAIkC,KAAK,aAAa/M,cAAuB6N,GAKtEE,qBAAsBnL,MAAO5C,EAAW6D,EAAWgK,UAC1BhD,EAAIqC,IAAI,aAAalN,cAAsB6D,KAAcgK,GAKlFG,qBAAsBpL,MAAO5C,EAAW6D,UACfgH,EAAIuC,OAAO,aAAapN,cAAsB6D,MAKvED,sBAAuBhB,MAAO5C,EAAW6D,UAChBgH,EAAIkC,KAAK,aAAa/M,cAAsB6D,cAKrE0G,qBAAsB3H,eAAO5C,EAAW6D,GAA4B,IAAjBoK,EAAMzB,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAE1D,aADuB3B,EAAIkC,KAAK,aAAa/M,cAAsB6D,YAAqB,CAAEoK,UAE5F,EAGAC,0BAA2BtL,MAAO5C,EAAWmO,UACpBtD,EAAIkC,KAAK,aAAa/M,yBAAkC,CAAEmO,SAKnFC,sBAAuBxL,eACEiI,EAAIS,IAAI,aAAatL,0BAK9CqO,yBAA0BzL,MAAO5C,EAAWsO,EAAYC,UAC/B1D,EAAIqC,IAAI,aAAalN,yBAAiCsO,KAAeC,GAM9FC,oBAAqB5L,iBAAwB,IAAjB2J,EAAMC,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEpC,aADuB3B,EAAIS,IAAI,4BAA6B,CAAEiB,UAEhE,EAGAkC,kBAAmB7L,eACMiI,EAAIS,IAAI,uCAKjCoD,eAAgB9L,eACSiI,EAAIkC,KAAK,4BAA4B/M,cAK9D2O,cAAe/L,eAAO5C,GAA4B,IAAjBiO,EAAMzB,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAExC,aADuB3B,EAAIkC,KAAK,4BAA4B/M,YAAqB,CAAEiO,UAErF,EAGAW,gBAAiBhM,eACQiI,EAAIS,IAAI,aAAatL,YAK9C6O,oBAAqBjM,eACIiI,EAAIS,IAAI,aAAatL,iBAK9C8O,aAAclM,eACWiI,EAAIS,IAAI,aAAatL,iBAK9CuD,mBAAoBX,eACKiI,EAAIS,IAAI,aAAatL,uBAK9C+O,eAAgBnM,MAAO5C,EAAW6D,UACTgH,EAAIkC,KAAK,aAAa/M,cAAsB6D,cAKrEmL,cAAepM,MAAO5C,EAAW6D,EAAWoK,UACnBpD,EAAIkC,KAAK,aAAa/M,cAAsB6D,YAAqB,CAAEoK,WAK5F7D,uBAAwBxH,MAAO5C,EAAW6N,UACjBhD,EAAIkC,KAAK,aAAa/M,+BAAwC6N,GAKvFoB,gBAAiBrM,MAAO5C,EAAWkP,UACVrE,EAAIkC,KAAK,aAAa/M,uBAAgCkP,GAK/EC,iBAAkBvM,eACOiI,EAAIS,IAAI,oBAAoBtL,MAKrDoP,kBAAmBxM,eACMiI,EAAIS,IAAI,qBAAqB+D,MAKtDC,YAAa1M,MAAOuL,EAAMpW,UACD8S,EAAIkC,KAAK,0BAA2B,CACzDoB,KAAMA,EACNpW,SAAUA,IAMdwX,eAAgB3M,iBAAyB,IAAlB4M,EAAOhD,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChC,MAAM,MACJI,EAAQ,GAAE,YACV6C,EAAc,GAAE,SAChB1X,EAAW,GAAE,SACb2X,EAAW,GAAE,SACbC,EAAW,GAAE,OACbC,EAAS,aAAY,UACrBC,EAAY,QACVL,EAEEjD,EAAS,CACbM,EAAGD,EACH/E,KAAM4H,EACN1X,SAAUA,EACV+X,UAAWJ,EACXK,UAAWJ,EACXK,QAASJ,EACTK,WAAYJ,GAId,aADuBhF,EAAIS,IAAI,oBAAqB,CAAEiB,UAExD,E,yDC5VF,SAAe/U,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,8DACD,Y,yDCFJ,SAAeF,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,gHACD,S","sources":["../node_modules/@mui/icons-material/esm/Add.js","components/CodeEditor.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@mui/icons-material/esm/Publish.js","content/applications/Projects/ProjectCollaboration.js","services/projectService.js","../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Person.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","import React, { useEffect, useRef, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { EditorView, basicSetup } from \"codemirror\";\nimport { EditorState } from \"@codemirror/state\";\nimport { oneDark } from \"@codemirror/theme-one-dark\";\nimport {\n    autocompletion,\n    completionKeymap,\n    closeBrackets,\n    closeBracketsKeymap\n} from \"@codemirror/autocomplete\";\nimport { defaultKeymap, history, historyKeymap } from \"@codemirror/commands\";\nimport {\n    defaultHighlightStyle,\n    syntaxHighlighting,\n    indentOnInput,\n    bracketMatching,\n    foldGutter,\n    foldKeymap\n} from \"@codemirror/language\";\nimport { lintKeymap } from \"@codemirror/lint\";\nimport { searchKeymap, highlightSelectionMatches } from \"@codemirror/search\";\nimport { go } from \"@codemirror/legacy-modes/mode/go\";\nimport { StreamLanguage } from \"@codemirror/stream-parser\";\nimport {\n    keymap,\n    highlightSpecialChars,\n    drawSelection,\n    highlightActiveLine,\n    dropCursor,\n    rectangularSelection,\n    crosshairCursor,\n    lineNumbers,\n    highlightActiveLineGutter\n} from \"@codemirror/view\";\nimport { java } from \"@codemirror/lang-java\";\nimport { javascript } from \"@codemirror/lang-javascript\";\nimport { php } from \"@codemirror/lang-php\";\nimport { python } from \"@codemirror/lang-python\";\nimport { rust } from \"@codemirror/lang-rust\";\nimport { sql } from \"@codemirror/lang-sql\";\n\nconst CodeEditor = ({ value, onChange, language = 'javascript', readOnly = false }) => {\n    const editor = useRef(null);\n    const editorView = useRef(null);\n\n    const getLanguageExtension = useCallback((lang) => {\n        switch (lang) {\n            case 'python':\n                return python();\n            case 'java':\n                return java();\n            case 'php':\n                return php();\n            case 'go':\n                return StreamLanguage.define(go);\n            case 'rust':\n                return rust();\n            case 'sql':\n                return sql();\n            default:\n                return javascript({ typescript: true });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!editor.current) return;\n\n        const updateListener = EditorView.updateListener.of((update) => {\n            if (update.docChanged) {\n                const doc = update.state.doc;\n                const content = doc.toString();\n                onChange?.(content);\n            }\n        });\n\n        const startState = EditorState.create({\n            doc: value,\n            extensions: [\n                basicSetup,\n                getLanguageExtension(language),\n                oneDark,\n                lineNumbers(),\n                foldGutter(),\n                highlightSpecialChars(),\n                history(),\n                drawSelection(),\n                dropCursor(),\n                EditorState.allowMultipleSelections.of(true),\n                indentOnInput(),\n                syntaxHighlighting(defaultHighlightStyle),\n                bracketMatching(),\n                closeBrackets(),\n                autocompletion(),\n                rectangularSelection(),\n                crosshairCursor(),\n                highlightActiveLine(),\n                highlightActiveLineGutter(),\n                highlightSelectionMatches(),\n                updateListener,\n                EditorView.lineWrapping,\n                keymap.of([\n                    ...closeBracketsKeymap,\n                    ...defaultKeymap,\n                    ...searchKeymap,\n                    ...historyKeymap,\n                    ...foldKeymap,\n                    ...completionKeymap,\n                    ...lintKeymap\n                ])\n            ],\n        });\n\n        editorView.current = new EditorView({\n            state: startState,\n            parent: editor.current,\n        });\n\n        const cmEditor = editor.current?.querySelector('.cm-editor');\n        if (cmEditor) {\n            cmEditor.style.height = '100%';\n        }\n\n        return () => {\n            editorView.current?.destroy();\n        };\n    }, [getLanguageExtension, language]);\n\n    return (\n        <div\n            ref={editor}\n            style={{\n                border: \"1px solid #ccc\",\n                flexGrow: 1,\n                height: '100%',\n                maxHeight: '100%',\n                overflow: 'auto'\n            }}\n        />\n    );\n};\n\nCodeEditor.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    language: PropTypes.string,\n    readOnly: PropTypes.bool\n};\n\nCodeEditor.defaultProps = {\n    value: '',\n    language: 'javascript',\n    readOnly: false\n};\n\nexport default CodeEditor;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 4v2h14V4zm0 10h4v6h6v-6h4l-7-7z\"\n}), 'Publish');","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n    Alert,\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Divider,\r\n    Grid,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Paper,\r\n    Snackbar,\r\n    Tab,\r\n    Tabs,\r\n    TextField,\r\n    Typography,\r\n    styled,\r\n    MenuItem\r\n} from '@mui/material';\r\nimport {\r\n    ArrowBack as BackIcon,\r\n    Add as AddIcon,\r\n    CheckCircle as ApproveIcon,\r\n    Cancel as RejectIcon,\r\n    Edit as EditIcon,\r\n    Person as PersonIcon,\r\n    Visibility as ViewIcon,\r\n    Code as CodeIcon,\r\n    Description as DescriptionIcon,\r\n    Publish as PublishIcon\r\n} from '@mui/icons-material';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport { projectService } from 'src/services/projectService';\r\nimport CodeEditor from 'src/components/CodeEditor';\r\n\r\nconst RootWrapper = styled(Box)(({ theme }) => ({\r\n    display: \"flex\",\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    minHeight: `calc(100dvh - ${theme.header.mobileHeight})`,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n        minHeight: `calc(100dvh - ${theme.header.height})`\r\n    }\r\n}));\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => (\r\n    <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`collaboration-tabpanel-${index}`}\r\n        aria-labelledby={`collaboration-tab-${index}`}\r\n        {...other}\r\n    >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n);\r\n\r\nconst ProjectCollaboration = () => {\r\n    const { projectId } = useParams();\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    \r\n    const [project, setProject] = useState(null);\r\n    const [collaborators, setCollaborators] = useState([]);\r\n    const [versions, setVersions] = useState([]);\r\n    const [pendingVersions, setPendingVersions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [addCollaboratorDialog, setAddCollaboratorDialog] = useState(false);\r\n    const [newCollaborator, setNewCollaborator] = useState({ email: '', role: 'viewer', can_edit: false, can_approve: false });\r\n    const [submitVersionDialog, setSubmitVersionDialog] = useState(false);\r\n    const [newVersion, setNewVersion] = useState({ content: '', usage_instructions: '', examples: [] });\r\n    const [selectedVersion, setSelectedVersion] = useState(null);\r\n    const [rejectDialog, setRejectDialog] = useState(false);\r\n    const [rejectReason, setRejectReason] = useState('');\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadProjectData();\r\n    }, [projectId]);\r\n\r\n    const loadProjectData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const [projectRes, collaboratorsRes, versionsRes, pendingRes] = await Promise.all([\r\n                projectService.getProject(projectId),\r\n                projectService.getCollaborators(projectId),\r\n                projectService.getProjectVersions(projectId),\r\n                projectService.getPendingVersions(projectId)\r\n            ]);\r\n            \r\n            setProject(projectRes.data);\r\n            setCollaborators(collaboratorsRes.data);\r\n            setVersions(versionsRes.data);\r\n            setPendingVersions(pendingRes.data);\r\n        } catch (error) {\r\n            console.error('Error loading project data:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to load project data',\r\n                severity: 'error'\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddCollaborator = async () => {\r\n        try {\r\n            await projectService.addCollaborator(projectId, newCollaborator);\r\n            setAddCollaboratorDialog(false);\r\n            setNewCollaborator({ email: '', role: 'viewer', can_edit: false, can_approve: false });\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Collaborator added successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error adding collaborator:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: error.response?.data?.error || 'Failed to add collaborator',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemoveCollaborator = async (userId) => {\r\n        try {\r\n            await projectService.removeCollaborator(projectId, userId);\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Collaborator removed successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error removing collaborator:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to remove collaborator',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmitVersion = async () => {\r\n        try {\r\n            await projectService.submitVersionForReview(projectId, newVersion);\r\n            setSubmitVersionDialog(false);\r\n            setNewVersion({ content: '', usage_instructions: '', examples: [] });\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version submitted for review successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error submitting version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: error.response?.data?.error || 'Failed to submit version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleApproveVersion = async (versionId) => {\r\n        try {\r\n            await projectService.approveProjectVersion(projectId, versionId);\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version approved successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error approving version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to approve version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRejectVersion = async (versionId) => {\r\n        try {\r\n            await projectService.rejectProjectVersion(projectId, versionId, rejectReason);\r\n            setRejectDialog(false);\r\n            setRejectReason('');\r\n            setSelectedVersion(null);\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version rejected successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error rejecting version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to reject version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handlePromoteVersion = async (versionId) => {\r\n        try {\r\n            await projectService.promoteVersionToPublic(projectId, versionId);\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version promoted to public successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error promoting version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to promote version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const getRoleColor = (role) => {\r\n        switch (role) {\r\n            case 'admin': return 'error';\r\n            case 'editor': return 'warning';\r\n            case 'viewer': return 'info';\r\n            default: return 'default';\r\n        }\r\n    };\r\n\r\n    const getVersionTypeIcon = (type) => {\r\n        return type === 'public' ? <ViewIcon /> : <EditIcon />;\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <RootWrapper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <Typography sx={{ color: 'black' }}>Loading collaboration data...</Typography>\r\n                </Box>\r\n            </RootWrapper>\r\n        );\r\n    }\r\n\r\n    if (!project) {\r\n        return (\r\n            <RootWrapper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <Typography sx={{ color: 'black' }}>Project not found</Typography>\r\n                </Box>\r\n            </RootWrapper>\r\n        );\r\n    }\r\n\r\n    const isOwner = project.owner.id === user?.id;\r\n    const isCollaborator = collaborators.some(collab => collab.user.id === user?.id);\r\n\r\n    if (!isOwner && !isCollaborator) {\r\n        return (\r\n            <RootWrapper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <Typography sx={{ color: 'black' }}>You don't have access to this project's collaboration features</Typography>\r\n                </Box>\r\n            </RootWrapper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Collaboration - {project.title} - OneDollarAI</title>\r\n            </Helmet>\r\n\r\n            <RootWrapper>\r\n                <Container maxWidth=\"lg\">\r\n                    {/* Header */}\r\n                    <Box sx={{ mt: 3, mb: 4 }}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                            <IconButton\r\n                                onClick={() => navigate(`/project/${projectId}`)}\r\n                                sx={{ color: 'black' }}\r\n                            >\r\n                                <BackIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h4\" component=\"h1\" sx={{ color: 'black' }}>\r\n                                Collaboration - {project.title}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    {/* Tabs */}\r\n                    <Card>\r\n                        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <Tabs\r\n                                value={tabValue}\r\n                                onChange={(e, newValue) => setTabValue(newValue)}\r\n                                sx={{\r\n                                    '& .MuiTab-root': {\r\n                                        color: 'black',\r\n                                        '&.Mui-selected': {\r\n                                            color: 'black'\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Tab label=\"Collaborators\" />\r\n                                <Tab label=\"Versions\" />\r\n                                <Tab label=\"Pending Review\" />\r\n                            </Tabs>\r\n                        </Box>\r\n\r\n                        {/* Collaborators Tab */}\r\n                        <TabPanel value={tabValue} index={0}>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                                <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                    Project Collaborators\r\n                                </Typography>\r\n                                {isOwner && (\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        startIcon={<AddIcon />}\r\n                                        onClick={() => setAddCollaboratorDialog(true)}\r\n                                        sx={{\r\n                                            backgroundColor: 'black',\r\n                                            color: 'white',\r\n                                            '&:hover': {\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Add Collaborator\r\n                                    </Button>\r\n                                )}\r\n                            </Box>\r\n\r\n                            <List>\r\n                                {collaborators.map((collaborator) => (\r\n                                    <ListItem\r\n                                        key={collaborator.id}\r\n                                        sx={{\r\n                                            border: 1,\r\n                                            borderColor: 'divider',\r\n                                            borderRadius: 1,\r\n                                            mb: 1\r\n                                        }}\r\n                                        secondaryAction={\r\n                                            isOwner && (\r\n                                                <Button\r\n                                                    color=\"error\"\r\n                                                    onClick={() => handleRemoveCollaborator(collaborator.user.id)}\r\n                                                >\r\n                                                    Remove\r\n                                                </Button>\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <PersonIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                    <Typography variant=\"body1\" sx={{ color: 'black' }}>\r\n                                                        {collaborator.user.first_name} {collaborator.user.last_name}\r\n                                                    </Typography>\r\n                                                    <Chip\r\n                                                        label={collaborator.role}\r\n                                                        size=\"small\"\r\n                                                        color={getRoleColor(collaborator.role)}\r\n                                                    />\r\n                                                </Box>\r\n                                            }\r\n                                            secondary={\r\n                                                <Box>\r\n                                                    <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                        {collaborator.user.email}\r\n                                                    </Typography>\r\n                                                    <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\r\n                                                        {collaborator.can_edit && (\r\n                                                            <Chip label=\"Can Edit\" size=\"small\" color=\"warning\" />\r\n                                                        )}\r\n                                                        {collaborator.can_approve && (\r\n                                                            <Chip label=\"Can Approve\" size=\"small\" color=\"error\" />\r\n                                                        )}\r\n                                                        {collaborator.is_public && (\r\n                                                            <Chip label=\"Public\" size=\"small\" color=\"info\" />\r\n                                                        )}\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </TabPanel>\r\n\r\n                        {/* Versions Tab */}\r\n                        <TabPanel value={tabValue} index={1}>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                                <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                    Project Versions\r\n                                </Typography>\r\n                                {isCollaborator && (\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        startIcon={<AddIcon />}\r\n                                        onClick={() => setSubmitVersionDialog(true)}\r\n                                        sx={{\r\n                                            backgroundColor: 'black',\r\n                                            color: 'white',\r\n                                            '&:hover': {\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Submit New Version\r\n                                    </Button>\r\n                                )}\r\n                            </Box>\r\n\r\n                            <Grid container spacing={2}>\r\n                                {versions.map((version) => (\r\n                                    <Grid item xs={12} md={6} key={version.id}>\r\n                                        <Card>\r\n                                            <CardContent>\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                                                    {getVersionTypeIcon(version.version_type)}\r\n                                                    <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                                        Version {version.version_number} ({version.version_type})\r\n                                                    </Typography>\r\n                                                    {version.is_approved && (\r\n                                                        <Chip\r\n                                                            icon={<ApproveIcon />}\r\n                                                            label=\"Approved\"\r\n                                                            color=\"success\"\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                \r\n                                                <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                    Created by: {version.created_by.first_name} {version.created_by.last_name}\r\n                                                </Typography>\r\n                                                \r\n                                                <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                    Created: {formatDistanceToNow(new Date(version.created_at), { addSuffix: true })}\r\n                                                </Typography>\r\n\r\n                                                {version.rejection_reason && (\r\n                                                    <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                                                        Rejected: {version.rejection_reason}\r\n                                                    </Alert>\r\n                                                )}\r\n\r\n                                                <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                                                    {isOwner && version.version_type === 'private' && version.is_approved && (\r\n                                                        <Button\r\n                                                            size=\"small\"\r\n                                                            startIcon={<PublishIcon />}\r\n                                                            onClick={() => handlePromoteVersion(version.id)}\r\n                                                            variant=\"outlined\"\r\n                                                        >\r\n                                                            Promote to Public\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    \r\n                                                    {isOwner && !version.is_approved && (\r\n                                                        <>\r\n                                                            <Button\r\n                                                                size=\"small\"\r\n                                                                startIcon={<ApproveIcon />}\r\n                                                                onClick={() => handleApproveVersion(version.id)}\r\n                                                                color=\"success\"\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                Approve\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                size=\"small\"\r\n                                                                startIcon={<RejectIcon />}\r\n                                                                onClick={() => {\r\n                                                                    setSelectedVersion(version);\r\n                                                                    setRejectDialog(true);\r\n                                                                }}\r\n                                                                color=\"error\"\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                Reject\r\n                                                            </Button>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Box>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </TabPanel>\r\n\r\n                        {/* Pending Review Tab */}\r\n                        <TabPanel value={tabValue} index={2}>\r\n                            <Typography variant=\"h6\" sx={{ color: 'black', mb: 3 }}>\r\n                                Pending Review ({pendingVersions.length})\r\n                            </Typography>\r\n\r\n                            {pendingVersions.length === 0 ? (\r\n                                <Alert severity=\"info\">No versions pending review</Alert>\r\n                            ) : (\r\n                                <Grid container spacing={2}>\r\n                                    {pendingVersions.map((version) => (\r\n                                        <Grid item xs={12} key={version.id}>\r\n                                            <Card>\r\n                                                <CardContent>\r\n                                                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                                                        <EditIcon />\r\n                                                        <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                                            Version {version.version_number} (Private)\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                    \r\n                                                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                        Submitted by: {version.created_by.first_name} {version.created_by.last_name}\r\n                                                    </Typography>\r\n                                                    \r\n                                                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                        Submitted: {formatDistanceToNow(new Date(version.created_at), { addSuffix: true })}\r\n                                                    </Typography>\r\n\r\n                                                    {version.content && (\r\n                                                        <Box sx={{ mb: 2 }}>\r\n                                                            <Typography variant=\"subtitle2\" sx={{ color: 'black', mb: 1 }}>\r\n                                                                Content Preview:\r\n                                                            </Typography>\r\n                                                            <Paper sx={{ p: 2, maxHeight: 200, overflow: 'auto' }}>\r\n                                                                <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                                    {version.content.substring(0, 300)}...\r\n                                                                </Typography>\r\n                                                            </Paper>\r\n                                                        </Box>\r\n                                                    )}\r\n\r\n                                                    {isOwner && (\r\n                                                        <Box sx={{ display: 'flex', gap: 1 }}>\r\n                                                            <Button\r\n                                                                startIcon={<ApproveIcon />}\r\n                                                                onClick={() => handleApproveVersion(version.id)}\r\n                                                                color=\"success\"\r\n                                                                variant=\"contained\"\r\n                                                            >\r\n                                                                Approve\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                startIcon={<RejectIcon />}\r\n                                                                onClick={() => {\r\n                                                                    setSelectedVersion(version);\r\n                                                                    setRejectDialog(true);\r\n                                                                }}\r\n                                                                color=\"error\"\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                Reject\r\n                                                            </Button>\r\n                                                        </Box>\r\n                                                    )}\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    ))}\r\n                                </Grid>\r\n                            )}\r\n                        </TabPanel>\r\n                    </Card>\r\n                </Container>\r\n            </RootWrapper>\r\n\r\n            {/* Add Collaborator Dialog */}\r\n            <Dialog\r\n                open={addCollaboratorDialog}\r\n                onClose={() => setAddCollaboratorDialog(false)}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>Add Collaborator</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        value={newCollaborator.email}\r\n                        onChange={(e) => setNewCollaborator({ ...newCollaborator, email: e.target.value })}\r\n                        sx={{ mb: 2, mt: 1 }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label=\"Role\"\r\n                        value={newCollaborator.role}\r\n                        onChange={(e) => setNewCollaborator({ ...newCollaborator, role: e.target.value })}\r\n                        sx={{ mb: 2 }}\r\n                    >\r\n                        <MenuItem value=\"viewer\">Viewer</MenuItem>\r\n                        <MenuItem value=\"editor\">Editor</MenuItem>\r\n                        <MenuItem value=\"admin\">Admin</MenuItem>\r\n                    </TextField>\r\n                    <Box sx={{ display: 'flex', gap: 2 }}>\r\n                        <Button\r\n                            variant={newCollaborator.can_edit ? 'contained' : 'outlined'}\r\n                            onClick={() => setNewCollaborator({ ...newCollaborator, can_edit: !newCollaborator.can_edit })}\r\n                        >\r\n                            Can Edit\r\n                        </Button>\r\n                        <Button\r\n                            variant={newCollaborator.can_approve ? 'contained' : 'outlined'}\r\n                            onClick={() => setNewCollaborator({ ...newCollaborator, can_approve: !newCollaborator.can_approve })}\r\n                        >\r\n                            Can Approve\r\n                        </Button>\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setAddCollaboratorDialog(false)} sx={{ color: 'black' }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleAddCollaborator}\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            backgroundColor: 'black',\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                            }\r\n                        }}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Submit Version Dialog */}\r\n            <Dialog\r\n                open={submitVersionDialog}\r\n                onClose={() => setSubmitVersionDialog(false)}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>Submit New Version</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        label=\"Content\"\r\n                        value={newVersion.content}\r\n                        onChange={(e) => setNewVersion({ ...newVersion, content: e.target.value })}\r\n                        sx={{ mb: 2, mt: 1 }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={3}\r\n                        label=\"Usage Instructions\"\r\n                        value={newVersion.usage_instructions}\r\n                        onChange={(e) => setNewVersion({ ...newVersion, usage_instructions: e.target.value })}\r\n                        sx={{ mb: 2 }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setSubmitVersionDialog(false)} sx={{ color: 'black' }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleSubmitVersion}\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            backgroundColor: 'black',\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                            }\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Reject Version Dialog */}\r\n            <Dialog\r\n                open={rejectDialog}\r\n                onClose={() => setRejectDialog(false)}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>Reject Version</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={3}\r\n                        label=\"Rejection Reason\"\r\n                        value={rejectReason}\r\n                        onChange={(e) => setRejectReason(e.target.value)}\r\n                        sx={{ mt: 1 }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setRejectDialog(false)} sx={{ color: 'black' }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => handleRejectVersion(selectedVersion?.id)}\r\n                        color=\"error\"\r\n                        variant=\"contained\"\r\n                    >\r\n                        Reject\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={snackbar.open}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n            >\r\n                <Alert\r\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                    severity={snackbar.severity}\r\n                    sx={{ width: '100%' }}\r\n                >\r\n                    {snackbar.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectCollaboration; ","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Function to fetch CSRF token if needed\r\nconst fetchCSRFToken = async () => {\r\n  try {\r\n    // Check if CSRF token already exists\r\n    if (!Cookies.get('csrftoken')) {\r\n      console.log('No CSRF token found, fetching a new one...');\r\n      const response = await axios.get(`${API_BASE_URL}/api/get_csrf_token/`, {\r\n        withCredentials: true\r\n      });\r\n      if (response.status === 200) {\r\n        const token = Cookies.get('csrftoken');\r\n        console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\r\n      } else {\r\n        console.warn('Failed to fetch CSRF token:', response.status);\r\n      }\r\n    } else {\r\n      console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching CSRF token:', error);\r\n    // Continue without CSRF token - backend will handle exempt views\r\n  }\r\n};\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: `${API_BASE_URL}/api`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Enable sending cookies with requests\r\n});\r\n\r\n// Add request interceptor to include auth token and CSRF token\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Fetch CSRF token if needed\r\n    await fetchCSRFToken();\r\n    \r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add CSRF token to headers\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('accessToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const projectService = {\r\n  // Get all projects\r\n  getAllProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get user's projects\r\n  getMyProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/my_projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search projects\r\n  searchProjects: async (query, params = {}) => {\r\n    const response = await api.get('/projects/search/', {\r\n      params: { q: query, ...params }\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get single project\r\n  getProject: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Create new project\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects/', projectData);\r\n    return response;\r\n  },\r\n\r\n  // Update project\r\n  updateProject: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project\r\n  deleteProject: async (projectId) => {\r\n    const response = await api.delete(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Run project\r\n  runProject: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/run/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Buy project\r\n  buyProject: async (projectId, purchaseData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/buy/`, purchaseData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view\r\n  trackProjectView: async (projectId) => {\r\n    const response = await api.post(`/projects/${projectId}/view/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project analytics\r\n  getProjectAnalytics: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/analytics/`);\r\n    return response;\r\n  },\r\n\r\n  // Get collaborators\r\n  getCollaborators: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/collaborators/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator\r\n  addCollaborator: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/${projectId}/add_collaborator/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator\r\n  removeCollaborator: async (projectId, userId) => {\r\n    const response = await api.post(`/projects/${projectId}/remove_collaborator/`, { user_id: userId });\r\n    return response;\r\n  },\r\n\r\n  // Submit version for review (for collaborators)\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Promote version to public\r\n  promoteVersionToPublic: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/promote_to_public/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project versions\r\n  getProjectVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Create project version\r\n  createProjectVersion: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Update project version\r\n  updateProjectVersion: async (projectId, versionId, versionData) => {\r\n    const response = await api.put(`/projects/${projectId}/versions/${versionId}/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project version\r\n  deleteProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.delete(`/projects/${projectId}/versions/${versionId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve project version\r\n  approveProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project version\r\n  rejectProjectVersion: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Analyze computing resources\r\n  analyzeComputingResources: async (projectId, code) => {\r\n    const response = await api.post(`/projects/${projectId}/computing-resources/`, { code });\r\n    return response;\r\n  },\r\n\r\n  // Get computing resources\r\n  getComputingResources: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/computing-resources/`);\r\n    return response;\r\n  },\r\n\r\n  // Update computing resources\r\n  updateComputingResources: async (projectId, resourceId, resourceData) => {\r\n    const response = await api.put(`/projects/${projectId}/computing-resources/${resourceId}/`, resourceData);\r\n    return response;\r\n  },\r\n\r\n  // Admin functions\r\n  // Get all projects for admin\r\n  getAllProjectsAdmin: async (params = {}) => {\r\n    const response = await api.get('/projects/admin/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get admin analytics\r\n  getAdminAnalytics: async () => {\r\n    const response = await api.get('/projects/admin/projects/analytics/');\r\n    return response;\r\n  },\r\n\r\n  // Approve project\r\n  approveProject: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project\r\n  rejectProject: async (projectId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Get project usage statistics\r\n  getProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user's project usage\r\n  getUserProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project\r\n  getUserUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve a version\r\n  approveVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject a version\r\n  rejectVersion: async (projectId, versionId, reason) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Submit a new version for review\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Submit project for review\r\n  submitForReview: async (projectId, reviewData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_for_review/`, reviewData);\r\n    return response;\r\n  },\r\n\r\n  // Get public project by ID\r\n  getPublicProject: async (projectId) => {\r\n    const response = await api.get(`/projects/public/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get private project by URL\r\n  getPrivateProject: async (privateUrl) => {\r\n    const response = await api.get(`/projects/private/${privateUrl}/`);\r\n    return response;\r\n  },\r\n\r\n  // Execute code using backend endpoint\r\n  executeCode: async (code, language) => {\r\n    const response = await api.post('/projects/execute-code/', {\r\n      code: code,\r\n      language: language\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search with filters\r\n  advancedSearch: async (filters = {}) => {\r\n    const {\r\n      query = '',\r\n      projectType = '',\r\n      language = '',\r\n      minPrice = '',\r\n      maxPrice = '',\r\n      sortBy = 'created_at',\r\n      sortOrder = 'desc'\r\n    } = filters;\r\n\r\n    const params = {\r\n      q: query,\r\n      type: projectType,\r\n      language: language,\r\n      min_price: minPrice,\r\n      max_price: maxPrice,\r\n      sort_by: sortBy,\r\n      sort_order: sortOrder\r\n    };\r\n\r\n    const response = await api.get('/projects/search/', { params });\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default projectService;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4m0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4\"\n}), 'Person');"],"names":["createSvgIcon","_jsx","d","CodeEditor","_ref","value","onChange","language","readOnly","editor","useRef","editorView","getLanguageExtension","useCallback","lang","python","java","php","StreamLanguage","define","go","rust","sql","javascript","typescript","useEffect","_editor$current","current","updateListener","EditorView","of","update","docChanged","content","state","doc","toString","startState","EditorState","create","extensions","basicSetup","oneDark","lineNumbers","foldGutter","highlightSpecialChars","history","drawSelection","dropCursor","allowMultipleSelections","indentOnInput","syntaxHighlighting","defaultHighlightStyle","bracketMatching","closeBrackets","autocompletion","rectangularSelection","crosshairCursor","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","lineWrapping","keymap","closeBracketsKeymap","defaultKeymap","searchKeymap","historyKeymap","foldKeymap","completionKeymap","lintKeymap","parent","cmEditor","querySelector","style","height","_editorView$current","destroy","ref","border","flexGrow","maxHeight","overflow","defaultProps","getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemAvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","_extends","minWidth","flexShrink","marginTop","React","inProps","useDefaultProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","clsx","RootWrapper","Box","theme","display","width","flexDirection","minHeight","header","mobileHeight","breakpoints","up","TabPanel","_ref2","children","index","role","hidden","id","sx","p","ProjectCollaboration","projectId","useParams","navigate","useNavigate","user","useAuth","project","setProject","useState","collaborators","setCollaborators","versions","setVersions","pendingVersions","setPendingVersions","loading","setLoading","tabValue","setTabValue","addCollaboratorDialog","setAddCollaboratorDialog","newCollaborator","setNewCollaborator","email","can_edit","can_approve","submitVersionDialog","setSubmitVersionDialog","newVersion","setNewVersion","usage_instructions","examples","selectedVersion","setSelectedVersion","rejectDialog","setRejectDialog","rejectReason","setRejectReason","snackbar","setSnackbar","open","message","severity","loadProjectData","async","projectRes","collaboratorsRes","versionsRes","pendingRes","Promise","all","projectService","getProject","getCollaborators","getProjectVersions","getPendingVersions","data","error","console","handleApproveVersion","approveProjectVersion","versionId","getRoleColor","justifyContent","Typography","color","isOwner","owner","isCollaborator","some","collab","_jsxs","_Fragment","Helmet","title","Container","maxWidth","mt","mb","gap","IconButton","onClick","BackIcon","variant","component","Card","borderBottom","borderColor","Tabs","e","newValue","Tab","label","Button","startIcon","AddIcon","backgroundColor","List","map","collaborator","ListItem","borderRadius","secondaryAction","removeCollaborator","userId","handleRemoveCollaborator","ListItemAvatar","Avatar","PersonIcon","ListItemText","primary","first_name","last_name","Chip","size","secondary","is_public","Grid","container","spacing","version","item","xs","md","CardContent","type","version_type","ViewIcon","EditIcon","version_number","is_approved","icon","ApproveIcon","created_by","formatDistanceToNow","Date","created_at","addSuffix","rejection_reason","Alert","flexWrap","PublishIcon","promoteVersionToPublic","handlePromoteVersion","RejectIcon","length","Paper","substring","Dialog","onClose","fullWidth","DialogTitle","DialogContent","TextField","target","select","MenuItem","DialogActions","addCollaborator","_error$response","_error$response$data","response","multiline","rows","submitVersionForReview","_error$response2","_error$response2$data","rejectProjectVersion","handleRejectVersion","Snackbar","autoHideDuration","API_BASE_URL","process","api","axios","baseURL","headers","withCredentials","interceptors","request","use","Cookies","get","log","status","token","warn","fetchCSRFToken","localStorage","getItem","config","Authorization","csrfToken","reject","removeItem","window","location","href","getAllProjects","params","arguments","undefined","getMyProjects","searchProjects","query","q","createProject","post","projectData","updateProject","put","deleteProject","delete","runProject","inputData","buyProject","purchaseData","trackProjectView","getProjectAnalytics","collaboratorData","user_id","versionData","createProjectVersion","updateProjectVersion","deleteProjectVersion","reason","analyzeComputingResources","code","getComputingResources","updateComputingResources","resourceId","resourceData","getAllProjectsAdmin","getAdminAnalytics","approveProject","rejectProject","getProjectUsage","getUserProjectUsage","getUserUsage","approveVersion","rejectVersion","submitForReview","reviewData","getPublicProject","getPrivateProject","privateUrl","executeCode","advancedSearch","filters","projectType","minPrice","maxPrice","sortBy","sortOrder","min_price","max_price","sort_by","sort_order"],"sourceRoot":""}