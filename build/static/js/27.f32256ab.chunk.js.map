{"version":3,"file":"static/js/27.f32256ab.chunk.js","mappings":"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","sources":["ScreenCapture.js","content/applications/Messenger/BottomBarContent.js","content/applications/Messenger/ChatContent.js","components/Scrollbar/index.js","content/applications/Messenger/index.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport html2canvas from 'html2canvas';\n\nconst ScreenCapture = ({ onStartCapture = () => null, onEndCapture = () => null, children }) => {\n  const [state, setState] = useState({\n    on: false,\n    startX: 0,\n    startY: 0,\n    endX: 0,\n    endY: 0,\n    crossHairsTop: 0,\n    crossHairsLeft: 0,\n    isMouseDown: false,\n    windowWidth: 0,\n    windowHeight: 0,\n    borderWidth: 0,\n    cropPositionTop: 0,\n    cropPositionLeft: 0,\n    cropWidth: 0,\n    cropHeigth: 0,\n  });\n\n  const handleWindowResize = useCallback(() => {\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n    setState((prevState) => ({\n      ...prevState,\n      windowWidth,\n      windowHeight,\n    }));\n  }, []);\n\n  useEffect(() => {\n    handleWindowResize();\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, [handleWindowResize]);\n\n  const handleStartCapture = () => setState((prevState) => ({ ...prevState, on: true }));\n\n  const handleMouseMove = (e) => {\n    const { isMouseDown, windowWidth, windowHeight, startX, startY, borderWidth } = state;\n\n    if (!isMouseDown) return;\n\n    let cropPositionTop = startY;\n    let cropPositionLeft = startX;\n    const endX = e.clientX;\n    const endY = e.clientY;\n    const isStartTop = endY >= startY;\n    const isStartBottom = endY <= startY;\n    const isStartLeft = endX >= startX;\n    const isStartRight = endX <= startX;\n    const isStartTopLeft = isStartTop && isStartLeft;\n    const isStartTopRight = isStartTop && isStartRight;\n    const isStartBottomLeft = isStartBottom && isStartLeft;\n    const isStartBottomRight = isStartBottom && isStartRight;\n\n    let newBorderWidth = borderWidth;\n    let cropWidth = 0;\n    let cropHeigth = 0;\n\n    if (isStartTopLeft) {\n      newBorderWidth = `${startY}px ${windowWidth - endX}px ${windowHeight - endY}px ${startX}px`;\n      cropWidth = endX - startX;\n      cropHeigth = endY - startY;\n    }\n\n    if (isStartTopRight) {\n      newBorderWidth = `${startY}px ${windowWidth - startX}px ${windowHeight - endY}px ${endX}px`;\n      cropWidth = startX - endX;\n      cropHeigth = endY - startY;\n      cropPositionLeft = endX;\n    }\n\n    if (isStartBottomLeft) {\n      newBorderWidth = `${endY}px ${windowWidth - endX}px ${windowHeight - startY}px ${startX}px`;\n      cropWidth = endX - startX;\n      cropHeigth = startY - endY;\n      cropPositionTop = endY;\n    }\n\n    if (isStartBottomRight) {\n      newBorderWidth = `${endY}px ${windowWidth - startX}px ${windowHeight - startY}px ${endX}px`;\n      cropWidth = startX - endX;\n      cropHeigth = startY - endY;\n      cropPositionLeft = endX;\n      cropPositionTop = endY;\n    }\n\n    setState((prevState) => ({\n      ...prevState,\n      crossHairsTop: e.clientY,\n      crossHairsLeft: e.clientX,\n      borderWidth: newBorderWidth,\n      cropWidth,\n      cropHeigth,\n      cropPositionTop,\n      cropPositionLeft,\n    }));\n  };\n\n  const handleMouseDown = (e) => {\n    const startX = e.clientX;\n    const startY = e.clientY;\n\n    setState((prevState) => ({\n      ...prevState,\n      startX,\n      startY,\n      cropPositionTop: startY,\n      cropPositionLeft: startX,\n      isMouseDown: true,\n      borderWidth: `${prevState.windowWidth}px ${prevState.windowHeight}px`,\n    }));\n  };\n\n  const handleMouseUp = () => {\n    handleClickTakeScreenShot();\n    setState((prevState) => ({\n      ...prevState,\n      on: false,\n      isMouseDown: false,\n      borderWidth: 0,\n    }));\n  };\n\n  const handleClickTakeScreenShot = () => {\n    const { cropPositionTop, cropPositionLeft, cropWidth, cropHeigth } = state;\n    const body = document.querySelector('body');\n\n    html2canvas(body).then((canvas) => {\n      const croppedCanvas = document.createElement('canvas');\n      const croppedCanvasContext = croppedCanvas.getContext('2d');\n\n      croppedCanvas.width = cropWidth;\n      croppedCanvas.height = cropHeigth;\n\n      croppedCanvasContext.drawImage(\n        canvas,\n        cropPositionLeft,\n        cropPositionTop,\n        cropWidth,\n        cropHeigth,\n        0,\n        0,\n        cropWidth,\n        cropHeigth\n      );\n\n      onEndCapture(croppedCanvas.toDataURL());\n    });\n  };\n\n  const renderChild = () => {\n    const props = {\n      onStartCapture: handleStartCapture,\n    };\n\n    return typeof children === 'function' ? children(props) : children;\n  };\n\n  const {\n    on,\n    crossHairsTop,\n    crossHairsLeft,\n    borderWidth,\n    isMouseDown,\n  } = state;\n\n  if (!on) return renderChild();\n\n  return (\n    <div\n      onMouseMove={handleMouseMove}\n      onMouseDown={handleMouseDown}\n      onMouseUp={handleMouseUp}\n    >\n      {renderChild()}\n      <div\n        className={`overlay ${isMouseDown && 'highlighting'}`}\n        style={{ borderWidth }}\n      />\n      <div\n        className=\"crosshairs\"\n        style={{ left: crossHairsLeft + 'px', top: crossHairsTop + 'px' }}\n      />\n    </div>\n  );\n};\n\nexport default ScreenCapture;\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  Tooltip,\r\n  IconButton,\r\n  Box,\r\n  styled,\r\n  InputBase,\r\n  useTheme,\r\n  Menu,\r\n  MenuItem,\r\n  Divider,\r\n  Typography,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport swal from 'sweetalert2';\r\nimport i18next from 'i18next';\r\nimport ScreenCapture from 'src/ScreenCapture';\r\nimport {\r\n  setMessages,\r\n  sendMessage,\r\n  stopGeneration,\r\n  generateImage,\r\n  generateImagenImage,\r\n  stopImageGeneration\r\n} from 'src/actions/chatAction';\r\nimport { selectModel } from 'src/actions/settingAction';\r\nimport { SidebarContext } from 'src/contexts/SidebarContext';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  SET_MESSAGES\r\n} from 'src/actions/types';\r\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined';\r\nimport AddPhotoAlternateOutlinedIcon from '@mui/icons-material/AddPhotoAlternateOutlined';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport StopCircleIcon from '@mui/icons-material/StopCircle';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\n\r\nconst MessageInputWrapper = styled(InputBase)(({ theme }) => ({\r\n  fontSize: theme.typography.pxToRem(18),\r\n  padding: theme.spacing(1),\r\n  width: '100%',\r\n  maxHeight: theme.typography.pxToRem(162),\r\n  lineHeight: 1.6,\r\n  '& .MuiInputBase-input': {\r\n    lineHeight: 1.6,\r\n    '&::placeholder': {\r\n      lineHeight: 1.6\r\n    }\r\n  }\r\n}));\r\n\r\nconst ImageGenerationModeBox = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  background: 'rgba(16, 163, 127, 0.1)',\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(0.5, 1),\r\n  marginBottom: theme.spacing(1),\r\n  border: '1px solid rgba(16, 163, 127, 0.2)'\r\n}));\r\n\r\nfunction BottomBarContent({ file: propFile }) {\r\n  const theme = useTheme();\r\n  const { user, getUserData } = useAuth();\r\n  const { selectedFile } = useContext(SidebarContext);\r\n  const dispatch = useDispatch();\r\n  const model = useSelector((state) => state.setting.model);\r\n  const messages = useSelector((state) => state.chat.messages);\r\n  const selectedChatLog = useSelector((state) => state.chat.selectedChatLog);\r\n  const activeChatId = useSelector((state) => state.chat.activeChatId);\r\n  const isGenerating = useSelector((state) => state.chat.isGenerating);\r\n  const imageGenerating = useSelector((state) => state.chat.imageGenerating);\r\n  const imageError = useSelector((state) => state.chat.imageError);\r\n  const { t } = useTranslation();\r\n  const [file, setFile] = useState(null);\r\n  const [filePreview, setFilePreview] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [anchorE2, setAnchorE2] = useState(null);\r\n  const [input, setInput] = useState('');\r\n  const [screenCapture, setScreenCapture] = useState(null);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [currentSize, setCurrentSize] = useState('1024x1024');\r\n  const [currentQuality, setCurrentQuality] = useState('standard');\r\n  const [currentStyle, setCurrentStyle] = useState('vivid');\r\n  const [previousMessages, setPreviousMessages] = useState([]);\r\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(-1);\r\n\r\n  const isImageModel = model && model.isImageModel;\r\n\r\n  useEffect(() => {\r\n    previewFile(propFile);\r\n  }, [propFile]);\r\n\r\n  useEffect(() => {\r\n    previewFile(selectedFile);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"paste\", handlePaste);\r\n    return () => {\r\n      document.removeEventListener(\"paste\", handlePaste);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user?.balance <= 0) {\r\n      dispatch(selectModel({\r\n        id: 'gpt-4o-mini',\r\n        label: 'GPT-4o mini',\r\n        icons: [],\r\n        requiresPayment: false\r\n      }));\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setIsMobile(window.innerWidth <= 768);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const handlePaste = (event) => {\r\n    const clipboardItems = event.clipboardData.items;\r\n    for (const item of clipboardItems) {\r\n      if (item.type.indexOf(\"image\") !== -1) {\r\n        const blob = item.getAsFile();\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          setScreenCapture(e.target.result);\r\n        };\r\n        reader.readAsDataURL(blob);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const previewFile = (propFile) => {\r\n    if (propFile) {\r\n      setFile(propFile);\r\n      const fileUrl = URL.createObjectURL(propFile);\r\n      if (propFile.type.startsWith('image/')) {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          setScreenCapture(reader.result);\r\n        };\r\n        reader.readAsDataURL(propFile);\r\n      } else if (propFile.type === \"application/pdf\" || propFile.type === \"application/msword\" ||\r\n        propFile.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\r\n        setFilePreview(fileUrl);\r\n      } else {\r\n        swal.fire({\r\n          title: i18next.t(\"Please upload a valid file(pdf, doc, docx, images)\"),\r\n          icon: \"error\",\r\n          toast: true,\r\n          timer: 3000,\r\n          position: 'bottom-right',\r\n          customClass: {\r\n            popup: 'swal-popup',\r\n            container: 'swal-container',\r\n            title: 'swal-title',\r\n            icon: 'swal-icon'\r\n          },\r\n          timerProgressBar: true,\r\n          showConfirmButton: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleScreenCaptureMessage = () => {\r\n    if (screenCapture) {\r\n      const newMessage = {\r\n        role: 'user',\r\n        content: input || 'Screenshot',\r\n        base64Encoded: screenCapture\r\n      };\r\n      dispatch({\r\n        type: SET_MESSAGES,\r\n        payload: {\r\n          newMessage: newMessage\r\n        }\r\n      });\r\n      setInput('');\r\n      const formData = new FormData();\r\n      const base64Data = screenCapture.split(',')[1];\r\n      const blob = base64ToBlob(base64Data, 'image/png');\r\n      const formattedMessages = [...selectedChatLog].map(({ role, content }) => ({\r\n        role: role === 'assistant' ? 'assistant' : 'user',\r\n        content: content\r\n      }));\r\n      formattedMessages.push({\r\n        role: 'user',\r\n        content: [\r\n          {\r\n            type: 'text',\r\n            text: input || 'Screenshot'\r\n          },\r\n          {\r\n            type: 'image_url',\r\n            image_url: {\r\n              url: screenCapture\r\n            }\r\n          }\r\n        ]\r\n      });\r\n      formData.append('message', input || 'Screenshot');\r\n      formData.append('model', model?.id || 'gpt-4o-mini');\r\n      formData.append('file', blob, 'screenshot.png');\r\n      formData.append('base64Encoded', screenCapture);\r\n      formData.append(\"formattedMessages\", JSON.stringify(formattedMessages));\r\n      if (user) {\r\n        formData.append('user_id', user.id);\r\n        if (activeChatId != null) {\r\n          formData.append('chat_id', activeChatId);\r\n        }\r\n        dispatch(sendMessage(formData, user.id, activeChatId));\r\n      } else {\r\n        dispatch(sendMessage(formData));\r\n      }\r\n      setScreenCapture(null);\r\n    }\r\n  };\r\n\r\n  const base64ToBlob = (base64, mimeType) => {\r\n    const byteCharacters = atob(base64);\r\n    const byteArrays = [];\r\n    for (let i = 0; i < byteCharacters.length; i += 512) {\r\n      const slice = byteCharacters.slice(i, i + 512);\r\n      const byteNumbers = new Array(slice.length);\r\n      for (let j = 0; j < slice.length; j++) {\r\n        byteNumbers[j] = slice.charCodeAt(j);\r\n      }\r\n      byteArrays.push(new Uint8Array(byteNumbers));\r\n    }\r\n    return new Blob(byteArrays, { type: mimeType });\r\n  };\r\n\r\n  const fireEvent = (eventName, eventData) => {\r\n    console.log(`Event: ${eventName}`, eventData);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (screenCapture) {\r\n      handleScreenCaptureMessage();\r\n      return;\r\n    }\r\n    if (model && model.isImageModel && input.trim()) {\r\n      handleImageGeneration();\r\n      return;\r\n    }\r\n    if (!input.trim()) return;\r\n    const newMessage = {\r\n      role: 'user',\r\n      content: input,\r\n      file: filePreview ? file.name : null,\r\n      base64Encoded: screenCapture ? screenCapture : null,\r\n      model: model?.id || 'default'\r\n    };\r\n    dispatch(setMessages({\r\n      message: newMessage\r\n    }));\r\n    setPreviousMessages([...previousMessages, input]);\r\n    setCurrentMessageIndex(-1);\r\n    let formattedMessages = [...selectedChatLog].map(({ role, content }) => ({\r\n      role: role === 'assistant' ? 'assistant' : 'user',\r\n      content: content\r\n    }));\r\n    if (screenCapture) {\r\n      formattedMessages.push({\r\n        role: 'user',\r\n        content: [\r\n          {\r\n            type: 'text',\r\n            text: input\r\n          },\r\n          {\r\n            type: 'image_url',\r\n            image_url: {\r\n              url: screenCapture\r\n            }\r\n          }\r\n        ]\r\n      });\r\n    } else {\r\n      formattedMessages.push({\r\n        role: 'user',\r\n        content: input\r\n      });\r\n    }\r\n    const formData = new FormData();\r\n    if (file != null) {\r\n      formData.append(\"file\", file);\r\n    }\r\n    if (screenCapture != null) {\r\n      formData.append(\"base64Encoded\", screenCapture);\r\n    }\r\n    if (user) {\r\n      formData.append('user_id', user.id);\r\n      if (activeChatId != null) {\r\n        formData.append('chat_id', activeChatId);\r\n      }\r\n    }\r\n    formData.append('model', model.id);\r\n    formData.append(\"message\", input);\r\n    formData.append(\"formattedMessages\", JSON.stringify(formattedMessages));\r\n    setInput('');\r\n    setFile(null);\r\n    setFilePreview(null);\r\n    setScreenCapture(null);\r\n    if (user) {\r\n      try {\r\n        const res = dispatch(sendMessage(formData, user.id, activeChatId));\r\n        if (res) {\r\n          getUserData();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to send message:\", error);\r\n      }\r\n    } else {\r\n      dispatch(sendMessage(formData));\r\n    }\r\n  };\r\n\r\n  const handleImageGeneration = () => {\r\n    const imageOptions = {\r\n      prompt: input,\r\n      model: model?.id,\r\n      n: 1\r\n    };\r\n    if (currentSize) {\r\n      imageOptions.size = currentSize;\r\n    }\r\n    if (currentQuality) {\r\n      imageOptions.quality = currentQuality;\r\n    }\r\n    if (currentStyle) {\r\n      imageOptions.style = currentStyle;\r\n    }\r\n    setInput('');\r\n    if (model && model.useImagenAPI) {\r\n      dispatch(generateImagenImage(imageOptions, user?.id, activeChatId));\r\n    } else {\r\n      dispatch(generateImage(imageOptions, user?.id, activeChatId));\r\n    }\r\n    fireEvent('image_generation_attempt', {\r\n      modelId: model.id,\r\n      isImageModel: true\r\n    });\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      if (isMobile) {\r\n        return;\r\n      }\r\n      if (!e.shiftKey) {\r\n        e.preventDefault();\r\n        handleSendMessage();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.ctrlKey && e.key === 'ArrowUp') {\r\n      e.preventDefault();\r\n      if (previousMessages.length > 0) {\r\n        const newIndex = currentMessageIndex === -1 ? previousMessages.length - 1 : currentMessageIndex - 1;\r\n        setCurrentMessageIndex(newIndex);\r\n        setInput(previousMessages[newIndex]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEmojiClick = (emojiObject) => {\r\n    setInput((prev) => prev + emojiObject.emoji);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    if (selectedFile) {\r\n      setFile(selectedFile);\r\n      if (selectedFile.type.startsWith('image/')) {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          setScreenCapture(reader.result);\r\n        };\r\n        reader.readAsDataURL(selectedFile);\r\n      } else if (selectedFile.type === \"application/pdf\" || selectedFile.type === \"application/msword\" ||\r\n        selectedFile.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\") {\r\n        const fileUrl = URL.createObjectURL(selectedFile);\r\n        setFilePreview(fileUrl);\r\n      } else {\r\n        swal.fire({\r\n          title: i18next.t(\"Please upload a valid file(pdf, doc, docx, images)\"),\r\n          icon: \"error\",\r\n          toast: true,\r\n          timer: 3000,\r\n          position: 'bottom-right',\r\n          customClass: {\r\n            popup: 'swal-popup',\r\n            container: 'swal-container',\r\n            title: 'swal-title',\r\n            icon: 'swal-icon'\r\n          },\r\n          timerProgressBar: true,\r\n          showConfirmButton: false\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    setAnchorE2(null);\r\n  };\r\n\r\n  const handleScreenCapture = (capturedImage) => {\r\n    if (capturedImage !== \"data:,\") {\r\n      setScreenCapture(capturedImage);\r\n    }\r\n  };\r\n\r\n  const handleStopGeneration = () => {\r\n    dispatch(stopGeneration());\r\n  };\r\n\r\n  const handleStopImageGeneration = () => {\r\n    dispatch(stopImageGeneration());\r\n  };\r\n\r\n  const Preview = ({ type, children, onDelete }) => (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        p: type == \"img\" ? '3px' : '7px',\r\n        maxWidth: type == \"img\" ? 50 : 250,\r\n        height: 50,\r\n        border: '1px solid gray',\r\n        borderRadius: 1,\r\n        display: 'flex',\r\n        flex: 'none',\r\n        alignItems: 'center',\r\n        color: 'black',\r\n        gap: 0.5,\r\n        mx: 1\r\n      }}\r\n    >\r\n      {children}\r\n      <IconButton\r\n        sx={{ color: 'black', position: 'absolute', right: -17, top: -17, fontSize: 20 }}\r\n        onClick={onDelete}\r\n      >\r\n        <CancelIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setIsDragging(false);\r\n    const droppedFile = e.dataTransfer.files[0];\r\n    if (droppedFile) {\r\n      if (droppedFile.type.startsWith('image/')) {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => {\r\n          setScreenCapture(reader.result);\r\n        };\r\n        reader.readAsDataURL(droppedFile);\r\n      } else if (\r\n        droppedFile.type === \"application/pdf\" ||\r\n        droppedFile.type === \"application/msword\" ||\r\n        droppedFile.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n      ) {\r\n        const fileUrl = URL.createObjectURL(droppedFile);\r\n        setFile(droppedFile);\r\n        setFilePreview(fileUrl);\r\n      } else {\r\n        swal.fire({\r\n          title: i18next.t(\"Please upload a valid file(pdf, doc, docx, images)\"),\r\n          icon: \"error\",\r\n          toast: true,\r\n          timer: 3000,\r\n          position: 'bottom-right',\r\n          customClass: {\r\n            popup: 'swal-popup',\r\n            container: 'swal-container',\r\n            title: 'swal-title',\r\n            icon: 'swal-icon'\r\n          },\r\n          timerProgressBar: true,\r\n          showConfirmButton: false\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScreenCapture onEndCapture={handleScreenCapture}>\r\n      {({ onStartCapture }) => (\r\n        <Box\r\n          sx={{\r\n            background: 'white',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            px: 2,\r\n            py: 1,\r\n            position: 'relative'\r\n          }}\r\n          onDragOver={handleDragOver}\r\n          onDragLeave={handleDragLeave}\r\n          onDrop={handleDrop}\r\n        >\r\n          {isDragging && (\r\n            <Box\r\n              sx={{\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                backgroundColor: 'rgba(38, 90, 158, 0.05)',\r\n                border: '2px dashed #265A9E',\r\n                borderRadius: 2,\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                zIndex: 10\r\n              }}\r\n            >\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  gap: 2\r\n                }}\r\n              >\r\n                <svg width=\"40\" height=\"40\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path d=\"M17.8033 10.4665L9.94233 18.0854C8.75873 19.2326 8.75873 21.0935 9.94233 22.2407V22.2407C11.1259 23.3878 13.046 23.3878 14.2296 22.2407L24.5925 12.1969C26.7634 10.0929 26.7634 6.68204 24.5925 4.57802V4.57802C22.4216 2.47399 18.9024 2.47399 16.7315 4.57802L6.36862 14.6218C3.21046 17.6827 3.21046 22.6434 6.36862 25.7043V25.7043C9.52678 28.7652 14.6452 28.7652 17.8033 25.7043L24.0924 19.6089\" stroke=\"#265A9E\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                </svg>\r\n                <Typography sx={{ color: '#265A9E', fontWeight: 500 }}>\r\n                  {t(\"Drop your file here\")}\r\n                </Typography>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          <Box flexGrow={1} display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n            {isImageModel && (\r\n              <ImageGenerationModeBox>\r\n                <ImageIcon sx={{ color: '#10a37f', mr: 1, fontSize: 20 }} />\r\n                <Typography variant=\"body2\" sx={{ color: '#10a37f', fontWeight: 500 }}>\r\n                  {model?.useImagenAPI\r\n                    ? t('Imagen 3 Image Mode')\r\n                    : model?.id === 'dall-e-3'\r\n                      ? t('DALL-E 3 Image Mode')\r\n                      : t('DALL-E 2 Image Mode')}\r\n                </Typography>\r\n              </ImageGenerationModeBox>\r\n            )}\r\n            {(filePreview || screenCapture) && (\r\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                {filePreview && (\r\n                  <Preview type=\"file\" onDelete={() => setFilePreview(null)}>\r\n                    <div style={{ width: 30 }}>\r\n                      <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M17.8033 10.4665L9.94233 18.0854C8.75873 19.2326 8.75873 21.0935 9.94233 22.2407V22.2407C11.1259 23.3878 13.046 23.3878 14.2296 22.2407L24.5925 12.1969C26.7634 10.0929 26.7634 6.68204 24.5925 4.57802V4.57802C22.4216 2.47399 18.9024 2.47399 16.7315 4.57802L6.36862 14.6218C3.21046 17.6827 3.21046 22.6434 6.36862 25.7043V25.7043C9.52678 28.7652 14.6452 28.7652 17.8033 25.7043L24.0924 19.6089\" stroke=\"#667085\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                      </svg>\r\n                    </div>\r\n                    <span style={{ overflow: 'hidden', textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{file.name}</span>\r\n                  </Preview>\r\n                )}\r\n                {screenCapture && (\r\n                  <Preview type=\"img\" onDelete={() => setScreenCapture(null)}>\r\n                    <Box component=\"img\" src={screenCapture} alt=\"Screen Capture\" sx={{ borderRadius: 1, width: '100%', height: '100%' }} />\r\n                  </Preview>\r\n                )}\r\n              </Box>\r\n            )}\r\n            <MessageInputWrapper\r\n              autoFocus\r\n              placeholder={\r\n                isGenerating\r\n                  ? t('Generating Response')\r\n                  : imageGenerating\r\n                    ? t('Generating Image')\r\n                    : isImageModel\r\n                      ? model?.useImagenAPI\r\n                        ? t('Describe Image for Imagen to Generate')\r\n                        : t('Describe Image To Generate')\r\n                      : t('Write a message. Use Ctrl + Up to view the previous message.')\r\n              }\r\n              multiline\r\n              disabled={isGenerating || imageGenerating}\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              maxRows={9}\r\n              sx={{\r\n                fontSize: 15,\r\n                color: '#667085',\r\n                '& .MuiInputBase-input': {\r\n                  maxHeight: '162px',\r\n                  overflowY: 'auto'\r\n                }\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              width: \"100%\",\r\n              alignItems: \"center\",\r\n              mt: 1\r\n            }}\r\n          >\r\n            <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\r\n              {!isImageModel && (\r\n                <>\r\n                  <Tooltip arrow title={t(\"chooseEmoji\")}>\r\n                    <IconButton onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                      <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <g clipPath=\"url(#clip0_28_1551)\">\r\n                          <path d=\"M15 0C6.72896 0 0 6.72896 0 15C0 23.271 6.72896 30 15 30C23.271 30 30 23.271 30 15C30 6.72896 23.271 0 15 0ZM15 28.125C7.76285 28.125 1.875 22.2371 1.875 15C1.875 7.76285 7.76285 1.875 15 1.875C22.2371 1.875 28.125 7.76285 28.125 15C28.125 22.2371 22.2371 28.125 15 28.125ZM23.0595 19.1719C22.0814 20.3634 20.8512 21.3232 19.4576 21.9822C18.0639 22.6412 16.5415 22.983 14.9999 22.983C13.4584 22.983 11.9359 22.6412 10.5423 21.9822C9.1487 21.3232 7.91852 20.3634 6.94037 19.1719C6.86173 19.0768 6.80263 18.9672 6.76645 18.8492C6.73027 18.7313 6.71772 18.6074 6.72952 18.4846C6.74133 18.3618 6.77725 18.2425 6.83524 18.1336C6.89323 18.0247 6.97213 17.9284 7.06744 17.85C7.16274 17.7717 7.27257 17.7129 7.39062 17.6771C7.50868 17.6413 7.63264 17.6292 7.7554 17.6414C7.87816 17.6536 7.99731 17.6899 8.10601 17.7482C8.21472 17.8065 8.31084 17.8858 8.38887 17.9813C9.19113 18.9588 10.2002 19.7463 11.3433 20.2869C12.4865 20.8276 13.7353 21.108 14.9999 21.108C16.2645 21.108 17.5133 20.8276 18.6565 20.2869C19.7997 19.7463 20.8087 18.9588 21.611 17.9813C21.7691 17.7901 21.9966 17.6694 22.2436 17.6457C22.4906 17.622 22.7369 17.6971 22.9286 17.8546C23.1203 18.0122 23.2417 18.2393 23.2662 18.4862C23.2907 18.7331 23.2164 18.9797 23.0595 19.1719H23.0595ZM17.1759 12.4075V11.748C17.1759 10.3672 18.4639 9.24387 20.047 9.24387C21.6301 9.24387 22.9181 10.3672 22.9181 11.748V12.4078C22.9181 12.6565 22.8194 12.8949 22.6435 13.0707C22.4677 13.2465 22.2293 13.3453 21.9806 13.3453C21.732 13.3453 21.4935 13.2465 21.3177 13.0707C21.1419 12.8949 21.0431 12.6565 21.0431 12.4078V11.748C21.0431 11.451 20.6171 11.1189 20.047 11.1189C19.477 11.1189 19.0509 11.451 19.0509 11.748V12.4078C19.0509 12.6565 18.9522 12.8949 18.7764 13.0707C18.6005 13.2465 18.3621 13.3453 18.1134 13.3453C17.8648 13.3453 17.6263 13.2465 17.4505 13.0707C17.2747 12.8949 17.1759 12.6565 17.1759 12.4078V12.4075ZM7.08158 12.4075V11.748C7.08158 10.3672 8.36965 9.24387 9.95268 9.24387C11.5357 9.24387 12.8238 10.3672 12.8238 11.748V12.4078C12.8238 12.6565 12.725 12.8949 12.5492 13.0707C12.3734 13.2465 12.1349 13.3453 11.8863 13.3453C11.6376 13.3453 11.3992 13.2465 11.2234 13.0707C11.0475 12.8949 10.9488 12.6565 10.9488 12.4078V11.748C10.9488 11.451 10.5228 11.1189 9.95268 11.1189C9.38256 11.1189 8.95658 11.451 8.95658 11.748V12.4078C8.95658 12.6565 8.85781 12.8949 8.682 13.0707C8.50618 13.2465 8.26772 13.3453 8.01908 13.3453C7.77044 13.3453 7.53198 13.2465 7.35617 13.0707C7.18035 12.8949 7.08158 12.6565 7.08158 12.4078V12.4075Z\" fill=\"#667085\" />\r\n                        </g>\r\n                        <defs>\r\n                          <clipPath id=\"clip0_28_1551\">\r\n                            <rect width=\"30\" height=\"30\" fill=\"white\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                      </svg>\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                  <Tooltip arrow title={t(\"sendFile\")}>\r\n                    <IconButton onClick={(e) => setAnchorE2(e.currentTarget)}>\r\n                      <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M17.8033 10.4665L9.94233 18.0854C8.75873 19.2326 8.75873 21.0935 9.94233 22.2407V22.2407C11.1259 23.3878 13.046 23.3878 14.2296 22.2407L24.5925 12.1969C26.7634 10.0929 26.7634 6.68204 24.5925 4.57802V4.57802C22.4216 2.47399 18.9024 2.47399 16.7315 4.57802L6.36862 14.6218C3.21046 17.6827 3.21046 22.6434 6.36862 25.7043V25.7043C9.52678 28.7652 14.6452 28.7652 17.8033 25.7043L24.0924 19.6089\" stroke=\"#667085\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                      </svg>\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            </Box>\r\n            {isGenerating ? (\r\n              <Tooltip arrow title={t(\"stopGeneration\")}>\r\n                <IconButton\r\n                  onClick={handleStopGeneration}\r\n                  sx={{\r\n                    color: '#d32f2f',\r\n                    '&:hover': {\r\n                      backgroundColor: 'rgba(211, 47, 47, 0.04)'\r\n                    }\r\n                  }}\r\n                >\r\n                  <StopCircleIcon fontSize=\"large\" />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : imageGenerating ? (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                  <CircularProgress size={20} sx={{ color: '#10a37f', mr: 1 }} />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {t('generatingImage')}...\r\n                  </Typography>\r\n                </Box>\r\n                <Tooltip arrow title={t(\"stopImageGeneration\")}>\r\n                  <IconButton\r\n                    onClick={handleStopImageGeneration}\r\n                    sx={{\r\n                      color: '#d32f2f',\r\n                      '&:hover': {\r\n                        backgroundColor: 'rgba(211, 47, 47, 0.04)'\r\n                      }\r\n                    }}\r\n                  >\r\n                    <StopCircleIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Box>\r\n            ) : (\r\n              <IconButton onClick={handleSendMessage}>\r\n                {isImageModel ? (\r\n                  <ImageIcon sx={{ color: '#10a37f', fontSize: 24 }} />\r\n                ) : (\r\n                  <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M27.6263 13.2025L3.44125 1.40374C3.20884 1.29048 2.95142 1.23822 2.69324 1.25188C2.43506 1.26554 2.1846 1.34467 1.96544 1.48182C1.74627 1.61898 1.56561 1.80964 1.44045 2.03587C1.31529 2.26209 1.24975 2.51645 1.25 2.77499V2.81874C1.25012 3.02313 1.27531 3.22673 1.325 3.42499L3.645 12.705C3.6761 12.8286 3.74426 12.9398 3.84033 13.0236C3.9364 13.1073 4.0558 13.1597 4.1825 13.1737L14.3788 14.3075C14.5484 14.3279 14.7047 14.4098 14.8181 14.5376C14.9315 14.6654 14.9941 14.8304 14.9941 15.0012C14.9941 15.1721 14.9315 15.3371 14.8181 15.4649C14.7047 15.5927 14.5484 15.6746 14.3788 15.695L4.1825 16.8287C4.0558 16.8427 3.9364 16.8951 3.84033 16.9789C3.74426 17.0627 3.6761 17.1739 3.645 17.2975L1.325 26.5762C1.27531 26.7745 1.25012 26.9781 1.25 27.1825V27.2262C1.24996 27.4847 1.31565 27.7389 1.4409 27.9649C1.56615 28.191 1.74683 28.3815 1.96597 28.5185C2.1851 28.6555 2.43548 28.7345 2.69356 28.7481C2.95163 28.7617 3.20893 28.7095 3.44125 28.5962L27.625 16.7975C27.9618 16.6332 28.2457 16.3776 28.4442 16.0597C28.6428 15.7419 28.7481 15.3747 28.7481 15C28.7481 14.6253 28.6428 14.258 28.4442 13.9402C28.2457 13.6224 27.9631 13.3668 27.6263 13.2025Z\" fill=\"#667085\" />\r\n                  </svg>\r\n                )}\r\n              </IconButton>\r\n            )}\r\n          </Box>\r\n          <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n            <EmojiPicker onEmojiClick={handleEmojiClick} />\r\n          </Menu>\r\n          <Menu\r\n            anchorEl={anchorE2}\r\n            open={Boolean(anchorE2)}\r\n            onClose={() => setAnchorE2(null)}\r\n            PaperProps={{\r\n              sx: {\r\n                padding: 0,\r\n              },\r\n            }}\r\n            MenuListProps={{\r\n              sx: {\r\n                padding: 0,\r\n              },\r\n            }}\r\n            sx={{\r\n              '.MuiMenu-paper': {\r\n                top: 'unset !important',\r\n                bottom: '65px !important'\r\n              },\r\n            }}\r\n          >\r\n            <label htmlFor=\"messenger-upload-file\">\r\n              <MenuItem\r\n                sx={{\r\n                  color: 'black !important',\r\n                  borderRadius: 0,\r\n                  py: 1,\r\n                  '&:hover': {\r\n                    color: 'white !important',\r\n                    backgroundColor: '#265A9E',\r\n                  },\r\n                }}\r\n              >\r\n                <input\r\n                  id=\"messenger-upload-file\"\r\n                  type=\"file\"\r\n                  accept=\"image/jpeg, image/png, application/pdf, .doc, .docx\"\r\n                  style={{ display: 'none' }}\r\n                  onChange={handleFileChange}\r\n                />\r\n                <InsertDriveFileOutlinedIcon /> {t('sendFile')}\r\n              </MenuItem>\r\n            </label>\r\n            <Divider sx={{ my: '0px !important' }} />\r\n            <MenuItem\r\n              onClick={() => {\r\n                onStartCapture();\r\n                setAnchorE2(null);\r\n              }}\r\n              sx={{\r\n                color: 'black !important',\r\n                borderRadius: 0,\r\n                py: 1,\r\n                '&:hover': {\r\n                  color: 'white !important',\r\n                  backgroundColor: '#265A9E',\r\n                },\r\n              }}\r\n            >\r\n              <AddPhotoAlternateOutlinedIcon /> {t(\"attachScreenshort\")}\r\n            </MenuItem>\r\n          </Menu>\r\n        </Box>\r\n      )}\r\n    </ScreenCapture>\r\n  );\r\n}\r\n\r\nexport default BottomBarContent;\r\n","import { forwardRef, useImperativeHandle } from 'react';\r\nimport { Box, Avatar, Button, Typography, Card, styled, Divider, Fab, Zoom, Tooltip, CardActionArea, Dialog, DialogContent } from '@mui/material';\r\nimport SmsIcon from '@mui/icons-material/Sms';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport SmartToyIcon from '@mui/icons-material/SmartToy';\r\nimport AutoAwesomeIcon from '@mui/icons-material/AutoAwesome';\r\nimport PsychologyIcon from '@mui/icons-material/Psychology';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport rehypeHighlight from 'rehype-highlight';\r\n\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport { useSidebar } from 'src/contexts/SidebarContext';\r\nimport { getUserChat } from 'src/actions/chatAction';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport ImageSearchIcon from '@mui/icons-material/ImageSearch';\r\nimport { ImageList, ImageListItem } from '@mui/material';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nconst CardWrapperPrimary = styled(Card)(({ theme }) => ({\r\n  background: \"linear-gradient(135deg, #265A9E 0%, #1e4c8a 100%)\",\r\n  color: \"white\",\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.general.borderRadiusXl,\r\n  borderTopRightRadius: theme.general.borderRadius,\r\n  maxWidth: \"100%\",\r\n  marginBottom: \"15px\",\r\n  marginLeft: \"0px\",\r\n  boxShadow: '0 3px 12px rgba(38, 90, 158, 0.15)',\r\n  position: 'relative',\r\n  overflow: 'visible',\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    right: '15px',\r\n    bottom: '-8px',\r\n    width: '20px',\r\n    height: '20px',\r\n    backgroundColor: '#1e4c8a',\r\n    transform: 'rotate(45deg)',\r\n    borderRadius: '4px',\r\n    zIndex: -1,\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    marginLeft: '54px'\r\n  }\r\n}));\r\n\r\n\r\nconst CardWrapperSecondary = styled(Card)(({ theme }) => ({\r\n  background: \"linear-gradient(135deg, #ffffff 0%, #f8f9fc 100%)\",\r\n  color: \"#667085\",\r\n  padding: theme.spacing(2),\r\n  borderRadius: theme.general.borderRadiusXl,\r\n  borderTopLeftRadius: theme.general.borderRadius,\r\n  maxWidth: \"100%\",\r\n  marginBottom: \"15px\",\r\n  marginRight: \"0px\",\r\n  boxShadow: '0 3px 12px rgba(0, 0, 0, 0.04)',\r\n  position: 'relative',\r\n  overflow: 'visible',\r\n  '&:after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    left: '15px',\r\n    bottom: '-8px',\r\n    width: '20px',\r\n    height: '20px',\r\n    backgroundColor: '#f8f9fc',\r\n    transform: 'rotate(45deg)',\r\n    borderRadius: '4px',\r\n    zIndex: -1,\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    marginRight: '54px'\r\n  }\r\n}));\r\n\r\nconst ScrollToBottomFab = styled(Fab)(({ theme }) => ({\r\n  position: 'fixed',\r\n  bottom: '70px',\r\n  left: '47%',\r\n  transform: 'translateX(-50%)',\r\n  zIndex: 1000,\r\n  minHeight: '32px',\r\n  height: '32px',\r\n  width: '32px',\r\n  backgroundColor: 'rgba(38, 90, 158, 0.6)',\r\n  color: 'white',\r\n  boxShadow: '0px 2px 5px rgba(0, 0, 0, 0.08)',\r\n  transition: 'all 0.2s ease-in-out',\r\n  '&:hover': {\r\n    backgroundColor: 'rgba(38, 90, 158, 0.85)',\r\n    transform: 'translateX(-50%) scale(1.05)',\r\n  },\r\n  [theme.breakpoints.up('md')]: {\r\n    left: '60%',\r\n    transform: 'translateX(-60%)',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(38, 90, 158, 0.85)',\r\n      transform: 'translateX(-60%) scale(1.05)',\r\n    },\r\n  }\r\n}));\r\n\r\n// Add styled component for image display in chat\r\nconst ChatImageWrapper = styled(Box)(({ theme }) => ({\r\n  marginTop: theme.spacing(1.5),\r\n  marginBottom: theme.spacing(1),\r\n  borderRadius: theme.spacing(1.5),\r\n  overflow: 'hidden',\r\n  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.08)',\r\n  border: '1px solid rgba(0, 0, 0, 0.08)',\r\n  position: 'relative',\r\n  maxWidth: 350,\r\n  '& img': {\r\n    width: '100%',\r\n    height: 'auto',\r\n    display: 'block',\r\n    transition: 'transform 0.3s ease',\r\n  },\r\n  '&:hover img': {\r\n    transform: 'scale(1.02)',\r\n  },\r\n}));\r\n\r\n// Add styled component for user messages with images\r\nconst ChatUserMessage = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  color: 'white',\r\n  '& .message-text': {\r\n    marginBottom: theme.spacing(1),\r\n    fontSize: '0.95rem',\r\n    lineHeight: 1.5,\r\n  },\r\n  '& .image-caption': {\r\n    fontSize: '0.85rem',\r\n    color: 'rgba(255, 255, 255, 0.8)',\r\n    marginTop: theme.spacing(0.5),\r\n  }\r\n}));\r\n\r\n// Add styled component for assistant message with images\r\nconst ChatAssistantImageMessage = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  '& .message-text': {\r\n    marginBottom: theme.spacing(1.5),\r\n    color: '#444',\r\n    fontSize: '0.95rem',\r\n    lineHeight: 1.5,\r\n  },\r\n  '& .image-grid': {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\r\n    gap: theme.spacing(1.5),\r\n  }\r\n}));\r\n\r\n// Add a message container for better spacing and layout\r\nconst MessageContainer = styled(Box)(({ theme, role }) => ({\r\n  display: \"flex\",\r\n  alignItems: role === 'assistant' ? \"flex-start\" : \"flex-end\",\r\n  justifyContent: role === 'assistant' ? \"flex-start\" : \"flex-end\",\r\n  padding: theme.spacing(0.5, 2),\r\n  marginBottom: theme.spacing(0.5),\r\n  position: 'relative',\r\n  width: \"100%\",\r\n}));\r\n\r\nconst MessageContent = styled(Box)(({ theme, role }) => ({\r\n  display: \"flex\",\r\n  alignItems: role === 'assistant' ? \"flex-start\" : \"flex-end\",\r\n  flexDirection: \"column\",\r\n  justifyContent: role === 'assistant' ? \"flex-start\" : \"flex-end\",\r\n  maxWidth: \"85%\",\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    maxWidth: \"70%\",\r\n  },\r\n  position: 'relative',\r\n}));\r\n\r\nconst getModelDetails = (modelName) => {\r\n  let icon = <SmsIcon style={{ fontSize: '16px' }} />;\r\n  let color = '#666';\r\n  let bgColor = '#f4f5f7';\r\n  let displayName = modelName || 'Unknown Model';\r\n\r\n  // DALL-E models\r\n  if (modelName?.includes('DALL-E')) {\r\n    icon = <ImageIcon style={{ fontSize: '16px' }} />;\r\n    color = '#ab68ff'; // purple for DALL-E\r\n    bgColor = '#fcf7ff';\r\n    displayName = modelName.includes('DALL-E 3') ? 'DALL-E 3' : 'DALL-E 2';\r\n  }\r\n  // o3 models\r\n  else if (modelName?.includes('o3-mini')) {\r\n    icon = <ImageIcon style={{ fontSize: '16px' }} />;\r\n    color = '#10a37f'; // OpenAI green\r\n    bgColor = '#e6f6f2';\r\n    displayName = 'O3 MINI';\r\n  }\r\n  // Imagen models\r\n  else if (modelName?.includes('Imagen') || modelName?.includes('gemini-2.0-flash-exp-image-generation')) {\r\n    icon = <ImageIcon style={{ fontSize: '16px' }} />;\r\n    color = '#4285F4'; // Google blue for Imagen\r\n    bgColor = '#e8f0fe';\r\n    displayName = 'IMAGEN 3';\r\n  }\r\n  // OpenAI models\r\n  else if (modelName?.includes('GPT') || modelName?.includes('OpenAI')) {\r\n    icon = <AutoAwesomeIcon style={{ fontSize: '16px' }} />;\r\n    color = '#10a37f'; // OpenAI green\r\n    bgColor = '#e6f6f2';\r\n\r\n    // Extract model name for cleaner display\r\n    if (modelName.includes('GPT-4')) {\r\n      displayName = 'GPT-4';\r\n    } else if (modelName.includes('GPT-3.5')) {\r\n      displayName = 'GPT-3.5';\r\n    } else if (modelName.includes('4o mini')) {\r\n      displayName = 'GPT-4o mini';\r\n    } else if (modelName.includes('4o')) {\r\n      displayName = 'GPT-4o';\r\n    } else if (modelName.includes('o1-mini')) {\r\n      displayName = 'o1 mini';\r\n    }\r\n  }\r\n  // Gemini models\r\n  else if (modelName?.includes('Gemini')) {\r\n    icon = <PsychologyIcon style={{ fontSize: '16px' }} />;\r\n    color = '#8e44ad'; // Gemini purple\r\n    bgColor = '#f5f0f7';\r\n\r\n    // Extract model name for cleaner display\r\n    displayName = modelName.includes('Gemini 2.0') ? 'GEMINI 2.0' :\r\n      modelName.includes('1.5') ? 'GEMINI 1.5' : modelName;\r\n  }\r\n  // Claude models\r\n  else if (modelName?.includes('Claude')) {\r\n    icon = <PsychologyIcon style={{ fontSize: '16px' }} />;\r\n    color = '#5436DA'; // Anthropic purple\r\n    bgColor = '#f7f5ff';\r\n\r\n    // Extract model name for cleaner display\r\n    if (modelName.includes('3.5 Sonnet')) {\r\n      displayName = 'CLAUDE 3.5';\r\n    } else if (modelName.includes('3.7 Sonnet')) {\r\n      displayName = 'CLAUDE 3.7';\r\n    } else if (modelName.includes('3 Opus')) {\r\n      displayName = 'CLAUDE OPUS';\r\n    } else if (modelName.includes('3 Sonnet')) {\r\n      displayName = 'CLAUDE SONNET';\r\n    } else if (modelName.includes('3 Haiku')) {\r\n      displayName = 'CLAUDE HAIKU';\r\n    } else {\r\n      displayName = 'CLAUDE';\r\n    }\r\n  }\r\n  else if (modelName.includes('Llama') || modelName.includes('Meta')) {\r\n    icon = <SmartToyIcon style={{ fontSize: '16px' }} />;\r\n    color = '#1877f2'; // Meta blue\r\n    bgColor = '#f0f4fa';\r\n\r\n    // Simplified display name for Llama models\r\n    if (modelName.includes('3.2-3B')) {\r\n      displayName = 'LLAMA 3.2';\r\n    } else if (modelName.includes('3.1')) {\r\n      displayName = 'LLAMA 3.1';\r\n    } else {\r\n      // Extract version if found\r\n      const versionMatch = modelName.match(/Llama-(\\d+\\.\\d+)/i);\r\n      displayName = versionMatch ? `LLAMA ${versionMatch[1]}` : 'LLAMA';\r\n    }\r\n  } else if (modelName.includes('DeepSeek')) {\r\n    icon = <SchoolIcon style={{ fontSize: '16px' }} />;\r\n    color = '#e67e22'; // DeepSeek orange\r\n    bgColor = '#fdf4ec';\r\n\r\n    // Extract model name for cleaner display\r\n    if (modelName.includes('R1')) {\r\n      displayName = 'DEEPSEEK R1';\r\n    } else {\r\n      displayName = modelName.includes('67b') ? 'DEEPSEEK-LLM' : 'DEEPSEEK';\r\n    }\r\n  }\r\n\r\n  return { icon, color, bgColor, displayName };\r\n};\r\n\r\n// Add a styled component for code blocks\r\nconst CodeBlock = styled(Box)(({ theme }) => ({\r\n  position: 'relative',\r\n  '& pre': {\r\n    backgroundColor: '#1e1e1e', // Dark background like ChatGPT\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    color: '#f8f8f2',\r\n    overflowX: 'auto',\r\n    fontFamily: 'monospace',\r\n    fontSize: '0.9rem',\r\n    margin: theme.spacing(1, 0),\r\n    border: '1px solid rgba(255, 255, 255, 0.1)',\r\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.15)',\r\n  },\r\n  '& code': {\r\n    fontFamily: '\"Roboto Mono\", monospace',\r\n    fontSize: '0.9rem',\r\n    backgroundColor: '#1e1e1e', // Dark background like ChatGPT\r\n    color: '#ffffff',\r\n  },\r\n  '& code.hljs': {\r\n    backgroundColor: 'transparent !important',\r\n    color: '#f8f8f2',\r\n    padding: 0,\r\n  },\r\n  // Base text and punctuation\r\n  '& .hljs-punctuation, & .hljs-tag': {\r\n    color: '#f8f8f2',\r\n  },\r\n  // Keywords, built-ins, and tags\r\n  '& .hljs-keyword, & .hljs-selector-tag, & .hljs-literal, & .hljs-doctag, & .hljs-built_in': {\r\n    color: '#ff79c6',\r\n  },\r\n  // Strings and regex\r\n  '& .hljs-string, & .hljs-regexp, & .hljs-addition, & .hljs-attribute, & .hljs-meta .hljs-string': {\r\n    color: '#a6e22e',\r\n  },\r\n  // Numbers and booleans\r\n  '& .hljs-number, & .hljs-subst, & .hljs-variable, & .hljs-template-variable, & .hljs-constant, & .hljs-builtin-name': {\r\n    color: '#bd93f9',\r\n  },\r\n  // Function and class names\r\n  '& .hljs-title, & .hljs-section, & .hljs-name, & .hljs-selector-id, & .hljs-selector-class, & .hljs-function, & .hljs-title.function_': {\r\n    color: '#e6c07b',\r\n  },\r\n  // File paths and file names - highlight them with the warm gold/amber color\r\n  '& .filename, & .filepath, & .file-name, & .file-path, & .path': {\r\n    color: '#e6c07b',\r\n    fontWeight: 'bold',\r\n  },\r\n  // Comments, metadata\r\n  '& .hljs-comment, & .hljs-quote, & .hljs-deletion, & .hljs-meta': {\r\n    color: '#6272a4',\r\n  },\r\n  // Language specific - JavaScript\r\n  '& .language-javascript .hljs-keyword, & .language-js .hljs-keyword': {\r\n    color: '#ff79c6',\r\n  },\r\n  // Language specific - TypeScript\r\n  '& .language-typescript .hljs-title.function_, & .language-ts .hljs-title.function_': {\r\n    color: '#50fa7b',\r\n  },\r\n  // Language specific - CSS/SCSS\r\n  '& .language-css .hljs-attribute, & .language-scss .hljs-attribute': {\r\n    color: '#50fa7b',\r\n  },\r\n  // Language specific - HTML\r\n  '& .language-html .hljs-attr': {\r\n    color: '#50fa7b',\r\n  },\r\n  // Language specific - Python\r\n  '& .language-python .hljs-decorator': {\r\n    color: '#f1fa8c',\r\n  },\r\n  // Special formatting for file extensions like .py, .js, etc.\r\n  '& .file-extension': {\r\n    color: '#e6c07b',\r\n    fontWeight: 'bold',\r\n  },\r\n  // Special formatting\r\n  '& .hljs-strong': {\r\n    fontWeight: 'bold',\r\n    color: 'inherit',\r\n  },\r\n  '& .hljs-emphasis': {\r\n    fontStyle: 'italic',\r\n    color: 'inherit',\r\n  },\r\n  // Line numbers if present\r\n  '& .hljs-ln-numbers': {\r\n    WebkitUserSelect: 'none',\r\n    userSelect: 'none',\r\n    textAlign: 'center',\r\n    color: '#6272a4',\r\n    borderRight: '1px solid #6272a4',\r\n    verticalAlign: 'top',\r\n    paddingRight: '8px',\r\n  },\r\n  // Copy button\r\n  '& .copy-button': {\r\n    position: 'absolute',\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n    color: '#f8f8f2',\r\n    width: 32,\r\n    height: 32,\r\n    minWidth: 'unset',\r\n    borderRadius: '4px',\r\n    visibility: 'hidden',\r\n    opacity: 0,\r\n    transition: 'all 0.2s ease-in-out',\r\n    zIndex: 10,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n    },\r\n    '& .MuiSvgIcon-root': {\r\n      fontSize: '0.85rem',\r\n    },\r\n  },\r\n  '&:hover .copy-button': {\r\n    visibility: 'visible',\r\n    opacity: 1,\r\n  },\r\n  // Tooltip for copy feedback\r\n  '& .copy-feedback': {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: `-${theme.spacing(3)}`,\r\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n    color: '#1e1e1e',\r\n    padding: theme.spacing(0.5, 1),\r\n    borderRadius: theme.spacing(0.5),\r\n    fontSize: '0.7rem',\r\n    fontWeight: 'bold',\r\n    opacity: 0,\r\n    transform: 'translateY(10px)',\r\n    transition: 'all 0.2s ease-in-out',\r\n    pointerEvents: 'none',\r\n    '&.visible': {\r\n      opacity: 1,\r\n      transform: 'translateY(0)',\r\n    }\r\n  },\r\n  // Code block language indicator\r\n  '& .code-language': {\r\n    position: 'absolute',\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(5),\r\n    padding: theme.spacing(0.3, 0.8),\r\n    borderRadius: theme.spacing(0.5),\r\n    fontSize: '0.7rem',\r\n    backgroundColor: 'rgba(230, 192, 123, 0.15)',\r\n    color: '#e6c07b',\r\n    textTransform: 'uppercase',\r\n    fontWeight: 'bold',\r\n    letterSpacing: '0.5px',\r\n    border: '1px solid rgba(230, 192, 123, 0.3)',\r\n  }\r\n}));\r\n\r\nconst InlineCode = styled('code')(({ theme }) => ({\r\n  backgroundColor: 'rgba(45, 45, 45, 0.5)', // More subtle background\r\n  color: '#ffffff',\r\n  padding: theme.spacing(0.3, 0.6),\r\n  borderRadius: '3px',\r\n  fontFamily: '\"Roboto Mono\", monospace',\r\n  fontSize: '0.9em',\r\n  border: '1px solid rgba(255, 255, 255, 0.1)',\r\n  marginLeft: '2px',\r\n  marginRight: '2px',\r\n  wordBreak: 'break-word',\r\n  boxShadow: 'none', // Remove box shadow\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  position: 'relative',\r\n  top: '-1px',\r\n}));\r\n\r\nconst ChatContent = forwardRef((props, ref) => {\r\n  // const [loading, setLoading] = useState(false);\r\n  const { t } = useTranslation();\r\n  const { user } = useAuth();\r\n  const { dragToggle, handleFileChange, handleDrop } = useSidebar();\r\n  const dispatch = useDispatch();\r\n  const messages = useSelector((state) => state.chat.messages);\r\n  const [displayMessages, setDisplayMessages] = useState([]);\r\n  const messagesEndRef = useRef(null); // Ref to the chat container\r\n  const fileUploadRef = useRef(null);\r\n  const selectedChatLog = useSelector((state) => state.chat.selectedChatLog);\r\n  const activeChatId = useSelector((state) => state.chat.activeChatId);\r\n  const selectedModel = useSelector((state) => state.setting.model);\r\n  const [userScrolled, setUserScrolled] = useState(false);\r\n  const [showScrollButton, setShowScrollButton] = useState(false);\r\n  const [lastScrollTop, setLastScrollTop] = useState(0);\r\n  const scrollTimerRef = useRef(null);\r\n  const [modalImage, setModalImage] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const isGenerating = useSelector((state) => state.chat.isGenerating);\r\n  const [userAtBottom, setUserAtBottom] = useState(true);\r\n  const [file, setFile] = useState(null);\r\n  const [copiedCode, setCopiedCode] = useState(null);\r\n  const chatContainerRef = useRef(null);\r\n  // Expose methods to parent via ref\r\n\r\n  useEffect(() => {\r\n    const chatContainer = chatContainerRef.current;\r\n    if (chatContainer) {\r\n      const handleScroll = (e) => {\r\n        if (e && e.target) {\r\n          const { scrollTop, scrollHeight, clientHeight } = e.target;\r\n          const isScrolledToBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 10;\r\n          setUserAtBottom(isUserAtBottom());\r\n          // Update userScrolled based on whether we're at the bottom\r\n          if (!isScrolledToBottom) {\r\n            // User has scrolled up - set userScrolled to true regardless of generation state\r\n            setUserScrolled(true);\r\n\r\n            // When scrolling down (but not at bottom yet), show the button\r\n            if (scrollTop > lastScrollTop && scrollTop < scrollHeight - clientHeight - 20) {\r\n              setShowScrollButton(true);\r\n\r\n              // Clear any existing timer\r\n              if (scrollTimerRef.current) {\r\n                clearTimeout(scrollTimerRef.current);\r\n              }\r\n\r\n              // Set a timer to hide the button if user stops scrolling\r\n              scrollTimerRef.current = setTimeout(() => {\r\n                setShowScrollButton(false);\r\n              }, 2000);\r\n            }\r\n          } else {\r\n            // At the bottom - reset states\r\n            setUserScrolled(false);\r\n            setShowScrollButton(false);\r\n\r\n            if (scrollTimerRef.current) {\r\n              clearTimeout(scrollTimerRef.current);\r\n            }\r\n          }\r\n\r\n          // Save current scroll position\r\n          setLastScrollTop(scrollTop);\r\n        }\r\n      };\r\n\r\n      chatContainer.addEventListener('scroll', handleScroll);\r\n\r\n      // Clean up the event listener when the component unmounts\r\n      return () => {\r\n        chatContainer.removeEventListener('scroll', handleScroll);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    handleScroll: (e) => {\r\n      console.log(\"using scroll\");\r\n      if (e && e.target) {\r\n        const { scrollTop, scrollHeight, clientHeight } = e.target;\r\n        const isScrolledToBottom = Math.abs(scrollHeight - scrollTop - clientHeight) < 10;\r\n\r\n        // Update userScrolled based on whether we're at the bottom\r\n        if (!isScrolledToBottom) {\r\n          // User has scrolled up - set userScrolled to true regardless of generation state\r\n          setUserScrolled(true);\r\n\r\n          // When scrolling down (but not at bottom yet), show the button\r\n          if (scrollTop > lastScrollTop && scrollTop < scrollHeight - clientHeight - 20) {\r\n            setShowScrollButton(true);\r\n\r\n            // Clear any existing timer\r\n            if (scrollTimerRef.current) {\r\n              clearTimeout(scrollTimerRef.current);\r\n            }\r\n\r\n            // Set a timer to hide the button if user stops scrolling\r\n            scrollTimerRef.current = setTimeout(() => {\r\n              setShowScrollButton(false);\r\n            }, 2000);\r\n          }\r\n        } else {\r\n          // At the bottom - reset states\r\n          setUserScrolled(false);\r\n          setShowScrollButton(false);\r\n\r\n          if (scrollTimerRef.current) {\r\n            clearTimeout(scrollTimerRef.current);\r\n          }\r\n        }\r\n\r\n        // Save current scroll position\r\n        setLastScrollTop(scrollTop);\r\n      }\r\n    }\r\n  }));\r\n\r\n  // Clean up timer when component unmounts\r\n  useEffect(() => {\r\n    return () => {\r\n      if (scrollTimerRef.current) {\r\n        clearTimeout(scrollTimerRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getUserChat(user.id))\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    // Simulate adding new content and auto-scrolling\r\n    // const interval = setInterval(() => {\r\n    //   if (!userScrolled) {\r\n    //     scrollToBottom();\r\n    //   }\r\n    // }, 3000); // Simulate adding new content every 3 seconds\r\n\r\n    // return () => clearInterval(interval);\r\n  }, [userScrolled]);\r\n\r\n  const isUserAtBottom = () => {\r\n    const container = chatContainerRef.current;\r\n    if (!container) return false;\r\n    const threshold = 50; // px from bottom\r\n    return container.scrollHeight - container.scrollTop - container.clientHeight < threshold;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userAtBottom) {\r\n      scrollToBottom();\r\n    }\r\n  }, [displayMessages, selectedChatLog])\r\n\r\n  useEffect(() => {\r\n    fileUploadRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n  }, [dragToggle])\r\n\r\n  useEffect(() => {\r\n    if (selectedChatLog) {\r\n      setDisplayMessages(selectedChatLog);\r\n\r\n      // Auto-scroll to bottom only when a new user message is added\r\n      // Removed the auto-scroll during generation\r\n      const isNewUserMessage = selectedChatLog.length > 0 &&\r\n        displayMessages.length < selectedChatLog.length &&\r\n        selectedChatLog[selectedChatLog.length - 1]?.role === 'user';\r\n\r\n      if (isNewUserMessage) {\r\n        // Use a small timeout to ensure the DOM has updated with the new content\r\n        setTimeout(() => {\r\n          scrollToBottom();\r\n        }, 50);\r\n      }\r\n    }\r\n  }, [activeChatId, selectedChatLog, isGenerating]);\r\n\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      // Try multiple approaches to ensure scrolling works\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n\r\n      // Also try direct DOM manipulation as a fallback\r\n      const chatContainer = document.querySelector('.MuiBox-root');\r\n      if (chatContainer) {\r\n        chatContainer.scrollTop = chatContainer.scrollHeight;\r\n      }\r\n    }\r\n    setUserScrolled(false);\r\n    setShowScrollButton(false);\r\n  };\r\n\r\n  // Copy code function\r\n  const copyToClipboard = (code) => {\r\n    navigator.clipboard.writeText(code).then(() => {\r\n      setCopiedCode(code);\r\n      // Reset copied status after 2 seconds\r\n      setTimeout(() => {\r\n        setCopiedCode(null);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  // Custom renderers for ReactMarkdown\r\n  const renderers = {\r\n    code({ node, inline, className, children, ...props }) {\r\n      const match = /language-(\\w+)/.exec(className || '');\r\n      const code = String(children).replace(/\\n$/, '');\r\n\r\n      if (inline) {\r\n        return <InlineCode {...props}>{children}</InlineCode>;\r\n      }\r\n\r\n      const language = match ? match[1] : '';\r\n      const displayLanguage = language ? language.toUpperCase() : '';\r\n\r\n      // Highlight potential filenames in code blocks\r\n      // This will look for pattern like: filename.py, file.js, etc.\r\n      const highlightedCode = code.replace(\r\n        /([a-zA-Z0-9_-]+\\.(py|js|ts|html|css|jsx|tsx|json|md|yml|yaml|xml|csv|txt))/g,\r\n        '<span class=\"filename\">$1</span>'\r\n      );\r\n\r\n      return (\r\n        <CodeBlock>\r\n          {displayLanguage && (\r\n            <Box className=\"code-language\">{displayLanguage}</Box>\r\n          )}\r\n          <Button\r\n            className=\"copy-button\"\r\n            onClick={() => copyToClipboard(code)}\r\n            aria-label=\"Copy code\"\r\n            size=\"small\"\r\n          >\r\n            {copiedCode === code ? (\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', height: '100%' }}>\r\n                <Typography variant=\"caption\" sx={{ fontSize: '0.6rem' }}>Copied</Typography>\r\n              </Box>\r\n            ) : (\r\n              <ContentCopyIcon />\r\n            )}\r\n          </Button>\r\n          <pre style={{ width: \"fit-content\" }}>\r\n            <code className={className} {...props}>\r\n              {children}\r\n            </code>\r\n          </pre>\r\n        </CodeBlock>\r\n      );\r\n    },\r\n    // Add special styling for any filenames like calculator.py\r\n    p(props) {\r\n      const children = React.Children.toArray(props.children);\r\n\r\n      // Process the children to find text that looks like filenames\r\n      const processedChildren = children.map(child => {\r\n        if (typeof child === 'string') {\r\n          // Look for filename patterns like calculator.py or python calculator.py\r\n          const parts = child.split(/\\b((?:python\\s+)?[a-zA-Z0-9_-]+\\.[a-zA-Z0-9]+)\\b/g);\r\n\r\n          if (parts.length > 1) {\r\n            return parts.map((part, i) => {\r\n              // Check if this part matches a filename pattern\r\n              if (/^(?:python\\s+)?[a-zA-Z0-9_-]+\\.[a-zA-Z0-9]+$/.test(part)) {\r\n                // It's a filename, style it with no background color\r\n                return (\r\n                  <Box\r\n                    key={i}\r\n                    component=\"span\"\r\n                    sx={{\r\n                      display: 'inline-block',\r\n                      bgcolor: 'transparent',\r\n                      color: '#e6c07b',\r\n                      padding: '2px 4px',\r\n                      borderRadius: '2px',\r\n                      fontFamily: '\"Roboto Mono\", monospace',\r\n                      fontSize: '0.9em',\r\n                      fontWeight: 'bold',\r\n                      mx: 0.5,\r\n                      border: '1px solid rgba(230, 192, 123, 0.3)',\r\n                    }}\r\n                  >\r\n                    {part}\r\n                  </Box>\r\n                );\r\n              }\r\n\r\n              // Regular text\r\n              return part;\r\n            });\r\n          }\r\n        }\r\n\r\n        // Not a string or no filename found, return unchanged\r\n        return child;\r\n      });\r\n\r\n      return <Typography {...props}>{processedChildren}</Typography>;\r\n    }\r\n  };\r\n\r\n  // Handle opening image in modal\r\n  const handleImageClick = (imageUrl, revisedPrompt) => {\r\n    setModalImage({ url: imageUrl, revisedPrompt });\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Handle closing the modal\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // Handle downloading the image\r\n  const handleDownloadImage = () => {\r\n    if (!modalImage?.url) return;\r\n\r\n    // For data URLs (like those from Imagen which start with data:image/), \r\n    // we can download directly without going through the backend\r\n    if (modalImage.url.startsWith('data:image/')) {\r\n      const link = document.createElement('a');\r\n      link.href = modalImage.url;\r\n      link.download = 'generated-image.png';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n      return;\r\n    }\r\n\r\n    // For URLs that need to go through the backend (like DALL-E)\r\n    // Create the download URL that goes through our backend\r\n    const downloadUrl = `${process.env.REACT_APP_BACKEND_URL}/api/download_image/?url=${encodeURIComponent(modalImage.url)}`;\r\n\r\n    try {\r\n      // Get CSRF token from cookies\r\n      const csrfToken = Cookies.get('csrftoken');\r\n\r\n      // Create a link with CSRF token in header\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('GET', downloadUrl, true);\r\n\r\n      // Add CSRF token if available\r\n      if (csrfToken) {\r\n        xhr.setRequestHeader('X-CSRFToken', csrfToken);\r\n      }\r\n\r\n      xhr.responseType = 'blob';\r\n\r\n      xhr.onload = function () {\r\n        if (this.status === 200) {\r\n          const blob = new Blob([this.response], { type: 'image/png' });\r\n          const url = window.URL.createObjectURL(blob);\r\n          const a = document.createElement('a');\r\n          a.style.display = 'none';\r\n          a.href = url;\r\n          a.download = 'generated-image.png';\r\n          document.body.appendChild(a);\r\n          a.click();\r\n          window.URL.revokeObjectURL(url);\r\n          document.body.removeChild(a);\r\n        } else {\r\n          // Fallback to the simple method if XHR fails\r\n          window.open(downloadUrl, '_blank');\r\n        }\r\n      };\r\n\r\n      xhr.onerror = function () {\r\n        // Fallback to the simple method if XHR fails\r\n        window.open(downloadUrl, '_blank');\r\n      };\r\n\r\n      xhr.send();\r\n    } catch (error) {\r\n      console.error(\"Error downloading image:\", error);\r\n      // Fallback to the simple window.open method if any errors occur\r\n      window.open(downloadUrl, '_blank');\r\n    }\r\n  };\r\n\r\n  // Add styled component for the modal\r\n  const StyledImageModal = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper': {\r\n      backgroundColor: 'rgba(255, 255, 255, 0.95)',\r\n      backgroundImage: 'linear-gradient(to bottom, rgba(255, 255, 255, 0.97), rgba(245, 245, 245, 0.94))',\r\n      borderRadius: theme.spacing(2),\r\n      overflow: 'hidden',\r\n      boxShadow: '0 10px 40px rgba(0, 0, 0, 0.15)',\r\n      border: '1px solid rgba(0, 0, 0, 0.08)',\r\n      maxWidth: '90vw',\r\n      maxHeight: '90vh',\r\n    },\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    }\r\n  }));\r\n\r\n  const ImageModalActions = styled(Box)(({ theme }) => ({\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    gap: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: '100%',\r\n    '& .MuiButton-root': {\r\n      borderRadius: theme.spacing(1),\r\n      padding: theme.spacing(0.75, 2),\r\n      minWidth: '120px',\r\n      transition: 'all 0.2s ease',\r\n      fontWeight: 500,\r\n    },\r\n    '& .download-btn': {\r\n      backgroundColor: '#265A9E',\r\n      '&:hover': {\r\n        backgroundColor: '#1e4c8a',\r\n        transform: 'translateY(-2px)',\r\n        boxShadow: '0 5px 10px rgba(30, 76, 138, 0.2)',\r\n      },\r\n    },\r\n    '& .close-btn': {\r\n      borderColor: '#ccc',\r\n      color: '#666',\r\n      '&:hover': {\r\n        borderColor: '#999',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.03)',\r\n      },\r\n    }\r\n  }));\r\n\r\n  const ImagePromptText = styled(Typography)(({ theme }) => ({\r\n    color: '#555',\r\n    fontSize: '0.9rem',\r\n    textAlign: 'center',\r\n    maxWidth: '90%',\r\n    marginTop: theme.spacing(1.5),\r\n    fontStyle: 'italic',\r\n    lineHeight: 1.5,\r\n    padding: theme.spacing(1, 2),\r\n    backgroundColor: 'rgba(0, 0, 0, 0.03)',\r\n    borderRadius: theme.spacing(1),\r\n    border: '1px solid rgba(0, 0, 0, 0.06)',\r\n  }));\r\n\r\n  // Add a styled component for user questions about images\r\n  const ImageQuestionBadge = styled(Box)(({ theme }) => ({\r\n    backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n    borderRadius: theme.spacing(1),\r\n    padding: theme.spacing(1, 1.5),\r\n    marginBottom: theme.spacing(1.5),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    gap: theme.spacing(1),\r\n    backdropFilter: 'blur(5px)',\r\n    border: '1px solid rgba(255, 255, 255, 0.2)',\r\n    color: 'white',\r\n    fontSize: '0.95rem',\r\n    fontWeight: 500,\r\n    boxShadow: '0 2px 8px rgba(0, 0, 0, 0.08)',\r\n    position: 'relative',\r\n    '&:before': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      bottom: -8,\r\n      left: 12,\r\n      width: 16,\r\n      height: 16,\r\n      backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n      transform: 'rotate(45deg)',\r\n      borderRight: '1px solid rgba(255, 255, 255, 0.2)',\r\n      borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n      zIndex: 0,\r\n    }\r\n  }));\r\n\r\n  // Prevent auto-scroll during message generation\r\n  useEffect(() => {\r\n    if (isGenerating && showScrollButton) {\r\n      setShowScrollButton(true);\r\n    }\r\n  }, [isGenerating]);\r\n\r\n  // Fetch CSRF token on component mount if it's not already set\r\n  useEffect(() => {\r\n    const fetchCSRFToken = async () => {\r\n      try {\r\n        // Check if CSRF token already exists\r\n        if (!Cookies.get('csrftoken')) {\r\n          console.log('No CSRF token found for chat, fetching a new one...');\r\n          const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8000';\r\n\r\n          const response = await fetch(`${backendUrl}/api/get_csrf_token/`, {\r\n            credentials: 'include'\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            const token = Cookies.get('csrftoken');\r\n            console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\r\n          } else {\r\n            console.warn('Failed to fetch CSRF token:', response.status);\r\n          }\r\n        } else {\r\n          console.log('CSRF token already exists for chat');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching CSRF token:', error);\r\n        // Continue without CSRF token - backend will handle exempt views\r\n      }\r\n    };\r\n\r\n    fetchCSRFToken();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n      }}\r\n      ref={chatContainerRef}\r\n    >\r\n      <Box sx={{ p: 2 }}>\r\n        <span ref={fileUploadRef} />\r\n\r\n        {/* Main chat content */}\r\n        <Box\r\n          sx={{\r\n            pt: '5px',\r\n            mb: {\r\n              xs: 3,\r\n              md: 5\r\n            }\r\n          }}\r\n        >\r\n          {!dragToggle ? (\r\n            <Box sx={{\r\n              mx: {\r\n                xs: '20px',\r\n                md: \"90px\"\r\n              },\r\n            }}>\r\n              <Typography variant=\"h4\" lineHeight={2} sx={{ fontWeight: 'bold', color: '#265A9E' }}>{t(\"someIdeas\")}</Typography>\r\n              {selectedModel?.id === 'dall-e-3' ? (\r\n                <Box sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  mt: 2,\r\n                  minHeight: '400px'\r\n                }}>\r\n                  <Box sx={{\r\n                    bgcolor: \"white\",\r\n                    color: '#667085',\r\n                    boxShadow: \"0px 0px 2px #6A7199\",\r\n                    padding: \"12px 16px\",\r\n                    borderRadius: \"10px\",\r\n                    marginBottom: \"8px\",\r\n                    maxWidth: \"fit-content\"\r\n                  }}>\r\n                    <Typography variant=\"body1\" sx={{ fontSize: '14px' }}>\r\n                      Cute baby panda sits surrounded by glowing fireflies 🐼 3D style\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      height: '20px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      marginY: '8px',\r\n                      position: 'relative',\r\n                      zIndex: 0\r\n                    }}\r\n                  >\r\n                    <svg width=\"12\" height=\"20\" viewBox=\"0 0 12 20\" fill=\"none\">\r\n                      <path\r\n                        d=\"M6 0V17M6 17L1 12M6 17L11 12\"\r\n                        stroke=\"#667085\"\r\n                        strokeWidth=\"1.5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      />\r\n                    </svg>\r\n                  </Box>\r\n                  <ChatImageWrapper>\r\n                    <CardActionArea\r\n                      onClick={() => handleImageClick(\"/baby-panda.jpeg\")}\r\n                      sx={{\r\n                        borderRadius: 2,\r\n                        overflow: 'hidden',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        component=\"img\"\r\n                        src=\"/baby-panda.jpeg\"\r\n                        alt=\"Baby Panda Example\"\r\n                        sx={{\r\n                          width: '200px',\r\n                          height: 'auto',\r\n                          display: 'block',\r\n                        }}\r\n                      />\r\n                    </CardActionArea>\r\n                  </ChatImageWrapper>\r\n                </Box>\r\n              ) : selectedModel?.id === 'gemini-2.0-flash-exp-image-generation' ? (\r\n                <Box sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  alignItems: 'center',\r\n                  mt: 2,\r\n                  minHeight: '400px'\r\n                }}>\r\n                  <Box sx={{\r\n                    bgcolor: \"white\",\r\n                    color: '#667085',\r\n                    boxShadow: \"0px 0px 2px #6A7199\",\r\n                    padding: \"12px 16px\",\r\n                    borderRadius: \"10px\",\r\n                    marginBottom: \"8px\",\r\n                    maxWidth: \"fit-content\"\r\n                  }}>\r\n                    <Typography variant=\"body1\" sx={{ fontSize: '14px' }}>\r\n                      Pixar style, person, happy in a hospital using technology\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      height: '20px',\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      marginY: '8px',\r\n                      position: 'relative',\r\n                      zIndex: 0\r\n                    }}\r\n                  >\r\n                    <svg width=\"12\" height=\"20\" viewBox=\"0 0 12 20\" fill=\"none\">\r\n                      <path\r\n                        d=\"M6 0V17M6 17L1 12M6 17L11 12\"\r\n                        stroke=\"#667085\"\r\n                        strokeWidth=\"1.5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                      />\r\n                    </svg>\r\n                  </Box>\r\n                  <ChatImageWrapper>\r\n                    <CardActionArea\r\n                      onClick={() => handleImageClick(\"/boy-in-hospital.jpeg\")}\r\n                      sx={{\r\n                        borderRadius: 2,\r\n                        overflow: 'hidden',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        component=\"img\"\r\n                        src=\"/boy-in-hospital.jpeg\"\r\n                        alt=\"Boy in Hospital Example\"\r\n                        sx={{\r\n                          width: '200px',\r\n                          height: 'auto',\r\n                          display: 'block',\r\n                        }}\r\n                      />\r\n                    </CardActionArea>\r\n                  </ChatImageWrapper>\r\n                </Box>\r\n              ) : (\r\n                <Box sx={{\r\n                  bgcolor: \"white\",\r\n                  color: '#667085',\r\n                  boxShadow: \"0px 0px 2px #6A7199\",\r\n                  padding: \"18px\",\r\n                  borderRadius: \"10px\"\r\n                }}>\r\n                  <Typography lineHeight={2}>{t(\"writePeom\")} &hearts;</Typography>\r\n                  <Typography lineHeight={2}>{t(\"writeAskingPromotion\")}</Typography>\r\n                  <Typography lineHeight={2}>{t(\"writeSong\")}&#9835;</Typography>\r\n                  <Typography lineHeight={2}>{t(\"writeCode\")}</Typography>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{\r\n              mx: {\r\n                xs: '20px',\r\n                md: \"90px\"\r\n              },\r\n              textAlign: 'center'\r\n            }}>\r\n              <Typography variant=\"h4\" lineHeight={2} sx={{ fontWeight: 'bold', color: '#265A9E' }}>{t(\"Drop your documents here and search through them.\")}</Typography>\r\n              <Typography lineHeight={2} sx={{ mb: 1, color: '#667085' }}>{t(\"Eg: Find all instances in the book where the character Tom was angry.\")}</Typography>\r\n              <Box\r\n                sx={{\r\n                  background: '#D8E1FF',\r\n                  padding: 2,\r\n                  borderRadius: 3,\r\n                  cursor: 'pointer'\r\n                }}\r\n                onClick={() => document.getElementById('file-upload').click()}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDrop={handleDrop}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    border: '2px dashed #667085',\r\n                    borderRadius: 2,\r\n                    padding: '20px',\r\n                    textAlign: 'center',\r\n                    margin: 'auto',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    backgroundColor: '#D8E1FF'\r\n                  }}\r\n                >\r\n                  <>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"file-upload\"\r\n                      style={{ display: 'none' }}\r\n                      onChange={handleFileChange}\r\n                      accept=\".pdf,.doc,.docx,.png\"\r\n                    />\r\n                    <svg width=\"69\" height=\"60\" viewBox=\"0 0 69 60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path d=\"M36.028 14.7458L36.1203 14.7733L36.1243 14.7688C36.5619 14.8481 36.9961 14.586 37.1247 14.1519C38.2963 10.2152 41.9874 7.46504 46.0998 7.46504C46.5867 7.46504 46.9816 7.07016 46.9816 6.5833C46.9816 6.09643 46.5867 5.70156 46.0998 5.70156C41.0457 5.70156 36.7985 9.06665 35.4348 13.6493C35.2956 14.1162 35.5615 14.6067 36.028 14.7458Z\" fill=\"#003DF5\" stroke=\"#F9FFF9\" strokeWidth=\"0.3\" />\r\n                      <path d=\"M56.3438 42.4384H51.9534C51.5494 42.4384 51.2217 42.1107 51.2217 41.7067C51.2217 41.3027 51.5494 40.9749 51.9534 40.9749H56.3438C62.3956 40.9749 67.3197 36.0509 67.3197 29.999C67.3197 23.9471 62.3956 19.023 56.3438 19.023H56.2382C56.026 19.023 55.8242 18.9311 55.6852 18.7706C55.5462 18.6101 55.4834 18.3974 55.5138 18.1873C55.5791 17.7315 55.612 17.2737 55.612 16.8279C55.612 11.5829 51.3444 7.31531 46.0995 7.31531C44.059 7.31531 42.1131 7.95296 40.4719 9.15978C40.1112 9.42478 39.599 9.30718 39.3905 8.91047C34.7425 0.0596993 22.6023 -1.12887 16.3082 6.57053C13.6568 9.81417 12.615 14.0336 13.4498 18.146C13.5418 18.6002 13.1942 19.0236 12.7327 19.0236H12.4395C6.3876 19.0236 1.46353 23.9477 1.46353 29.9996C1.46353 36.0514 6.3876 40.9755 12.4395 40.9755H16.8298C17.2338 40.9755 17.5615 41.3032 17.5615 41.7072C17.5615 42.1113 17.2338 42.439 16.8298 42.439H12.4395C5.5805 42.439 0 36.8585 0 29.9995C0 23.3329 5.27155 17.8742 11.8651 17.5731C11.2457 13.3066 12.4301 9.00295 15.1751 5.64437C21.9138 -2.5996 34.828 -1.67556 40.2871 7.51707C42.0287 6.42522 44.0215 5.85244 46.0992 5.85244C52.4538 5.85244 57.4892 11.261 57.0486 17.58C63.5813 17.9463 68.7829 23.3763 68.7829 29.999C68.7829 36.8585 63.2024 42.4384 56.3434 42.4384L56.3438 42.4384Z\" fill=\"#003DF5\" />\r\n                      <path d=\"M15.85 41.2935C15.85 51.4634 24.1237 59.737 34.2935 59.737C44.4634 59.737 52.737 51.4633 52.737 41.2935C52.737 31.1235 44.4634 22.85 34.2935 22.85C24.1235 22.85 15.85 31.1237 15.85 41.2935ZM17.6138 41.2935C17.6138 32.0966 25.0964 24.6138 34.2935 24.6138C43.4904 24.6138 50.9732 32.0964 50.9732 41.2935C50.9732 50.4904 43.4904 57.9732 34.2935 57.9732C25.0966 57.9732 17.6138 50.4905 17.6138 41.2935Z\" fill=\"#003DF5\" stroke=\"#F9FFF9\" strokeWidth=\"0.3\" />\r\n                      <path d=\"M33.9425 48.6577C33.9425 49.0363 34.2496 49.3434 34.6282 49.3434C35.0068 49.3434 35.314 49.0367 35.314 48.6577V34.7291C35.314 34.3504 35.0069 34.0434 34.6282 34.0434C34.2496 34.0434 33.9425 34.3504 33.9425 34.7291V48.6577Z\" fill=\"#003DF5\" stroke=\"#483EA8\" strokeWidth=\"0.3\" />\r\n                      <path d=\"M34.6281 35.6999L30.8274 39.5006L34.6281 35.6999ZM34.6281 35.6999L38.4289 39.5007C38.5626 39.6344 38.7386 39.7015 38.9137 39.7015L34.6281 35.6999ZM29.8576 39.5007C30.1254 39.7685 30.5597 39.7686 30.8273 39.5007L38.9138 39.7015C39.0886 39.7015 39.2647 39.635 39.3987 39.5006C39.6665 39.2327 39.6665 38.7988 39.3986 38.5309L35.113 34.2452C34.8452 33.9775 34.4108 33.9773 34.1432 34.2452C34.1432 34.2453 34.1431 34.2453 34.1431 34.2453L29.8576 38.5309C29.5897 38.7988 29.5897 39.2328 29.8576 39.5007Z\" fill=\"#003DF5\" stroke=\"#483EA8\" strokeWidth=\"0.3\" />\r\n                    </svg>\r\n\r\n                    <Typography variant=\"body1\" mt={3} sx={{ color: '#667085' }} fontSize={20} >\r\n                      {t(\"Drag & drop files or Browse\")}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ color: '#66708580' }}>{t(\"Supported formats: PDF, Word, and PNG\")}</Typography>\r\n                  </>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Add visual separator when there are no messages */}\r\n        {displayMessages.length === 0 && !dragToggle && (\r\n          <Box\r\n            sx={{\r\n              width: '100%',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              mb: 5\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                width: { xs: '60%', md: '40%' },\r\n                height: '1px',\r\n                backgroundColor: 'rgba(102, 112, 133, 0.15)',\r\n                borderRadius: '1px'\r\n              }}\r\n            />\r\n          </Box>\r\n        )}\r\n\r\n        {/* Chat messages */}\r\n        {displayMessages.map((message, index) => (\r\n          <MessageContainer\r\n            key={index}\r\n            role={message.role}\r\n          >\r\n            <MessageContent role={message.role}>\r\n              {message.role === 'assistant' && message.model && (\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    mb: 1,\r\n                    gap: 1,\r\n                    px: 1,\r\n                    py: 0.5,\r\n                    backgroundColor: 'rgba(248, 249, 252, 0.9)',\r\n                    borderRadius: 1,\r\n                    border: '1px solid rgba(200, 200, 200, 0.2)',\r\n                    alignSelf: 'flex-start',\r\n                    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.03)'\r\n                  }}\r\n                >\r\n                  {(() => {\r\n                    const { icon, color, bgColor, displayName } = getModelDetails(message.model);\r\n                    return (\r\n                      <>\r\n                        <Avatar\r\n                          sx={{\r\n                            width: 20,\r\n                            height: 20,\r\n                            bgcolor: bgColor,\r\n                            border: `1px solid ${color}50`\r\n                          }}\r\n                        >\r\n                          {React.cloneElement(icon, { style: { ...icon.props.style, color, fontSize: '12px' } })}\r\n                        </Avatar>\r\n                        <Typography\r\n                          sx={{\r\n                            color: '#666',\r\n                            fontWeight: 600,\r\n                            fontSize: '0.75rem',\r\n                            textTransform: 'uppercase',\r\n                            letterSpacing: '0.5px'\r\n                          }}\r\n                        >\r\n                          {displayName}\r\n                        </Typography>\r\n                      </>\r\n                    );\r\n                  })()}\r\n                </Box>\r\n              )}\r\n\r\n              {message.role === 'assistant' ? (\r\n                <CardWrapperSecondary>\r\n                  {message.type === 'image_generation' ? (\r\n                    <ChatAssistantImageMessage>\r\n                      <Typography variant=\"body1\" className=\"message-text\">\r\n                        {message.content}\r\n                      </Typography>\r\n                      {message.images ? (\r\n                        <Box className=\"image-grid\">\r\n                          {message.images.map((image, imgIndex) => (\r\n                            <ChatImageWrapper key={imgIndex}>\r\n                              <CardActionArea\r\n                                onClick={() => handleImageClick(image.url)}\r\n                                sx={{\r\n                                  borderRadius: 2,\r\n                                  overflow: 'hidden',\r\n                                }}\r\n                              >\r\n                                <Box\r\n                                  component=\"img\"\r\n                                  src={image.url}\r\n                                  alt={`Generated image ${imgIndex + 1}`}\r\n                                  sx={{\r\n                                    width: '100%',\r\n                                    height: 'auto',\r\n                                  }}\r\n                                />\r\n                              </CardActionArea>\r\n                            </ChatImageWrapper>\r\n                          ))}\r\n                        </Box>\r\n                      ) : (\r\n                        <Typography color=\"error\">Image data not available</Typography>\r\n                      )}\r\n                    </ChatAssistantImageMessage>\r\n                  ) : (\r\n                    <ReactMarkdown rehypePlugins={[rehypeHighlight]} components={renderers}>{message.content}</ReactMarkdown>\r\n                  )}\r\n                </CardWrapperSecondary>\r\n              ) : (\r\n                <CardWrapperPrimary>\r\n                  {message.file && (\r\n                    <Box sx={{\r\n                      position: 'relative',\r\n                      p: '7px',\r\n                      border: '1px solid rgba(255, 255, 255, 0.3)',\r\n                      minWidth: 250,\r\n                      borderRadius: 1,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      gap: 1,\r\n                      color: 'white',\r\n                      mx: 1,\r\n                      mb: 1,\r\n                      backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n                    }}>\r\n                      <Box sx={{ width: 30, height: 30 }}>\r\n                        <svg width=\"30\" height=\"30\" viewBox=\"0 0 30 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M17.8033 10.4665L9.94233 18.0854C8.75873 19.2326 8.75873 21.0935 9.94233 22.2407V22.2407C11.1259 23.3878 13.046 23.3878 14.2296 22.2407L24.5925 12.1969C26.7634 10.0929 26.7634 6.68204 24.5925 4.57802V4.57802C22.4216 2.47399 18.9024 2.47399 16.7315 4.57802L6.36862 14.6218C3.21046 17.6827 3.21046 22.6434 6.36862 25.7043V25.7043C9.52678 28.7652 14.6452 28.7652 17.8033 25.7043L24.0924 19.6089\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                        </svg>\r\n                      </Box>\r\n                      <span style={{ overflow: 'hidden', textOverflow: \"ellipsis\", whiteSpace: \"nowrap\" }}>{message.file}</span>\r\n                    </Box>\r\n                  )}\r\n                  <ChatUserMessage>\r\n                    {message.base64Encoded && (\r\n                      <>\r\n                        {/* Add question badge for image questions */}\r\n                        {message.content &&\r\n                          <ImageQuestionBadge>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                width: 22,\r\n                                height: 22,\r\n                                borderRadius: '50%',\r\n                                backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n                                flexShrink: 0\r\n                              }}\r\n                            >\r\n                              <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M12 17H12.01\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                <path d=\"M9.09 9.00002C9.3251 8.33169 9.78915 7.76813 10.4 7.40915C11.0108 7.05018 11.7289 6.91896 12.4272 7.03873C13.1255 7.15851 13.7588 7.52154 14.2151 8.06353C14.6713 8.60553 14.9211 9.29152 14.92 10C14.92 12 11.92 13 11.92 13\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                              </svg>\r\n                            </Box>\r\n                            <Typography component=\"span\" sx={{ fontSize: '0.9rem', wordBreak: 'break-word' }}>\r\n                              {typeof message.content === 'string' ? message.content :\r\n                                Array.isArray(message.content) && message.content[0]?.text ?\r\n                                  message.content[0].text : 'About this image'}\r\n                            </Typography>\r\n                          </ImageQuestionBadge>\r\n                        }\r\n                        <ChatImageWrapper sx={{ mb: 2, border: '1px solid rgba(255, 255, 255, 0.2)', boxShadow: '0 4px 12px rgba(0, 0, 0, 0.12)', maxWidth: 300 }}>\r\n                          <CardActionArea\r\n                            onClick={() => handleImageClick(message.base64Encoded)}\r\n                            sx={{\r\n                              borderRadius: 2,\r\n                              overflow: 'hidden',\r\n                            }}\r\n                          >\r\n                            <Box\r\n                              component=\"img\"\r\n                              sx={{\r\n                                width: '100%',\r\n                                height: 'auto',\r\n                                display: 'block',\r\n                              }}\r\n                              src={message.base64Encoded}\r\n                              alt=\"User uploaded image\"\r\n                            />\r\n                          </CardActionArea>\r\n                        </ChatImageWrapper>\r\n                      </>\r\n                    )}\r\n                    <Box className=\"message-text\">\r\n                      {Array.isArray(message.content) ? (\r\n                        message.content[1]?.image_url?.url ? (\r\n                          <>\r\n                            <ImageQuestionBadge>\r\n                              <Box\r\n                                sx={{\r\n                                  display: 'flex',\r\n                                  alignItems: 'center',\r\n                                  justifyContent: 'center',\r\n                                  width: 22,\r\n                                  height: 22,\r\n                                  borderRadius: '50%',\r\n                                  backgroundColor: 'rgba(255, 255, 255, 0.2)',\r\n                                  flexShrink: 0\r\n                                }}\r\n                              >\r\n                                <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                  <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                  <path d=\"M12 17H12.01\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                  <path d=\"M9.09 9.00002C9.3251 8.33169 9.78915 7.76813 10.4 7.40915C11.0108 7.05018 11.7289 6.91896 12.4272 7.03873C13.1255 7.15851 13.7588 7.52154 14.2151 8.06353C14.6713 8.60553 14.9211 9.29152 14.92 10C14.92 12 11.92 13 11.92 13\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                                </svg>\r\n                              </Box>\r\n                              <Typography component=\"span\" sx={{ fontSize: '0.9rem', wordBreak: 'break-word' }}>\r\n                                {message.content[0]?.text || 'About this image'}\r\n                              </Typography>\r\n                            </ImageQuestionBadge>\r\n                            <ChatImageWrapper>\r\n                              <CardActionArea\r\n                                onClick={() => handleImageClick(message.content[1].image_url.url)}\r\n                                sx={{\r\n                                  borderRadius: 2,\r\n                                  overflow: 'hidden',\r\n                                }}\r\n                              >\r\n                                <Box\r\n                                  component=\"img\"\r\n                                  sx={{\r\n                                    width: '100%',\r\n                                    height: 'auto',\r\n                                  }}\r\n                                  src={message.content[1].image_url.url}\r\n                                  alt=\"User uploaded image\"\r\n                                />\r\n                              </CardActionArea>\r\n                            </ChatImageWrapper>\r\n                          </>\r\n                        ) : (\r\n                          <ReactMarkdown rehypePlugins={[rehypeHighlight]} components={renderers}>\r\n                            {typeof message.content === 'string' ? message.content : 'Image message'}\r\n                          </ReactMarkdown>\r\n                        )\r\n                      ) : (\r\n                        // Only show the message content when there's no image\r\n                        !message.base64Encoded && (\r\n                          <ReactMarkdown rehypePlugins={[rehypeHighlight]} components={renderers}>\r\n                            {message.content}\r\n                          </ReactMarkdown>\r\n                        )\r\n                      )}\r\n                    </Box>\r\n                  </ChatUserMessage>\r\n                </CardWrapperPrimary>\r\n              )}\r\n            </MessageContent>\r\n          </MessageContainer>\r\n        ))}\r\n\r\n        {/* Element to scroll to */}\r\n        <div ref={messagesEndRef} />\r\n      </Box>\r\n\r\n      {/* Scroll to bottom button */}\r\n      {showScrollButton && (\r\n        <Tooltip title={t('scrollToBottom')} placement=\"top\" arrow>\r\n          <ScrollToBottomFab\r\n            size=\"small\"\r\n            onClick={scrollToBottom}\r\n            aria-label={t('scrollToBottom')}\r\n          >\r\n            <KeyboardArrowDownIcon sx={{ fontSize: '18px' }} />\r\n          </ScrollToBottomFab>\r\n        </Tooltip>\r\n      )}\r\n\r\n      {/* Image Modal */}\r\n      <StyledImageModal\r\n        open={modalOpen}\r\n        onClose={handleCloseModal}\r\n        maxWidth=\"lg\"\r\n        TransitionComponent={Zoom}\r\n        PaperProps={{\r\n          elevation: 8,\r\n        }}\r\n      >\r\n        <DialogContent sx={{ p: 2, overflow: 'hidden' }}>\r\n          <Box\r\n            component=\"img\"\r\n            src={modalImage?.url}\r\n            alt=\"Expanded image\"\r\n            sx={{\r\n              maxWidth: '100%',\r\n              maxHeight: '70vh',\r\n              borderRadius: 2,\r\n              objectFit: 'contain',\r\n              boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\r\n            }}\r\n          />\r\n\r\n          {modalImage?.revisedPrompt && (\r\n            <ImagePromptText variant=\"body2\">\r\n              {modalImage.revisedPrompt}\r\n            </ImagePromptText>\r\n          )}\r\n\r\n          <ImageModalActions>\r\n            <Button\r\n              onClick={handleDownloadImage}\r\n              variant=\"contained\"\r\n              startIcon={<DownloadIcon />}\r\n              className=\"download-btn\"\r\n              sx={{ color: 'white' }}\r\n            >\r\n              Download\r\n            </Button>\r\n            <Button\r\n              onClick={handleCloseModal}\r\n              variant=\"outlined\"\r\n              className=\"close-btn\"\r\n            >\r\n              Close\r\n            </Button>\r\n          </ImageModalActions>\r\n        </DialogContent>\r\n      </StyledImageModal>\r\n    </Box>\r\n  );\r\n})\r\n\r\nexport default ChatContent;\r\n","import PropTypes from 'prop-types';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\n\nimport { Box, useTheme } from '@mui/material';\n\nconst Scrollbar = ({ className, children, onScroll, ...rest }) => {\n  const theme = useTheme();\n\n  return (\n    <Scrollbars\n      autoHide\n      onScroll={onScroll}\n      renderView={(props) => (\n        <div\n          {...props}\n          style={{\n            ...props.style,\n            overflowX: 'hidden',\n            marginBottom: 0,\n            backgroundColor: 'inherit'\n          }}\n        />\n      )}\n      renderThumbVertical={() => {\n        return (\n          <Box\n            sx={{\n              width: 5,\n              background: `${theme.colors.alpha.black[10]}`,\n              borderRadius: `${theme.general.borderRadiusLg}`,\n              transition: `${theme.transitions.create(['background'])}`,\n\n              '&:hover': {\n                background: `${theme.colors.alpha.black[30]}`\n              }\n            }}\n          />\n        );\n      }}\n      {...rest}\n    >\n      {children}\n    </Scrollbars>\n  );\n};\n\nScrollbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  onScroll: PropTypes.func\n};\n\nexport default Scrollbar;\n","import { useState, useRef } from 'react';\n\nimport { Helmet } from 'react-helmet-async';\n\n\nimport BottomBarContent from './BottomBarContent';\nimport SidebarContent from './SidebarContent';\nimport ChatContent from './ChatContent';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport Scrollbar from 'src/components/Scrollbar';\nimport { useDevice } from 'src/contexts/deviceContext';\n\nimport {\n  Box,\n  styled,\n  Divider,\n  Drawer,\n  IconButton,\n  useTheme,\n  Snackbar,\n  Alert\n} from '@mui/material';\n\nconst RootWrapper = styled(Box)(({ theme }) => ({\n  display: \"flex\",\n  height: `calc(100dvh - ${theme.header.mobileHeight})`,\n  [theme.breakpoints.up(\"md\")]: {\n    height: `calc(100dvh - ${theme.header.height})`\n  }\n}));\n\nconst Sidebar = styled(Box)(\n  ({ theme }) => `\n        width: 300px;\n        background: #E8E8E8; // Slightly lighter background color\n        border-right: ${theme.colors.alpha.black[10]} solid 1px;\n`\n);\n\nconst ChatWindow = styled(Box)(\n  () => `\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n`\n);\n\nconst ChatTopBar = styled(Box)(\n  ({ theme }) => `\n        background: ${theme.colors.alpha.white[100]};\n        border-bottom: ${theme.colors.alpha.black[10]} solid 1px;\n        padding: ${theme.spacing(2)};\n        align-items: center;\n`\n);\n\nconst IconButtonToggle = styled(IconButton)(\n  ({ theme }) => `\n  width: ${theme.spacing(4)};\n  height: ${theme.spacing(4)};\n  background: ${theme.colors.alpha.white[100]};\n`\n);\n\nconst DrawerWrapperMobile = styled(Drawer)(\n  () => `\n    width: 340px;\n    flex-shrink: 0;\n\n  & > .MuiPaper-root {\n        width: 340px;\n        z-index: 3;\n  }\n`\n);\n\n\n\nfunction ApplicationsMessenger() {\n  const theme = useTheme();\n  const { isMobile, isComputer } = useDevice();\n  const [file, setFile] = useState(null);\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const chatScrollRef = useRef(null);\n\n  const location = useLocation();\n  \n  const [toast, setToast] = useState({\n    open: false,\n    message: '',\n    severity: 'success'\n  });\n\n  const handleCloseToast = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setToast({ ...toast, open: false });\n  };\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const paymentStatus = params.get('payment');\n    const sessionId = params.get('session_id');\n\n    if (sessionId) {\n      // Call your backend to verify the payment\n      fetch(`/api/payment/stripe_success?session_id=${sessionId}`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n        },\n      });\n    }\n\n    if (paymentStatus) {\n      let message = '';\n      let severity = 'info';\n\n      switch (paymentStatus) {\n        case 'success':\n          message = 'Payment successful! Your balance has been updated.';\n          severity = 'success';\n         \n          break;\n        case 'cancelled':\n          message = 'Payment was cancelled.';\n          severity = 'warning';\n          break;\n        case 'error':\n          const reason = params.get('reason');\n          message = `Payment error: ${reason || 'Unknown error'}`;\n          severity = 'error';\n          break;\n        case 'not-paid':\n          message = 'Payment was not completed.';\n          severity = 'error';\n          break;\n        case 'already-processed':\n          message = 'Payment was already processed.';\n          severity = 'info';\n          break;\n        default:\n          message = 'Unknown payment status.';\n          severity = 'warning';\n      }\n      \n      setToast({\n        open: true,\n        message,\n        severity\n      });\n    }\n  }, [location.search]);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const handleChatScroll = (e) => {\n    if (chatScrollRef.current && chatScrollRef.current.handleScroll) {\n      chatScrollRef.current.handleScroll(e);\n    }\n  };\n\n\n  \n\n  return (\n    <>\n      <Helmet>\n        <title>OneDollarAI</title>\n      </Helmet>\n      <RootWrapper className=\"Mui-FixedWrapper\">\n        <Snackbar\n          open={toast.open}\n          autoHideDuration={6000}\n          onClose={handleCloseToast}\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        >\n          <Alert \n            onClose={handleCloseToast} \n            severity={toast.severity}\n            sx={{ width: '100%' }}\n            elevation={6}\n            variant=\"filled\"\n          >\n            {toast.message}\n          </Alert>\n        </Snackbar>\n        <DrawerWrapperMobile\n          sx={{\n            display: { lg: 'block', xs: 'inline-block' }\n          }}\n          variant=\"temporary\"\n          anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n        >\n        </DrawerWrapperMobile>\n          { !isMobile && (\n            <Sidebar>\n              <Scrollbar sx={{ backgroundColor: '#FFFFFF' }}>\n                <SidebarContent />\n              </Scrollbar>\n            </Sidebar>\n          )}\n        <ChatWindow \n          sx={{\n            pt:{\n              // xs: isComputer ? `41px` : `90px`,\n              md : '0px'\n          }}}\n        >\n          <Box flex={1}\n            sx={{\n                position:'relative',\n                pt:{\n                    md:'0px !important'\n                }\n            }}\n           \n            >\n          \n            <Scrollbar onScroll={handleChatScroll}>\n              <ChatContent ref={chatScrollRef} />\n            </Scrollbar>\n          </Box>\n          <Divider />\n          <BottomBarContent file={file} />\n        </ChatWindow>\n      </RootWrapper>\n    </>\n  );\n}\n\nexport default ApplicationsMessenger;"],"names":["_ref","onStartCapture","onEndCapture","children","state","setState","useState","on","startX","startY","endX","endY","crossHairsTop","crossHairsLeft","isMouseDown","windowWidth","windowHeight","borderWidth","cropPositionTop","cropPositionLeft","cropWidth","cropHeigth","handleWindowResize","useCallback","window","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","prevState","useEffect","addEventListener","removeEventListener","handleStartCapture","handleClickTakeScreenShot","querySelector","html2canvas","then","canvas","croppedCanvas","createElement","croppedCanvasContext","getContext","width","height","drawImage","toDataURL","renderChild","_jsxs","onMouseMove","e","clientX","clientY","isStartTop","isStartBottom","isStartLeft","isStartRight","newBorderWidth","onMouseDown","onMouseUp","handleMouseUp","_jsx","className","style","left","top","MessageInputWrapper","styled","InputBase","theme","fontSize","typography","pxToRem","padding","spacing","maxHeight","lineHeight","ImageGenerationModeBox","Box","_ref2","display","alignItems","background","borderRadius","shape","marginBottom","border","_ref3","file","propFile","useTheme","user","getUserData","useAuth","selectedFile","useContext","SidebarContext","dispatch","useDispatch","model","useSelector","setting","selectedChatLog","chat","messages","activeChatId","isGenerating","imageGenerating","t","imageError","useTranslation","setFile","filePreview","setFilePreview","anchorEl","setAnchorEl","anchorE2","setAnchorE2","input","setInput","screenCapture","setScreenCapture","isMobile","setIsMobile","isDragging","setIsDragging","currentSize","setCurrentSize","currentQuality","setCurrentQuality","currentStyle","setCurrentStyle","previousMessages","setPreviousMessages","currentMessageIndex","setCurrentMessageIndex","isImageModel","previewFile","handlePaste","balance","selectModel","id","label","icons","requiresPayment","handleResize","event","clipboardItems","clipboardData","items","item","type","indexOf","blob","getAsFile","reader","FileReader","onload","target","result","readAsDataURL","fileUrl","URL","createObjectURL","startsWith","onloadend","swal","title","i18next","icon","toast","timer","position","customClass","popup","container","timerProgressBar","showConfirmButton","base64ToBlob","base64","mimeType","byteCharacters","atob","byteArrays","i","length","slice","byteNumbers","Array","j","charCodeAt","push","Uint8Array","Blob","handleSendMessage","handleScreenCaptureMessage","newMessage","role","content","base64Encoded","SET_MESSAGES","payload","formData","FormData","base64Data","split","formattedMessages","map","_ref4","text","image_url","url","append","JSON","stringify","sendMessage","trim","handleImageGeneration","name","setMessages","message","_ref5","error","console","imageOptions","prompt","n","fireEvent","eventName","eventData","size","quality","useImagenAPI","generateImagenImage","generateImage","modelId","log","handleKeyDown","ctrlKey","key","preventDefault","newIndex","handleEmojiClick","emojiObject","prev","emoji","handleFileChange","files","handleStopGeneration","stopGeneration","handleStopImageGeneration","stopImageGeneration","Preview","_ref6","onDelete","sx","p","maxWidth","flex","color","gap","mx","IconButton","right","onClick","CancelIcon","handleDragOver","stopPropagation","handleDragLeave","handleDrop","droppedFile","dataTransfer","ScreenCapture","capturedImage","_ref7","flexDirection","px","py","onDragOver","onDragLeave","onDrop","bottom","backgroundColor","justifyContent","zIndex","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Typography","fontWeight","flexGrow","ImageIcon","mr","variant","mb","overflow","textOverflow","whiteSpace","component","src","alt","autoFocus","placeholder","multiline","disabled","value","onChange","onKeyDown","maxRows","overflowY","mt","_Fragment","Tooltip","arrow","currentTarget","clipPath","StopCircleIcon","CircularProgress","Menu","open","Boolean","onClose","EmojiPicker","onEmojiClick","PaperProps","MenuListProps","htmlFor","MenuItem","accept","InsertDriveFileOutlinedIcon","Divider","my","AddPhotoAlternateOutlinedIcon","CardWrapperPrimary","Card","general","borderRadiusXl","borderTopRightRadius","marginLeft","boxShadow","transform","breakpoints","up","CardWrapperSecondary","borderTopLeftRadius","marginRight","ScrollToBottomFab","Fab","minHeight","transition","ChatImageWrapper","marginTop","ChatUserMessage","ChatAssistantImageMessage","gridTemplateColumns","MessageContainer","MessageContent","_ref8","CodeBlock","_ref9","overflowX","fontFamily","margin","fontStyle","WebkitUserSelect","userSelect","textAlign","borderRight","verticalAlign","paddingRight","minWidth","visibility","opacity","pointerEvents","textTransform","letterSpacing","InlineCode","_ref10","wordBreak","forwardRef","props","ref","dragToggle","useSidebar","displayMessages","setDisplayMessages","messagesEndRef","useRef","fileUploadRef","selectedModel","userScrolled","setUserScrolled","showScrollButton","setShowScrollButton","lastScrollTop","setLastScrollTop","scrollTimerRef","modalImage","setModalImage","modalOpen","setModalOpen","userAtBottom","setUserAtBottom","copiedCode","setCopiedCode","chatContainerRef","chatContainer","current","handleScroll","scrollTop","scrollHeight","isScrolledToBottom","Math","abs","isUserAtBottom","clearTimeout","setTimeout","useImperativeHandle","getUserChat","scrollToBottom","_fileUploadRef$curren","scrollIntoView","behavior","_selectedChatLog","renderers","code","_ref11","node","inline","match","exec","String","replace","language","displayLanguage","toUpperCase","Button","navigator","clipboard","writeText","copyToClipboard","ContentCopyIcon","processedChildren","React","toArray","child","parts","part","test","bgcolor","handleImageClick","imageUrl","revisedPrompt","handleCloseModal","StyledImageModal","Dialog","_ref12","backgroundImage","ImageModalActions","_ref13","borderColor","ImagePromptText","_ref14","ImageQuestionBadge","_ref15","backdropFilter","borderBottom","async","Cookies","get","backendUrl","process","response","fetch","credentials","status","token","warn","fetchCSRFToken","pt","xs","md","cursor","getElementById","click","marginY","CardActionArea","index","_message$content$","_message$content$2","_message$content$2$im","_message$content$3","alignSelf","bgColor","displayName","modelName","SmsIcon","includes","AutoAwesomeIcon","PsychologyIcon","SmartToyIcon","versionMatch","SchoolIcon","getModelDetails","Avatar","images","image","imgIndex","ReactMarkdown","rehypePlugins","rehypeHighlight","components","flexShrink","isArray","placement","KeyboardArrowDownIcon","TransitionComponent","Zoom","elevation","DialogContent","objectFit","handleDownloadImage","link","href","download","appendChild","removeChild","downloadUrl","encodeURIComponent","csrfToken","xhr","XMLHttpRequest","setRequestHeader","responseType","this","a","revokeObjectURL","onerror","send","startIcon","DownloadIcon","onScroll","rest","Scrollbars","autoHide","renderView","renderThumbVertical","colors","alpha","black","borderRadiusLg","transitions","create","RootWrapper","header","mobileHeight","Sidebar","ChatWindow","DrawerWrapperMobile","white","Drawer","isComputer","useDevice","mobileOpen","setMobileOpen","chatScrollRef","location","useLocation","setToast","severity","handleCloseToast","reason","params","URLSearchParams","search","paymentStatus","sessionId","method","headers","Helmet","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","Alert","lg","anchor","direction","handleDrawerToggle","Scrollbar","SidebarContent","ChatContent","BottomBarContent"],"sourceRoot":""}