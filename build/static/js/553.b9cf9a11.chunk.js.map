{"version":3,"file":"static/js/553.b9cf9a11.chunk.js","mappings":"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","sources":["content/applications/SpeechToText/index.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Container,\n  Typography,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Alert,\n  Divider,\n  alpha,\n  FormControl,\n  Select,\n  MenuItem,\n  InputLabel,\n  Grid,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport { styled, useTheme } from '@mui/material/styles';\nimport AudioFileIcon from '@mui/icons-material/AudioFile';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useAuth } from 'src/contexts/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport { topupModalShow } from 'src/actions/paymentAction';\nimport { loginModalShow, loginModalHide } from 'src/actions/authAction';\nimport AuthDialogContent from '../Messenger/Auth/AuthDialogContent';\n\n// Set default icon color to black\nconst BlackIcon = styled(Box)(({ theme }) => ({\n  '& .MuiSvgIcon-root': {\n    color: 'black',\n  }\n}));\n\nconst ControlButton = styled(Button)(({ theme }) => ({\n  borderRadius: '30px',\n  padding: '10px 20px',\n  minWidth: '100px',\n  boxShadow: 'none',\n  color: 'black',\n  '& .MuiSvgIcon-root': {\n    color: 'black',\n  },\n  '&.MuiButton-contained': {\n    backgroundColor: theme.palette.grey[200],\n    color: 'black',\n    '&:hover': {\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: '0 3px 10px rgba(0, 0, 0, 0.2)',\n    }\n  },\n  '&.MuiButton-outlined': {\n    borderColor: 'black',\n    color: 'black',\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.black, 0.05),\n      borderColor: 'black',\n    }\n  }\n}));\n\nconst FileUploadBox = styled(Box)(({ theme, isDragActive }) => ({\n  border: `1px dashed`,\n  borderColor: isDragActive ? theme.palette.primary.main : alpha(theme.palette.grey[400], 0.5),\n  borderRadius: theme.spacing(1),\n  padding: theme.spacing(2),\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  backgroundColor: isDragActive ? alpha(theme.palette.primary.main, 0.03) : alpha(theme.palette.grey[100], 0.3),\n  height: '60px',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    borderColor: theme.palette.primary.main,\n    backgroundColor: alpha(theme.palette.primary.main, 0.03)\n  },\n}));\n\n// Styled select components\nconst StyledMenuItem = styled(MenuItem)(({ theme }) => ({\n  color: 'black !important',\n  fontWeight: 400,\n  padding: '8px 16px',\n  '&.Mui-selected': {\n    backgroundColor: alpha(theme.palette.primary.main, 0.1),\n    color: 'black !important',\n    fontWeight: 500\n  },\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.primary.main, 0.05),\n    color: 'black !important'\n  }\n}));\n\nconst StyledSelect = styled(Select)(({ theme }) => ({\n  '& .MuiSelect-select': {\n    color: 'black !important',\n    fontWeight: 500,\n    padding: '8px 14px',\n    height: '44px !important',\n  },\n  '& .MuiSvgIcon-root': {\n    color: 'black !important',\n  }\n}));\n\nconst SpeechToText = () => {\n  const theme = useTheme();\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n  const [transcript, setTranscript] = useState('');\n  const [error, setError] = useState('');\n  const [isCopied, setIsCopied] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [audioFile, setAudioFile] = useState(null);\n  const [selectedModel, setSelectedModel] = useState('#g1_nova-2-general');\n  const [isDragActive, setIsDragActive] = useState(false);\n  const [audioDuration, setAudioDuration] = useState(0);\n  const [costEstimate, setCostEstimate] = useState(null);\n  const fileInputRef = useRef(null);\n  const audioElementRef = useRef(null);\n  const [isAuthDialogOpen, setAuthDialogOpen] = useState(false);\n\n  // Model options\n  const modelOptions = [\n    { id: '#g1_nova-2-automotive', label: 'Automotive' },\n    { id: '#g1_nova-2-conversationalai', label: 'Conversational AI' },\n    { id: '#g1_nova-2-drivethru', label: 'Drive-thru' },\n    { id: '#g1_nova-2-finance', label: 'Finance' },\n    { id: '#g1_nova-2-general', label: 'General' },\n    { id: '#g1_nova-2-medical', label: 'Medical' },\n    { id: '#g1_nova-2-meeting', label: 'Meeting' },\n    { id: '#g1_nova-2-phonecall', label: 'Phone Call' },\n    { id: '#g1_nova-2-video', label: 'Video' },\n    { id: '#g1_nova-2-voicemail', label: 'Voicemail' },\n  ];\n\n  // Fetch CSRF token when component mounts\n  useEffect(() => {\n    const fetchCSRFToken = async () => {\n      try {\n        const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n        // Check if CSRF token already exists\n        if (!Cookies.get('csrftoken')) {\n          console.log('No CSRF token found, fetching a new one...');\n          const response = await axios.get(`${backendUrl}/api/get_csrf_token/`, {\n            withCredentials: true\n          });\n          if (response.status === 200) {\n            const token = Cookies.get('csrftoken');\n            console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\n          } else {\n            console.warn('Failed to fetch CSRF token:', response.status);\n          }\n        } else {\n          console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\n        }\n      } catch (error) {\n        console.error('Error fetching CSRF token:', error);\n        // Continue without CSRF token - backend will handle exempt views\n      }\n    };\n\n    fetchCSRFToken();\n  }, []);\n\n  const handleModelChange = (event) => {\n    setSelectedModel(event.target.value);\n  };\n\n  const estimateAudioDuration = (file) => {\n    return new Promise((resolve, reject) => {\n      const url = URL.createObjectURL(file);\n\n      if (!audioElementRef.current) {\n        audioElementRef.current = new Audio();\n      }\n\n      audioElementRef.current.src = url;\n\n      audioElementRef.current.onloadedmetadata = () => {\n        const duration = audioElementRef.current.duration;\n        URL.revokeObjectURL(url);\n        resolve(duration);\n      };\n\n      audioElementRef.current.onerror = (err) => {\n        URL.revokeObjectURL(url);\n        reject(new Error('Could not load audio file'));\n      };\n    });\n  };\n\n  const calculateCostEstimate = (durationInSeconds) => {\n    // Convert seconds to minutes\n    const durationInMinutes = durationInSeconds / 60;\n\n    // Rate per minute\n    const ratePerMinute = 0.006195;\n\n    // Calculate cost\n    const cost = durationInMinutes * ratePerMinute;\n\n    // Return formatted cost with 6 decimal places\n    return cost.toFixed(6);\n  };\n\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const validTypes = ['audio/wav', 'audio/mpeg', 'audio/mp3', 'audio/mp4', 'audio/x-m4a', 'audio/webm'];\n\n    // Check if the file type is supported or if it has a supported extension\n    const fileExt = file.name.split('.').pop().toLowerCase();\n    const validExts = ['wav', 'mp3', 'mp4', 'm4a', 'webm'];\n\n    if (!validTypes.includes(file.type) && !validExts.includes(fileExt)) {\n      setError('Please upload a valid audio file (WAV, MP3, MP4, M4A, WEBM)');\n      return;\n    }\n\n    setAudioFile(file);\n    setError('');\n\n    try {\n      // Estimate duration for cost calculation\n      const duration = await estimateAudioDuration(file);\n      setAudioDuration(duration);\n\n      // Calculate cost estimate\n      const cost = calculateCostEstimate(duration);\n      setCostEstimate(cost);\n    } catch (err) {\n      console.error('Error estimating audio duration:', err);\n      // If we can't get the duration, we'll skip the cost estimate\n      setAudioDuration(0);\n      setCostEstimate(null);\n    }\n  };\n\n  const handleFileUpload = async () => {\n    if (!user) {\n      setAuthDialogOpen(true);\n      return;\n    }\n\n    if (!audioFile) {\n      setError('Please select an audio file first');\n      return;\n    }\n\n    // Check user balance\n    if (user.balance <= 0) {\n      dispatch(topupModalShow());\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Create a form data object\n      const formData = new FormData();\n      formData.append('audio', audioFile);\n      formData.append('model', selectedModel);\n      formData.append('cost', costEstimate);\n      // Add user_id if available\n      if (user && user.id) {\n        formData.append('user_id', user.id);\n      }\n\n      // Get the backend URL from environment variable or use default\n      const backendUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n      // Make the API call to the backend\n      const response = await axios.post(`${backendUrl}/api/speech_to_text/`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'X-CSRFToken': Cookies.get('csrftoken')\n        },\n        withCredentials: true\n      });\n\n      if (response.data && response.data.transcript) {\n        setTranscript(response.data.transcript);\n        console.log('Full API response:', response.data);\n\n        // Reset cost estimate after successful processing\n        setCostEstimate(null);\n      } else {\n        throw new Error('Invalid response from server - no transcript returned');\n      }\n    } catch (err) {\n      console.error('Error processing speech to text:', err);\n\n      let errorMessage = 'Failed to process audio file. Please try again.';\n\n      if (err.response) {\n        console.error('Error response data:', err.response.data);\n        console.error('Error response status:', err.response.status);\n        errorMessage = err.response.data.error || errorMessage;\n      } else if (err.request) {\n        console.error('Error request:', err.request);\n        errorMessage = 'No response from server. Please check if the server is running.';\n      }\n\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCopyText = () => {\n    if (transcript) {\n      navigator.clipboard.writeText(transcript)\n        .then(() => {\n          setIsCopied(true);\n          setTimeout(() => setIsCopied(false), 2000);\n        })\n        .catch(err => {\n          console.error('Failed to copy text:', err);\n          setError('Failed to copy text to clipboard');\n        });\n    }\n  };\n\n  const handleClearText = () => {\n    setTranscript('');\n    setError('');\n    setAudioFile(null);\n    setAudioDuration(0);\n    setCostEstimate(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleTextChange = (e) => {\n    setTranscript(e.target.value);\n  };\n\n  const downloadTranscript = () => {\n    if (!transcript) {\n      setError('No transcript to download');\n      return;\n    }\n\n    const element = document.createElement('a');\n    const file = new Blob([transcript], {type: 'text/plain'});\n    element.href = URL.createObjectURL(file);\n    element.download = 'transcript.txt';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  const triggerFileInput = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleDragEnter = (e) => {\n    e.preventDefault();\n    setIsDragActive(true);\n  };\n\n  const handleDragLeave = (e) => {\n    e.preventDefault();\n    setIsDragActive(false);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = async (e) => {\n    e.preventDefault();\n    setIsDragActive(false);\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n      const file = e.dataTransfer.files[0];\n      const validTypes = ['audio/wav', 'audio/mpeg', 'audio/mp3', 'audio/mp4', 'audio/x-m4a', 'audio/webm'];\n      const fileExt = file.name.split('.').pop().toLowerCase();\n      const validExts = ['wav', 'mp3', 'mp4', 'm4a', 'webm'];\n\n      if (!validTypes.includes(file.type) && !validExts.includes(fileExt)) {\n        setError('Please upload a valid audio file (WAV, MP3, MP4, M4A, WEBM)');\n        return;\n      }\n\n      setAudioFile(file);\n      setError('');\n\n      try {\n        // Estimate duration for cost calculation\n        const duration = await estimateAudioDuration(file);\n        setAudioDuration(duration);\n\n        // Calculate cost estimate\n        const cost = calculateCostEstimate(duration);\n        setCostEstimate(cost);\n      } catch (err) {\n        console.error('Error estimating audio duration:', err);\n        // If we can't get the duration, we'll skip the cost estimate\n        setAudioDuration(0);\n        setCostEstimate(null);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Speech to Text | OneDollarAI</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: theme.palette.mode === 'dark' ? alpha(theme.palette.background.default, 0.9) : alpha(theme.palette.grey[100], 0.9),\n          pt: 2,\n          pb: 6\n        }}\n      >\n        <Container maxWidth=\"lg\" >\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom color=\"black\" sx={{ fontSize: '2rem', fontWeight: 600 }}>\n            Speech to Text\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"black\" sx={{ mb: 2 }}>\n            Convert your audio files to text. Upload an audio file and get the transcription.\n          </Typography>\n\n          <Card\n            elevation={0}\n            sx={{\n              borderRadius: 2,\n              overflow: 'hidden',\n              backgroundColor: '#fff',\n              border: '1px solid',\n              borderColor: alpha(theme.palette.grey[300], 0.5),\n            }}\n          >\n            <CardContent sx={{ p: { xs: 2, md: 3 } }}>\n              {error && (\n                <Alert severity=\"error\" sx={{ mb: 3, background: 'transparent', color: 'red' }}>\n                  {error}\n                </Alert>\n              )}\n\n              {isCopied && (\n                <Alert severity=\"success\" sx={{ mb: 3, background: 'transparent', color: 'green' }}>\n                  Text copied to clipboard!\n                </Alert>\n              )}\n\n              {costEstimate && (\n                <Alert severity=\"info\" sx={{ mb: 3, background: 'transparent' }}>\n                  Estimated cost: ${costEstimate} ({(audioDuration / 60).toFixed(2)} minutes @ $0.006195/minute)\n                </Alert>\n              )}\n\n              {isLoading ? (\n                <Box sx={{ display: 'flex', justifyContent: 'center', my: 3 }}>\n                  <CircularProgress />\n                </Box>\n              ) : (\n                <Box sx={{ mb: 3, position: 'relative' }}>\n                  <TextField\n                    placeholder=\"Transcription will appear here...\"\n                    multiline\n                    rows={6}\n                    fullWidth\n                    value={transcript}\n                    onChange={handleTextChange}\n                    variant=\"outlined\"\n                    InputProps={{\n                      style: { color: 'black' }\n                    }}\n                    sx={{\n                      backgroundColor: alpha(theme.palette.grey[100], 0.5),\n                      '& .MuiOutlinedInput-root': {\n                        '& fieldset': {\n                          borderColor: 'rgba(0, 0, 0, 0.1)',\n                        },\n                        '&:hover fieldset': {\n                          borderColor: alpha(theme.palette.grey[400], 0.5),\n                        },\n                        '&.Mui-focused fieldset': {\n                          borderColor: theme.palette.primary.main,\n                        },\n                      },\n                    }}\n                  />\n                  <Box sx={{ position: 'absolute', right: 8, top: 8, display: 'flex' }}>\n                    <Tooltip title=\"Copy text\">\n                      <BlackIcon>\n                        <IconButton onClick={handleCopyText} disabled={!transcript} sx={{ color: 'black' }}>\n                          <ContentCopyIcon fontSize=\"small\" />\n                        </IconButton>\n                      </BlackIcon>\n                    </Tooltip>\n                    <Tooltip title=\"Clear text\">\n                      <BlackIcon>\n                        <IconButton onClick={handleClearText} disabled={!transcript && !audioFile} sx={{ color: 'black' }}>\n                          <ClearIcon fontSize=\"small\" />\n                        </IconButton>\n                      </BlackIcon>\n                    </Tooltip>\n                  </Box>\n                </Box>\n              )}\n\n              {/* Row 2: Upload Area and Model Selection */}\n              <Grid container spacing={3} sx={{ mb: 4 }}>\n                {/* Audio Upload Area */}\n                <Grid item xs={12} md={6}>\n                  <input\n                    type=\"file\"\n                    accept=\"audio/*\"\n                    onChange={handleFileChange}\n                    style={{ display: 'none' }}\n                    ref={fileInputRef}\n                  />\n\n                  <FileUploadBox\n                    onClick={triggerFileInput}\n                    isDragActive={isDragActive}\n                    onDragEnter={handleDragEnter}\n                    onDragLeave={handleDragLeave}\n                    onDragOver={handleDragOver}\n                    onDrop={handleDrop}\n                  >\n                    <BlackIcon>\n                      <AudioFileIcon sx={{ fontSize: 28, mr: 2 }} />\n                    </BlackIcon>\n                    <Box>\n                      <Typography variant=\"body2\" color=\"black\">\n                        {isDragActive ? \"Drop the file here...\" : \"Attach Audio File (WAV, MP3, MP4, M4A, WEBM)\"}\n                      </Typography>\n\n                      {audioFile && (\n                        <Typography variant=\"caption\" color=\"black\" sx={{ fontWeight: 'bold' }}>\n                          Current file: {audioFile.name} {audioDuration > 0 ? `(${(audioDuration / 60).toFixed(2)} minutes)` : ''}\n                        </Typography>\n                      )}\n                    </Box>\n                  </FileUploadBox>\n                </Grid>\n\n                {/* Model Selection */}\n                <Grid item xs={12} md={6}>\n                  <Box>\n                    <FormControl\n                      fullWidth\n                      variant=\"outlined\"\n                      size=\"small\"\n                      sx={{\n                        backgroundColor: alpha(theme.palette.grey[100], 0.5),\n                        '& .MuiOutlinedInput-root': {\n                          color: 'black',\n                          '& fieldset': {\n                            borderColor: 'rgba(0, 0, 0, 0.1)',\n                          },\n                          '&:hover fieldset': {\n                            borderColor: alpha(theme.palette.grey[400], 0.5),\n                          },\n                          '&.Mui-focused fieldset': {\n                            borderColor: theme.palette.primary.main,\n                          },\n                        }\n                      }}\n                    >\n                      <StyledSelect\n                        value={selectedModel}\n                        onChange={handleModelChange}\n                        displayEmpty\n                        renderValue={(selected) => {\n                          const selectedVoiceModel = modelOptions.find(model => model.id === selected);\n                          return (\n                            <Typography\n                              variant=\"body1\"\n                              sx={{\n                                color: 'black !important',\n                                fontWeight: 500,\n                                whiteSpace: 'nowrap',\n                                overflow: 'hidden',\n                                textOverflow: 'ellipsis',\n                                display: 'flex',\n                                alignItems: 'center',\n                                height: '100%'\n                              }}\n                            >\n                              {selectedVoiceModel ? selectedVoiceModel.label : 'Select Model'}\n                            </Typography>\n                          );\n                        }}\n                        MenuProps={{\n                          PaperProps: {\n                            sx: {\n                              borderRadius: 2,\n                              boxShadow: '0 8px 16px rgba(0, 0, 0, 0.1)',\n                              '.MuiList-root': {\n                                padding: '4px 0',\n                              },\n                            },\n                          },\n                          anchorOrigin: {\n                            vertical: 'bottom',\n                            horizontal: 'left',\n                          },\n                          transformOrigin: {\n                            vertical: 'top',\n                            horizontal: 'left',\n                          },\n                        }}\n                      >\n                        {modelOptions.map((model) => (\n                          <StyledMenuItem key={model.id} value={model.id}>\n                            <Typography variant=\"body2\" sx={{ color: 'black !important' }}>\n                              {model.label}\n                            </Typography>\n                          </StyledMenuItem>\n                        ))}\n                      </StyledSelect>\n                    </FormControl>\n                  </Box>\n                </Grid>\n              </Grid>\n\n              {/* Controls */}\n              <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, flexWrap: 'wrap' }}>\n                <ControlButton\n                  variant=\"contained\"\n                  onClick={handleFileUpload}\n                  startIcon={isLoading ?\n                    <CircularProgress size={20} sx={{ color: 'black' }} /> :\n                    <BlackIcon sx={{ display: 'inline-flex' }}><UploadFileIcon /></BlackIcon>\n                  }\n                  size=\"large\"\n                >\n                  {!user ? 'Login Required' : user.balance <= 0 ? 'Insufficient Balance' : isLoading ? 'Processing...' : 'Process Audio'}\n                </ControlButton>\n\n                <ControlButton\n                  variant=\"contained\"\n                  onClick={downloadTranscript}\n                  disabled={!transcript || isLoading}\n                  startIcon={<BlackIcon sx={{ display: 'inline-flex' }}><DownloadIcon /></BlackIcon>}\n                  size=\"large\"\n                >\n                  Download\n                </ControlButton>\n              </Box>\n\n              {!user && (\n                <Box sx={{ mt: 3, p: 2, backgroundColor: alpha(theme.palette.info.light, 0.1), borderRadius: 1 }}>\n                  <Typography variant=\"body2\" color=\"black\" align=\"center\">\n                    Please log in to use the speech-to-text conversion feature\n                  </Typography>\n                </Box>\n              )}\n\n              {user && user.balance <= 0 && (\n                <Box sx={{ mt: 3, p: 2, backgroundColor: alpha(theme.palette.warning.light, 0.1), borderRadius: 1 }}>\n                  <Typography variant=\"body2\" color=\"black\" align=\"center\">\n                    Your balance is insufficient. Please top up to use the speech-to-text conversion feature.\n                  </Typography>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n\n      {/* Auth Dialog */}\n      <AuthDialogContent\n        isMainDialogOpen={isAuthDialogOpen}\n        closeMainDialog={() => setAuthDialogOpen(false)}\n        switchBetweenDialogs={() => {}}\n        isSecondaryDialogOpen={false}\n        closeSecondaryDialog={() => {}}\n        renderActiveFormComponent={() => {}}\n      />\n    </>\n  );\n};\n\nexport default SpeechToText;\n"],"names":["BlackIcon","styled","Box","_ref","theme","color","ControlButton","Button","_ref2","borderRadius","padding","minWidth","boxShadow","backgroundColor","palette","grey","borderColor","alpha","common","black","FileUploadBox","_ref3","isDragActive","border","primary","main","spacing","display","alignItems","justifyContent","cursor","height","transition","StyledMenuItem","MenuItem","_ref4","fontWeight","StyledSelect","Select","_ref5","SpeechToText","useTheme","user","useAuth","dispatch","useDispatch","transcript","setTranscript","useState","error","setError","isCopied","setIsCopied","isLoading","setIsLoading","audioFile","setAudioFile","selectedModel","setSelectedModel","setIsDragActive","audioDuration","setAudioDuration","costEstimate","setCostEstimate","fileInputRef","useRef","audioElementRef","isAuthDialogOpen","setAuthDialogOpen","modelOptions","id","label","useEffect","async","backendUrl","process","Cookies","get","console","log","response","axios","withCredentials","status","token","warn","fetchCSRFToken","estimateAudioDuration","file","Promise","resolve","reject","url","URL","createObjectURL","current","Audio","src","onloadedmetadata","duration","revokeObjectURL","onerror","err","Error","calculateCostEstimate","durationInSeconds","toFixed","_jsxs","_Fragment","children","_jsx","Helmet","sx","mode","background","default","pt","pb","Container","maxWidth","Typography","variant","component","gutterBottom","fontSize","mb","Card","elevation","overflow","CardContent","p","xs","md","Alert","severity","my","CircularProgress","position","TextField","placeholder","multiline","rows","fullWidth","value","onChange","e","target","InputProps","style","right","top","Tooltip","title","IconButton","onClick","handleCopyText","navigator","clipboard","writeText","then","setTimeout","catch","disabled","ContentCopyIcon","handleClearText","ClearIcon","Grid","container","item","type","accept","event","files","fileExt","name","split","pop","toLowerCase","includes","cost","ref","triggerFileInput","click","onDragEnter","preventDefault","onDragLeave","onDragOver","onDrop","dataTransfer","validTypes","validExts","AudioFileIcon","mr","FormControl","size","displayEmpty","renderValue","selected","selectedVoiceModel","find","model","whiteSpace","textOverflow","MenuProps","PaperProps","anchorOrigin","vertical","horizontal","transformOrigin","map","gap","flexWrap","balance","topupModalShow","formData","FormData","append","post","headers","data","errorMessage","request","startIcon","UploadFileIcon","downloadTranscript","element","document","createElement","Blob","href","download","body","appendChild","removeChild","DownloadIcon","mt","info","light","align","warning","AuthDialogContent","isMainDialogOpen","closeMainDialog","switchBetweenDialogs","isSecondaryDialogOpen","closeSecondaryDialog","renderActiveFormComponent"],"sourceRoot":""}