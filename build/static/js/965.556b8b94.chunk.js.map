{"version":3,"file":"static/js/965.556b8b94.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Schedule.js","../node_modules/@mui/icons-material/esm/Send.js","content/applications/Projects/components/ProjectStatusManager.js","content/applications/Projects/IndividualProjectPage.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/ArrowBack.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2M12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n}, \"1\")], 'Schedule');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Chip,\r\n  Alert,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport {\r\n  CheckCircle as ApprovedIcon,\r\n  Schedule as PendingIcon,\r\n  Cancel as RejectedIcon,\r\n  Edit as DraftIcon,\r\n  Send as SubmitIcon,\r\n  Info as InfoIcon\r\n} from '@mui/icons-material';\r\nimport { projectService } from 'src/services/projectService';\r\n\r\nconst ProjectStatusManager = ({ project, onStatusUpdate }) => {\r\n  const [openSubmitDialog, setOpenSubmitDialog] = useState(false);\r\n  const [submitReason, setSubmitReason] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return <ApprovedIcon sx={{ color: 'green' }} />;\r\n      case 'pending':\r\n        return <PendingIcon sx={{ color: 'orange' }} />;\r\n      case 'rejected':\r\n        return <RejectedIcon sx={{ color: 'red' }} />;\r\n      case 'draft':\r\n        return <DraftIcon sx={{ color: 'gray' }} />;\r\n      default:\r\n        return <InfoIcon sx={{ color: 'black' }} />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return 'success';\r\n      case 'pending':\r\n        return 'warning';\r\n      case 'rejected':\r\n        return 'error';\r\n      case 'draft':\r\n        return 'default';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusDescription = (status) => {\r\n    switch (status) {\r\n      case 'approved':\r\n        return 'Your project has been approved and is now publicly available.';\r\n      case 'pending':\r\n        return 'Your project is currently under review by our team.';\r\n      case 'rejected':\r\n        return 'Your project was not approved. Please review the feedback and resubmit.';\r\n      case 'draft':\r\n        return 'Your project is in draft mode. Submit it for review when ready.';\r\n      default:\r\n        return 'Unknown status.';\r\n    }\r\n  };\r\n\r\n  const handleSubmitForReview = async () => {\r\n    if (!submitReason.trim()) {\r\n      setError('Please provide a reason for submission.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      \r\n      await projectService.submitForReview(project.id, {\r\n        reason: submitReason,\r\n        status: 'pending'\r\n      });\r\n      \r\n      setOpenSubmitDialog(false);\r\n      setSubmitReason('');\r\n      onStatusUpdate && onStatusUpdate();\r\n    } catch (error) {\r\n      console.error('Error submitting project for review:', error);\r\n      setError(error.response?.data?.error || 'Failed to submit project for review.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const canSubmitForReview = project.status === 'draft' || project.status === 'rejected';\r\n\r\n  return (\r\n    <Card sx={{ mb: 3 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\r\n          Project Status\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n          {getStatusIcon(project.status)}\r\n          <Chip\r\n            label={project.status.charAt(0).toUpperCase() + project.status.slice(1)}\r\n            color={getStatusColor(project.status)}\r\n            variant=\"outlined\"\r\n          />\r\n        </Box>\r\n        \r\n        <Typography variant=\"body2\" sx={{ mb: 3, color: 'black' }}>\r\n          {getStatusDescription(project.status)}\r\n        </Typography>\r\n\r\n        {project.status === 'pending' && (\r\n          <Alert severity=\"info\" sx={{ mb: 2, color: 'black' }}>\r\n            Review typically takes 1-3 business days. You'll be notified once the review is complete.\r\n          </Alert>\r\n        )}\r\n\r\n        {project.status === 'rejected' && project.rejection_reason && (\r\n          <Alert severity=\"error\" sx={{ mb: 2, color: 'black' }}>\r\n            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n              <strong>Rejection Reason:</strong> {project.rejection_reason}\r\n            </Typography>\r\n          </Alert>\r\n        )}\r\n\r\n        {canSubmitForReview && (\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<SubmitIcon />}\r\n            onClick={() => setOpenSubmitDialog(true)}\r\n            sx={{ backgroundColor: 'black', color: 'white' }}\r\n          >\r\n            Submit for Review\r\n          </Button>\r\n        )}\r\n\r\n        {project.status === 'approved' && !project.is_public && (\r\n          <Alert severity=\"success\" sx={{ mt: 2, color: 'black' }}>\r\n            Your project is approved! You can now make it public in the project settings.\r\n          </Alert>\r\n        )}\r\n      </CardContent>\r\n\r\n      {/* Submit for Review Dialog */}\r\n      <Dialog\r\n        open={openSubmitDialog}\r\n        onClose={() => setOpenSubmitDialog(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle sx={{ color: 'black' }}>\r\n          Submit Project for Review\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Typography variant=\"body2\" sx={{ mb: 2, color: 'black' }}>\r\n            Please provide a brief description of your project and why it should be approved:\r\n          </Typography>\r\n          <TextField\r\n            fullWidth\r\n            multiline\r\n            rows={4}\r\n            label=\"Submission Reason\"\r\n            value={submitReason}\r\n            onChange={(e) => setSubmitReason(e.target.value)}\r\n            placeholder=\"Describe your project and its value to the community...\"\r\n            error={!!error}\r\n            helperText={error}\r\n            sx={{\r\n              '& .MuiInputBase-root': {\r\n                color: 'black',\r\n                '& fieldset': { borderColor: 'black' }\r\n              },\r\n              '& .MuiInputLabel-root': {\r\n                color: 'black'\r\n              }\r\n            }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button \r\n            onClick={() => setOpenSubmitDialog(false)}\r\n            sx={{ color: 'black' }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmitForReview}\r\n            variant=\"contained\"\r\n            disabled={loading}\r\n            sx={{ backgroundColor: 'black', color: 'white' }}\r\n          >\r\n            {loading ? 'Submitting...' : 'Submit for Review'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectStatusManager; ","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n    Alert,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    LinearProgress,\r\n    Snackbar,\r\n    Typography\r\n} from '@mui/material';\r\nimport {\r\n    ArrowBack as BackIcon,\r\n    PlayArrow as PlayIcon,\r\n    ShoppingCart as BuyIcon,\r\n    Star as StarIcon,\r\n    TrendingUp as TrendingIcon,\r\n    MonetizationOn as RevenueIcon,\r\n    Visibility as ViewIcon,\r\n    Timer as TimerIcon,\r\n    Memory as MemoryIcon,\r\n    Storage as StorageIcon,\r\n    Speed as SpeedIcon,\r\n    CheckCircle as CheckIcon,\r\n    Info as InfoIcon,\r\n    Code as CodeIcon,\r\n    Description as DescriptionIcon\r\n} from '@mui/icons-material';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport { projectService } from 'src/services/projectService';\r\nimport ProjectDetails from './components/ProjectDetails';\r\nimport ProjectStatusManager from './components/ProjectStatusManager';\r\n\r\nconst IndividualProjectPage = () => {\r\n    const { projectId } = useParams();\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    \r\n    const [project, setProject] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadProject();\r\n    }, [projectId]);\r\n\r\n    const loadProject = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await projectService.getProject(projectId);\r\n            setProject(response.data);\r\n            \r\n            // Track view\r\n            await projectService.trackProjectView(projectId);\r\n        } catch (error) {\r\n            console.error('Error loading project:', error);\r\n            setError('Failed to load project. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleRunProject = () => {\r\n        navigate(`/project/${projectId}/run`);\r\n    };\r\n\r\n    const handleBuyProject = async (purchaseData) => {\r\n        try {\r\n            await projectService.buyProject(projectId, purchaseData);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Project purchased successfully!',\r\n                severity: 'success'\r\n            });\r\n            // Reload project to update purchase status\r\n            loadProject();\r\n        } catch (error) {\r\n            console.error('Error buying project:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: error.response?.data?.error || 'Failed to purchase project',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleViewPublic = () => {\r\n        if (project.is_public) {\r\n            navigate(`/project/public/${projectId}`);\r\n        } else {\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'This project is not public',\r\n                severity: 'warning'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleCollaboration = () => {\r\n        navigate(`/projects/${projectId}/collaboration`);\r\n    };\r\n\r\n    const showSnackbar = (message, severity = 'success') => {\r\n        setSnackbar({\r\n            open: true,\r\n            message,\r\n            severity\r\n        });\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <Box sx={{ mt: 4, textAlign: 'center' }}>\r\n                    <LinearProgress sx={{ mb: 2 }} />\r\n                    <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                        Loading project...\r\n                    </Typography>\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <Box sx={{ mt: 4 }}>\r\n                    <Alert severity=\"error\" sx={{ color: 'black' }}>\r\n                        {error}\r\n                    </Alert>\r\n                    <Button\r\n                        startIcon={<BackIcon />}\r\n                        onClick={() => navigate('/projects')}\r\n                        sx={{ mt: 2, color: 'black' }}\r\n                    >\r\n                        Back to Projects\r\n                    </Button>\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (!project) {\r\n        return (\r\n            <Container maxWidth=\"lg\">\r\n                <Box sx={{ mt: 4 }}>\r\n                    <Alert severity=\"warning\" sx={{ color: 'black' }}>\r\n                        Project not found\r\n                    </Alert>\r\n                    <Button\r\n                        startIcon={<BackIcon />}\r\n                        onClick={() => navigate('/projects')}\r\n                        sx={{ mt: 2, color: 'black' }}\r\n                    >\r\n                        Back to Projects\r\n                    </Button>\r\n                </Box>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    const isOwner = project.owner.id === user?.id;\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{project.title} - OneDollarAI</title>\r\n            </Helmet>\r\n\r\n            <Container maxWidth=\"lg\">\r\n                {/* Back Button */}\r\n                <Box sx={{ mt: 3, mb: 2 }}>\r\n                    <Button\r\n                        startIcon={<BackIcon />}\r\n                        onClick={() => navigate('/projects')}\r\n                        sx={{ color: 'black' }}\r\n                    >\r\n                        Back to Projects\r\n                    </Button>\r\n                </Box>\r\n\r\n                {/* Project Status Manager (for owners) */}\r\n                {isOwner && (\r\n                    <ProjectStatusManager\r\n                        project={project}\r\n                        onStatusUpdate={loadProject}\r\n                    />\r\n                )}\r\n\r\n                {/* Project Details */}\r\n                <ProjectDetails\r\n                    project={project}\r\n                    onClose={() => navigate('/projects')}\r\n                    onRun={handleRunProject}\r\n                    onBuy={handleBuyProject}\r\n                    onViewPublic={handleViewPublic}\r\n                    onCollaboration={handleCollaboration}\r\n                    isOwner={isOwner}\r\n                />\r\n\r\n                {/* Snackbar for notifications */}\r\n                <Snackbar\r\n                    open={snackbar.open}\r\n                    autoHideDuration={6000}\r\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                >\r\n                    <Alert\r\n                        onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                        severity={snackbar.severity}\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {snackbar.message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IndividualProjectPage; ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');"],"names":["createSvgIcon","_jsx","d","_ref","project","onStatusUpdate","openSubmitDialog","setOpenSubmitDialog","useState","submitReason","setSubmitReason","loading","setLoading","error","setError","canSubmitForReview","status","_jsxs","Card","sx","mb","children","CardContent","Typography","variant","gutterBottom","color","Box","display","alignItems","gap","ApprovedIcon","PendingIcon","RejectedIcon","DraftIcon","InfoIcon","getStatusIcon","Chip","label","charAt","toUpperCase","slice","getStatusColor","getStatusDescription","Alert","severity","rejection_reason","Button","startIcon","SubmitIcon","onClick","backgroundColor","is_public","mt","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","TextField","multiline","rows","value","onChange","e","target","placeholder","helperText","borderColor","DialogActions","async","trim","projectService","submitForReview","id","reason","_error$response","_error$response$data","console","response","data","disabled","IndividualProjectPage","projectId","useParams","navigate","useNavigate","user","useAuth","setProject","snackbar","setSnackbar","message","useEffect","loadProject","getProject","trackProjectView","Container","textAlign","LinearProgress","BackIcon","isOwner","owner","_Fragment","Helmet","title","ProjectStatusManager","ProjectDetails","onRun","handleRunProject","onBuy","buyProject","purchaseData","onViewPublic","handleViewPublic","onCollaboration","handleCollaboration","Snackbar","autoHideDuration","width"],"sourceRoot":""}