{"version":3,"file":"static/js/220.77dbe6bd.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Cancel.js","../node_modules/@mui/icons-material/esm/Edit.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/material/ListItemAvatar/listItemAvatarClasses.js","../node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js","../node_modules/@mui/icons-material/esm/Publish.js","content/applications/Projects/ProjectCollaboration.js","services/projectService.js","../node_modules/@mui/icons-material/esm/ArrowBack.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2m5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12z\"\n}), 'Cancel');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemAvatar', slot);\n}\nconst listItemAvatarClasses = generateUtilityClasses('MuiListItemAvatar', ['root', 'alignItemsFlexStart']);\nexport default listItemAvatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from '../List/ListContext';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getListItemAvatarUtilityClass } from './listItemAvatarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  flexShrink: 0\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 4v2h14V4zm0 10h4v6h6v-6h4l-7-7z\"\n}), 'Publish');","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport {\r\n    Alert,\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Chip,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Paper,\r\n    Snackbar,\r\n    Tab,\r\n    Tabs,\r\n    TextField,\r\n    Typography,\r\n    styled,\r\n    MenuItem\r\n} from '@mui/material';\r\nimport {\r\n    ArrowBack as BackIcon,\r\n    Add as AddIcon,\r\n    CheckCircle as ApproveIcon,\r\n    Cancel as RejectIcon,\r\n    Edit as EditIcon,\r\n    Person as PersonIcon,\r\n    Visibility as ViewIcon,\r\n    Publish as PublishIcon\r\n} from '@mui/icons-material';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useAuth } from 'src/contexts/AuthContext';\r\nimport { projectService } from 'src/services/projectService';\r\n\r\nconst RootWrapper = styled(Box)(({ theme }) => ({\r\n    display: \"flex\",\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    minHeight: `calc(100dvh - ${theme.header.mobileHeight})`,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n        minHeight: `calc(100dvh - ${theme.header.height})`\r\n    }\r\n}));\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => (\r\n    <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`collaboration-tabpanel-${index}`}\r\n        aria-labelledby={`collaboration-tab-${index}`}\r\n        {...other}\r\n    >\r\n        {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </div>\r\n);\r\n\r\nconst ProjectCollaboration = () => {\r\n    const { projectId } = useParams();\r\n    const navigate = useNavigate();\r\n    const { user } = useAuth();\r\n    \r\n    const [project, setProject] = useState(null);\r\n    const [collaborators, setCollaborators] = useState([]);\r\n    const [versions, setVersions] = useState([]);\r\n    const [pendingVersions, setPendingVersions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [tabValue, setTabValue] = useState(0);\r\n    const [addCollaboratorDialog, setAddCollaboratorDialog] = useState(false);\r\n    const [newCollaborator, setNewCollaborator] = useState({ email: '', role: 'editor' });\r\n    const [submitVersionDialog, setSubmitVersionDialog] = useState(false);\r\n    const [newVersion, setNewVersion] = useState({ content: '', usage_instructions: '', examples: [] });\r\n    const [selectedVersion, setSelectedVersion] = useState(null);\r\n    const [rejectDialog, setRejectDialog] = useState(false);\r\n    const [rejectReason, setRejectReason] = useState('');\r\n    const [snackbar, setSnackbar] = useState({\r\n        open: false,\r\n        message: '',\r\n        severity: 'success'\r\n    });\r\n\r\n    useEffect(() => {\r\n        loadProjectData();\r\n    }, [projectId]);\r\n\r\n    const loadProjectData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            \r\n            // Check if user is admin and use appropriate endpoint\r\n            const isAdmin = user?.is_staff || user?.is_superuser;\r\n            const projectEndpoint = isAdmin \r\n                ? projectService.getProjectAdmin(projectId)\r\n                : projectService.getProject(projectId);\r\n                \r\n            const [projectRes, collaboratorsRes, versionsRes, pendingRes] = await Promise.all([\r\n                projectEndpoint,\r\n                projectService.getCollaborators(projectId),\r\n                projectService.getProjectVersions(projectId),\r\n                projectService.getPendingVersions(projectId)\r\n            ]);\r\n            \r\n            setProject(projectRes.data);\r\n            setCollaborators(collaboratorsRes.data);\r\n            setVersions(versionsRes.data);\r\n            setPendingVersions(pendingRes.data);\r\n        } catch (error) {\r\n            console.error('Error loading project data:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to load project data',\r\n                severity: 'error'\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddCollaborator = async () => {\r\n        try {\r\n            // Check if user is admin and use appropriate endpoint\r\n            const isAdmin = user?.is_staff || user?.is_superuser;\r\n            if (isAdmin) {\r\n                await projectService.addCollaboratorAdmin(projectId, newCollaborator);\r\n            } else {\r\n                await projectService.addCollaborator(projectId, newCollaborator);\r\n            }\r\n            \r\n            setAddCollaboratorDialog(false);\r\n            setNewCollaborator({ email: '', role: 'editor' });\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Collaborator added successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error adding collaborator:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: error.response?.data?.error || 'Failed to add collaborator',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRemoveCollaborator = async (userId) => {\r\n        try {\r\n            // Check if user is admin and use appropriate endpoint\r\n            const isAdmin = user?.is_staff || user?.is_superuser;\r\n            if (isAdmin) {\r\n                await projectService.removeCollaboratorAdmin(projectId, userId);\r\n            } else {\r\n                await projectService.removeCollaborator(projectId, userId);\r\n            }\r\n            \r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Collaborator removed successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error removing collaborator:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to remove collaborator',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleSubmitVersion = async () => {\r\n        try {\r\n            await projectService.submitVersionForReview(projectId, newVersion);\r\n            setSubmitVersionDialog(false);\r\n            setNewVersion({ content: '', usage_instructions: '', examples: [] });\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version submitted for review successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error submitting version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: error.response?.data?.error || 'Failed to submit version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleApproveVersion = async (versionId) => {\r\n        try {\r\n            // Check if user is admin and use appropriate endpoint\r\n            const isAdmin = user?.is_staff || user?.is_superuser;\r\n            if (isAdmin) {\r\n                await projectService.approveVersionAdmin(projectId, versionId);\r\n            } else {\r\n                await projectService.approveProjectVersion(projectId, versionId);\r\n            }\r\n            \r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version approved successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error approving version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to approve version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleRejectVersion = async (versionId) => {\r\n        try {\r\n            // Check if user is admin and use appropriate endpoint\r\n            const isAdmin = user?.is_staff || user?.is_superuser;\r\n            if (isAdmin) {\r\n                await projectService.rejectVersionAdmin(projectId, versionId, rejectReason);\r\n            } else {\r\n                await projectService.rejectProjectVersion(projectId, versionId, rejectReason);\r\n            }\r\n            \r\n            setRejectDialog(false);\r\n            setRejectReason('');\r\n            setSelectedVersion(null);\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version rejected successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error rejecting version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to reject version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const handlePromoteVersion = async (versionId) => {\r\n        try {\r\n            await projectService.promoteVersionToPublic(projectId, versionId);\r\n            loadProjectData();\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Version promoted to public successfully!',\r\n                severity: 'success'\r\n            });\r\n        } catch (error) {\r\n            console.error('Error promoting version:', error);\r\n            setSnackbar({\r\n                open: true,\r\n                message: 'Failed to promote version',\r\n                severity: 'error'\r\n            });\r\n        }\r\n    };\r\n\r\n    const getRoleColor = (role) => {\r\n        switch (role) {\r\n            case 'admin': return 'error';\r\n            case 'editor': return 'warning';\r\n            default: return 'default';\r\n        }\r\n    };\r\n\r\n    const getVersionTypeIcon = (type) => {\r\n        return type === 'public' ? <ViewIcon /> : <EditIcon />;\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <RootWrapper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <Typography sx={{ color: 'black' }}>Loading collaboration data...</Typography>\r\n                </Box>\r\n            </RootWrapper>\r\n        );\r\n    }\r\n\r\n    if (!project) {\r\n        return (\r\n            <RootWrapper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <Typography sx={{ color: 'black' }}>Project not found</Typography>\r\n                </Box>\r\n            </RootWrapper>\r\n        );\r\n    }\r\n\r\n    const isOwner = project.owner.id === user?.id;\r\n    const isCollaborator = collaborators.some(collab => collab.user.id === user?.id);\r\n    const isAdmin = user?.is_staff || user?.is_superuser;\r\n\r\n    if (!isOwner && !isCollaborator && !isAdmin) {\r\n        return (\r\n            <RootWrapper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%' }}>\r\n                    <Typography sx={{ color: 'black' }}>You don't have access to this project's collaboration features</Typography>\r\n                </Box>\r\n            </RootWrapper>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Collaboration - {project.title} - OneDollarAI</title>\r\n            </Helmet>\r\n\r\n            <RootWrapper>\r\n                <Container maxWidth=\"lg\">\r\n                    {/* Header */}\r\n                    <Box sx={{ mt: 3, mb: 4 }}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\r\n                            <IconButton\r\n                                onClick={() => navigate(`/project/${projectId}`)}\r\n                                sx={{ color: 'black' }}\r\n                            >\r\n                                <BackIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h4\" component=\"h1\" sx={{ color: 'black' }}>\r\n                                Collaboration - {project.title}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    {/* Tabs */}\r\n                    <Card>\r\n                        {/* <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                            <Tabs\r\n                                value={tabValue}\r\n                                onChange={(e, newValue) => setTabValue(newValue)}\r\n                                sx={{\r\n                                    '& .MuiTab-root': {\r\n                                        color: 'black',\r\n                                        '&.Mui-selected': {\r\n                                            color: 'black'\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Tab label=\"Collaborators\" />\r\n                                <Tab label=\"Versions\" />\r\n                                <Tab label=\"Pending Review\" />\r\n                            </Tabs>\r\n                        </Box> */}\r\n\r\n                        {/* Collaborators Tab */}\r\n                        <TabPanel value={tabValue} index={0}>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                                <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                    Project Collaborators\r\n                                </Typography>\r\n                                {isOwner && (\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        startIcon={<AddIcon />}\r\n                                        onClick={() => setAddCollaboratorDialog(true)}\r\n                                        sx={{\r\n                                            backgroundColor: 'black',\r\n                                            color: 'white',\r\n                                            '&:hover': {\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Add Collaborator\r\n                                    </Button>\r\n                                )}\r\n                            </Box>\r\n\r\n                            <List>\r\n                                {collaborators.map((collaborator) => (\r\n                                    <ListItem\r\n                                        key={collaborator.id}\r\n                                        sx={{\r\n                                            border: 1,\r\n                                            borderColor: 'divider',\r\n                                            borderRadius: 1,\r\n                                            mb: 1\r\n                                        }}\r\n                                        secondaryAction={\r\n                                            isOwner && (\r\n                                                <Button\r\n                                                    color=\"error\"\r\n                                                    onClick={() => handleRemoveCollaborator(collaborator.user.id)}\r\n                                                >\r\n                                                    Remove\r\n                                                </Button>\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar>\r\n                                                <PersonIcon />\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                    <Typography variant=\"body1\" sx={{ color: 'black' }}>\r\n                                                        {collaborator.user.first_name} {collaborator.user.last_name}\r\n                                                    </Typography>\r\n                                                    <Chip\r\n                                                        label={collaborator.role}\r\n                                                        size=\"small\"\r\n                                                        color={getRoleColor(collaborator.role)}\r\n                                                    />\r\n                                                </Box>\r\n                                            }\r\n                                            secondary={\r\n                                                <Box>\r\n                                                    <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                        {collaborator.user.email}\r\n                                                    </Typography>\r\n                                                    <Box sx={{ display: 'flex', gap: 1, mt: 1 }}>\r\n                                                        {collaborator.is_public && (\r\n                                                            <Chip label=\"Public\" size=\"small\" color=\"info\" />\r\n                                                        )}\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            }\r\n                                        />\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </TabPanel>\r\n\r\n                        {/* Versions Tab */}\r\n                        <TabPanel value={tabValue} index={1}>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                                <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                    Project Versions\r\n                                </Typography>\r\n                                {isCollaborator && (\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        startIcon={<AddIcon />}\r\n                                        onClick={() => setSubmitVersionDialog(true)}\r\n                                        sx={{\r\n                                            backgroundColor: 'black',\r\n                                            color: 'white',\r\n                                            '&:hover': {\r\n                                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        Submit New Version\r\n                                    </Button>\r\n                                )}\r\n                            </Box>\r\n\r\n                            <Grid container spacing={2}>\r\n                                {versions.map((version) => (\r\n                                    <Grid item xs={12} md={6} key={version.id}>\r\n                                        <Card>\r\n                                            <CardContent>\r\n                                                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                                                    {getVersionTypeIcon(version.version_type)}\r\n                                                    <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                                        Version {version.version_number} ({version.version_type})\r\n                                                    </Typography>\r\n                                                    {version.is_approved && (\r\n                                                        <Chip\r\n                                                            icon={<ApproveIcon />}\r\n                                                            label=\"Approved\"\r\n                                                            color=\"success\"\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    )}\r\n                                                </Box>\r\n                                                \r\n                                                <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                    Created by: {version.created_by.first_name} {version.created_by.last_name}\r\n                                                </Typography>\r\n                                                \r\n                                                <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                    Created: {formatDistanceToNow(new Date(version.created_at), { addSuffix: true })}\r\n                                                </Typography>\r\n\r\n                                                {version.rejection_reason && (\r\n                                                    <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n                                                        Rejected: {version.rejection_reason}\r\n                                                    </Alert>\r\n                                                )}\r\n\r\n                                                <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\r\n                                                    {isOwner && version.version_type === 'private' && version.is_approved && (\r\n                                                        <Button\r\n                                                            size=\"small\"\r\n                                                            startIcon={<PublishIcon />}\r\n                                                            onClick={() => handlePromoteVersion(version.id)}\r\n                                                            variant=\"outlined\"\r\n                                                        >\r\n                                                            Promote to Public\r\n                                                        </Button>\r\n                                                    )}\r\n                                                    \r\n                                                    {isOwner && !version.is_approved && (\r\n                                                        <>\r\n                                                            <Button\r\n                                                                size=\"small\"\r\n                                                                startIcon={<ApproveIcon />}\r\n                                                                onClick={() => handleApproveVersion(version.id)}\r\n                                                                color=\"success\"\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                Approve\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                size=\"small\"\r\n                                                                startIcon={<RejectIcon />}\r\n                                                                onClick={() => {\r\n                                                                    setSelectedVersion(version);\r\n                                                                    setRejectDialog(true);\r\n                                                                }}\r\n                                                                color=\"error\"\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                Reject\r\n                                                            </Button>\r\n                                                        </>\r\n                                                    )}\r\n                                                </Box>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </TabPanel>\r\n\r\n                        {/* Pending Review Tab */}\r\n                        <TabPanel value={tabValue} index={2}>\r\n                            <Typography variant=\"h6\" sx={{ color: 'black', mb: 3 }}>\r\n                                Pending Review ({pendingVersions.length})\r\n                            </Typography>\r\n\r\n                            {pendingVersions.length === 0 ? (\r\n                                <Alert severity=\"info\">No versions pending review</Alert>\r\n                            ) : (\r\n                                <Grid container spacing={2}>\r\n                                    {pendingVersions.map((version) => (\r\n                                        <Grid item xs={12} key={version.id}>\r\n                                            <Card>\r\n                                                <CardContent>\r\n                                                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 2 }}>\r\n                                                        <EditIcon />\r\n                                                        <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                                                            Version {version.version_number} (Private)\r\n                                                        </Typography>\r\n                                                    </Box>\r\n                                                    \r\n                                                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                        Submitted by: {version.created_by.first_name} {version.created_by.last_name}\r\n                                                    </Typography>\r\n                                                    \r\n                                                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 2 }}>\r\n                                                        Submitted: {formatDistanceToNow(new Date(version.created_at), { addSuffix: true })}\r\n                                                    </Typography>\r\n\r\n                                                    {version.content && (\r\n                                                        <Box sx={{ mb: 2 }}>\r\n                                                            <Typography variant=\"subtitle2\" sx={{ color: 'black', mb: 1 }}>\r\n                                                                Content Preview:\r\n                                                            </Typography>\r\n                                                            <Paper sx={{ p: 2, maxHeight: 200, overflow: 'auto' }}>\r\n                                                                <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                                    {version.content.substring(0, 300)}...\r\n                                                                </Typography>\r\n                                                            </Paper>\r\n                                                        </Box>\r\n                                                    )}\r\n\r\n                                                    {isOwner && (\r\n                                                        <Box sx={{ display: 'flex', gap: 1 }}>\r\n                                                            <Button\r\n                                                                startIcon={<ApproveIcon />}\r\n                                                                onClick={() => handleApproveVersion(version.id)}\r\n                                                                color=\"success\"\r\n                                                                variant=\"contained\"\r\n                                                            >\r\n                                                                Approve\r\n                                                            </Button>\r\n                                                            <Button\r\n                                                                startIcon={<RejectIcon />}\r\n                                                                onClick={() => {\r\n                                                                    setSelectedVersion(version);\r\n                                                                    setRejectDialog(true);\r\n                                                                }}\r\n                                                                color=\"error\"\r\n                                                                variant=\"outlined\"\r\n                                                            >\r\n                                                                Reject\r\n                                                            </Button>\r\n                                                        </Box>\r\n                                                    )}\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        </Grid>\r\n                                    ))}\r\n                                </Grid>\r\n                            )}\r\n                        </TabPanel>\r\n                    </Card>\r\n                </Container>\r\n            </RootWrapper>\r\n\r\n            {/* Add Collaborator Dialog */}\r\n            <Dialog\r\n                open={addCollaboratorDialog}\r\n                onClose={() => setAddCollaboratorDialog(false)}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>Add Collaborator</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        label=\"Email\"\r\n                        value={newCollaborator.email}\r\n                        onChange={(e) => setNewCollaborator({ ...newCollaborator, email: e.target.value })}\r\n                        sx={{ mb: 2, mt: 1 }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        select\r\n                        label=\"Role\"\r\n                        value={newCollaborator.role}\r\n                        onChange={(e) => setNewCollaborator({ ...newCollaborator, role: e.target.value })}\r\n                        sx={{ mb: 2 }}\r\n                    >\r\n                        <MenuItem value=\"editor\"\r\n                            sx={{ color: 'black !important',\r\n                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                    color: 'black !important'\r\n                            }}}\r\n                        >Editor</MenuItem>\r\n                        <MenuItem value=\"admin\"\r\n                            sx={{ color: 'black !important',\r\n                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                    color: 'black !important'\r\n                            }}}\r\n                        >Admin</MenuItem>\r\n                    </TextField>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setAddCollaboratorDialog(false)} sx={{ color: 'black' }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleAddCollaborator}\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            backgroundColor: 'black',\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                            }\r\n                        }}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Submit Version Dialog */}\r\n            <Dialog\r\n                open={submitVersionDialog}\r\n                onClose={() => setSubmitVersionDialog(false)}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>Submit New Version</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={4}\r\n                        label=\"Content\"\r\n                        value={newVersion.content}\r\n                        onChange={(e) => setNewVersion({ ...newVersion, content: e.target.value })}\r\n                        sx={{ mb: 2, mt: 1 }}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={3}\r\n                        label=\"Usage Instructions\"\r\n                        value={newVersion.usage_instructions}\r\n                        onChange={(e) => setNewVersion({ ...newVersion, usage_instructions: e.target.value })}\r\n                        sx={{ mb: 2 }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setSubmitVersionDialog(false)} sx={{ color: 'black' }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleSubmitVersion}\r\n                        variant=\"contained\"\r\n                        sx={{\r\n                            backgroundColor: 'black',\r\n                            color: 'white',\r\n                            '&:hover': {\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)'\r\n                            }\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Reject Version Dialog */}\r\n            <Dialog\r\n                open={rejectDialog}\r\n                onClose={() => setRejectDialog(false)}\r\n                maxWidth=\"sm\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>Reject Version</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        rows={3}\r\n                        label=\"Rejection Reason\"\r\n                        value={rejectReason}\r\n                        onChange={(e) => setRejectReason(e.target.value)}\r\n                        sx={{ mt: 1 }}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setRejectDialog(false)} sx={{ color: 'black' }}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        onClick={() => handleRejectVersion(selectedVersion?.id)}\r\n                        color=\"error\"\r\n                        variant=\"contained\"\r\n                    >\r\n                        Reject\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={snackbar.open}\r\n                autoHideDuration={6000}\r\n                onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n            >\r\n                <Alert\r\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\r\n                    severity={snackbar.severity}\r\n                    sx={{ width: '100%' }}\r\n                >\r\n                    {snackbar.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectCollaboration; ","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Function to fetch CSRF token if needed\r\nconst fetchCSRFToken = async () => {\r\n  try {\r\n    // Check if CSRF token already exists\r\n    if (!Cookies.get('csrftoken')) {\r\n      console.log('No CSRF token found, fetching a new one...');\r\n      const response = await axios.get(`${API_BASE_URL}/api/get_csrf_token/`, {\r\n        withCredentials: true\r\n      });\r\n      if (response.status === 200) {\r\n        const token = Cookies.get('csrftoken');\r\n        console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\r\n      } else {\r\n        console.warn('Failed to fetch CSRF token:', response.status);\r\n      }\r\n    } else {\r\n      console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching CSRF token:', error);\r\n    // Continue without CSRF token - backend will handle exempt views\r\n  }\r\n};\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: `${API_BASE_URL}/api`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Enable sending cookies with requests\r\n});\r\n\r\n// Add request interceptor to include auth token and CSRF token\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Fetch CSRF token if needed\r\n    await fetchCSRFToken();\r\n    \r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add CSRF token to headers\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('accessToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const projectService = {\r\n  // Get all projects\r\n  getAllProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get user's projects\r\n  getMyProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/my_projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search projects\r\n  searchProjects: async (query, params = {}) => {\r\n    const response = await api.get('/projects/search/', {\r\n      params: { q: query, ...params }\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get single project\r\n  getProject: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Create new project\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects/', projectData);\r\n    return response;\r\n  },\r\n\r\n  // Update project\r\n  updateProject: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project\r\n  deleteProject: async (projectId) => {\r\n    const response = await api.delete(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Run project\r\n  runProject: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/run/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view\r\n  trackProjectView: async (projectId) => {\r\n    const response = await api.post(`/projects/${projectId}/view/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project analytics\r\n  getProjectAnalytics: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/analytics/`);\r\n    return response;\r\n  },\r\n\r\n  // Get collaborators\r\n  getCollaborators: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/collaborators/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator\r\n  addCollaborator: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/${projectId}/add_collaborator/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator\r\n  removeCollaborator: async (projectId, userId) => {\r\n    const response = await api.post(`/projects/${projectId}/remove_collaborator/`, { user_id: userId });\r\n    return response;\r\n  },\r\n\r\n  // Submit version for review (for collaborators)\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Promote version to public\r\n  promoteVersionToPublic: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/promote_to_public/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project versions\r\n  getProjectVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Create project version\r\n  createProjectVersion: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Update project version\r\n  updateProjectVersion: async (projectId, versionId, versionData) => {\r\n    const response = await api.put(`/projects/${projectId}/versions/${versionId}/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project version\r\n  deleteProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.delete(`/projects/${projectId}/versions/${versionId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve project version\r\n  approveProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project version\r\n  rejectProjectVersion: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Analyze computing resources\r\n  analyzeComputingResources: async (projectId, code) => {\r\n    const response = await api.post(`/projects/${projectId}/computing-resources/`, { code });\r\n    return response;\r\n  },\r\n\r\n  // Get computing resources\r\n  getComputingResources: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/computing-resources/`);\r\n    return response;\r\n  },\r\n\r\n  // Update computing resources\r\n  updateComputingResources: async (projectId, resourceId, resourceData) => {\r\n    const response = await api.put(`/projects/${projectId}/computing-resources/${resourceId}/`, resourceData);\r\n    return response;\r\n  },\r\n\r\n  // Admin functions\r\n  // Get all projects for admin\r\n  getAllProjectsAdmin: async (params = {}) => {\r\n    const response = await api.get('/projects/admin/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Delete project as admin\r\n  deleteProjectAdmin: async (projectId) => {\r\n    const response = await api.delete(`/projects/admin/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project as admin\r\n  getProjectAdmin: async (projectId) => {\r\n    const response = await api.get(`/projects/admin/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get admin analytics\r\n  getAdminAnalytics: async () => {\r\n    const response = await api.get('/projects/admin/projects/analytics/');\r\n    return response;\r\n  },\r\n\r\n  // Approve project\r\n  approveProject: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project\r\n  rejectProject: async (projectId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Update project as admin\r\n  updateProjectAdmin: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/admin/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Run project as admin\r\n  runProjectAdmin: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/run_project/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view as admin\r\n  trackProjectViewAdmin: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/track_view/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator as admin\r\n  addCollaboratorAdmin: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/add_collaborator_admin/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator as admin\r\n  removeCollaboratorAdmin: async (projectId, userId) => {\r\n    const response = await api.delete(`/projects/admin/projects/${projectId}/remove_collaborator_admin/`, { data: { user_id: userId } });\r\n    return response;\r\n  },\r\n\r\n  // Approve version as admin\r\n  approveVersionAdmin: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve_version/`, { version_id: versionId });\r\n    return response;\r\n  },\r\n\r\n  // Reject version as admin\r\n  rejectVersionAdmin: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject_version/`, { version_id: versionId, reason });\r\n    return response;\r\n  },\r\n\r\n  // Get project usage statistics\r\n  getProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user's project usage\r\n  getUserProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project\r\n  getUserUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project (admin version)\r\n  getUserUsageAdmin: async (projectId) => {\r\n    const response = await api.get(`/projects/admin/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve a version\r\n  approveVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject a version\r\n  rejectVersion: async (projectId, versionId, reason) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Submit a new version for review\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Submit project for review\r\n  submitForReview: async (projectId, reviewData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_for_review/`, reviewData);\r\n    return response;\r\n  },\r\n\r\n  // Get public project by ID\r\n  getPublicProject: async (projectId) => {\r\n    const response = await api.get(`/projects/public/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get private project by URL\r\n  getPrivateProject: async (privateUrl) => {\r\n    const response = await api.get(`/projects/private/${privateUrl}/`);\r\n    return response;\r\n  },\r\n\r\n  // Execute code using backend endpoint\r\n  executeCode: async (code, language) => {\r\n    const response = await api.post('/projects/execute-code/', {\r\n      code: code,\r\n      language: language\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search with filters\r\n  advancedSearch: async (filters = {}) => {\r\n    const {\r\n      query = '',\r\n      projectType = '',\r\n      language = '',\r\n      sortBy = 'created_at',\r\n      sortOrder = 'desc'\r\n    } = filters;\r\n\r\n    const params = {\r\n      q: query,\r\n      type: projectType,\r\n      language: language,\r\n      sort_by: sortBy,\r\n      sort_order: sortOrder\r\n    };\r\n\r\n    const response = await api.get('/projects/search/', { params });\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default projectService;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');"],"names":["createSvgIcon","_jsx","d","getListItemAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListItemAvatarRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","_ref","_extends","minWidth","flexShrink","marginTop","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","context","ListContext","classes","slots","composeClasses","useUtilityClasses","clsx","RootWrapper","Box","theme","display","width","flexDirection","minHeight","header","mobileHeight","breakpoints","up","height","TabPanel","_ref2","children","value","index","role","hidden","id","sx","p","ProjectCollaboration","projectId","useParams","navigate","useNavigate","user","useAuth","project","setProject","useState","collaborators","setCollaborators","versions","setVersions","pendingVersions","setPendingVersions","loading","setLoading","tabValue","setTabValue","addCollaboratorDialog","setAddCollaboratorDialog","newCollaborator","setNewCollaborator","email","submitVersionDialog","setSubmitVersionDialog","newVersion","setNewVersion","content","usage_instructions","examples","selectedVersion","setSelectedVersion","rejectDialog","setRejectDialog","rejectReason","setRejectReason","snackbar","setSnackbar","open","message","severity","useEffect","loadProjectData","async","projectEndpoint","is_staff","is_superuser","projectService","getProjectAdmin","getProject","projectRes","collaboratorsRes","versionsRes","pendingRes","Promise","all","getCollaborators","getProjectVersions","getPendingVersions","data","error","console","handleApproveVersion","approveVersionAdmin","versionId","approveProjectVersion","getRoleColor","justifyContent","Typography","color","isOwner","owner","isCollaborator","some","collab","isAdmin","_jsxs","_Fragment","Helmet","title","Container","maxWidth","mt","mb","gap","IconButton","onClick","BackIcon","variant","component","Card","Button","startIcon","AddIcon","backgroundColor","List","map","collaborator","ListItem","border","borderColor","borderRadius","secondaryAction","removeCollaboratorAdmin","userId","removeCollaborator","handleRemoveCollaborator","ListItemAvatar","Avatar","PersonIcon","ListItemText","primary","first_name","last_name","Chip","label","size","secondary","is_public","Grid","container","spacing","version","item","xs","md","CardContent","type","version_type","ViewIcon","EditIcon","version_number","is_approved","icon","ApproveIcon","created_by","formatDistanceToNow","Date","created_at","addSuffix","rejection_reason","Alert","flexWrap","PublishIcon","promoteVersionToPublic","handlePromoteVersion","RejectIcon","length","Paper","maxHeight","overflow","substring","Dialog","onClose","fullWidth","DialogTitle","DialogContent","TextField","onChange","e","target","select","MenuItem","DialogActions","addCollaboratorAdmin","addCollaborator","_error$response","_error$response$data","response","multiline","rows","submitVersionForReview","_error$response2","_error$response2$data","rejectVersionAdmin","rejectProjectVersion","handleRejectVersion","Snackbar","autoHideDuration","API_BASE_URL","process","api","axios","create","baseURL","headers","withCredentials","interceptors","request","use","Cookies","get","log","status","token","warn","fetchCSRFToken","localStorage","getItem","config","Authorization","csrfToken","reject","removeItem","window","location","href","getAllProjects","params","arguments","undefined","getMyProjects","searchProjects","query","q","createProject","post","projectData","updateProject","put","deleteProject","delete","runProject","inputData","trackProjectView","getProjectAnalytics","collaboratorData","user_id","versionData","createProjectVersion","updateProjectVersion","deleteProjectVersion","reason","analyzeComputingResources","code","getComputingResources","updateComputingResources","resourceId","resourceData","getAllProjectsAdmin","deleteProjectAdmin","getAdminAnalytics","approveProject","rejectProject","updateProjectAdmin","runProjectAdmin","trackProjectViewAdmin","version_id","getProjectUsage","getUserProjectUsage","getUserUsage","getUserUsageAdmin","approveVersion","rejectVersion","submitForReview","reviewData","getPublicProject","getPrivateProject","privateUrl","executeCode","language","advancedSearch","filters","projectType","sortBy","sortOrder","sort_by","sort_order"],"sourceRoot":""}