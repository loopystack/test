{"version":3,"file":"static/js/332.a9a6d950.chunk.js","mappings":"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","sources":["content/applications/Projects/components/ComputingResourceAnalysis.js","content/applications/Projects/components/ProjectUsageTracker.js","content/applications/Projects/components/ProjectDetails.js","services/projectService.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    LinearProgress,\r\n    Grid,\r\n    Chip,\r\n    Alert,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    IconButton,\r\n    Tooltip\r\n} from '@mui/material';\r\nimport {\r\n    Memory as MemoryIcon,\r\n    Speed as SpeedIcon,\r\n    Storage as StorageIcon,\r\n    Timer as TimerIcon,\r\n    MonetizationOn as CostIcon,\r\n    Info as InfoIcon,\r\n    Refresh as RefreshIcon,\r\n    TrendingUp as TrendingIcon,\r\n    Warning as WarningIcon,\r\n    CheckCircle as CheckIcon\r\n} from '@mui/icons-material';\r\nimport { projectService } from 'src/services/projectService';\r\n\r\nconst ComputingResourceAnalysis = ({ project, onUpdate }) => {\r\n    const [resources, setResources] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        loadResources();\r\n    }, [project.id]);\r\n\r\n    const loadResources = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await projectService.getComputingResources(project.id);\r\n            setResources(response.data);\r\n        } catch (error) {\r\n            console.error('Error loading computing resources:', error);\r\n            setError('Failed to load computing resources');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const analyzeResources = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            const response = await projectService.analyzeComputingResources(project.id, project.latest_version?.content || '');\r\n            setResources(response.data);\r\n            if (onUpdate) onUpdate();\r\n        } catch (error) {\r\n            console.error('Error analyzing resources:', error);\r\n            setError('Failed to analyze computing resources');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const calculateMonthlyCost = () => {\r\n        if (!resources) return 0;\r\n        const monthlyServerCost = 20; // $20/month server cost\r\n        const cpuPercentage = resources.cpu_usage || 0;\r\n        const memoryPercentage = resources.memory_usage || 0;\r\n        const avgUsage = (cpuPercentage + memoryPercentage) / 2;\r\n        return (avgUsage / 100) * monthlyServerCost;\r\n    };\r\n\r\n    const getResourceIntensityColor = (intensity) => {\r\n        switch (intensity) {\r\n            case 'low':\r\n                return 'success';\r\n            case 'medium':\r\n                return 'warning';\r\n            case 'high':\r\n                return 'error';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    const getComplexityLevel = (score) => {\r\n        if (score < 30) return 'Low';\r\n        if (score < 70) return 'Medium';\r\n        return 'High';\r\n    };\r\n\r\n    if (loading && !resources) {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                            Analyzing Computing Resources...\r\n                        </Typography>\r\n                        <LinearProgress />\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Alert severity=\"error\" sx={{ color: 'black' }}>\r\n                        {error}\r\n                    </Alert>\r\n                    <Button\r\n                        startIcon={<RefreshIcon />}\r\n                        onClick={loadResources}\r\n                        sx={{ mt: 2, color: 'black' }}\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                            Computing Resource Analysis\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', gap: 1 }}>\r\n                            <Tooltip title=\"View Detailed Analysis\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setShowDetails(true)}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <InfoIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Re-analyze Resources\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={analyzeResources}\r\n                                    disabled={loading}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    {resources ? (\r\n                        <>\r\n                            <Grid container spacing={3}>\r\n                                {/* Resource Usage */}\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Resource Usage\r\n                                    </Typography>\r\n                                    \r\n                                    <Box sx={{ mb: 3 }}>\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                CPU Usage\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {resources.cpu_usage?.toFixed(1)}%\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <LinearProgress \r\n                                            variant=\"determinate\" \r\n                                            value={Math.min(resources.cpu_usage || 0, 100)} \r\n                                            sx={{ mb: 2 }}\r\n                                        />\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Memory Usage\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {resources.memory_usage?.toFixed(1)} MB\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <LinearProgress \r\n                                            variant=\"determinate\" \r\n                                            value={Math.min((resources.memory_usage || 0) / 10, 100)} \r\n                                            sx={{ mb: 2 }}\r\n                                        />\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Execution Time\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {resources.execution_time?.toFixed(2)}s\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <LinearProgress \r\n                                            variant=\"determinate\" \r\n                                            value={Math.min((resources.execution_time || 0) * 10, 100)} \r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n\r\n                                {/* Cost Analysis */}\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Cost Analysis\r\n                                    </Typography>\r\n                                    \r\n                                    <Box sx={{ mb: 3 }}>\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Cost per Run\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'green', fontWeight: 'bold' }}>\r\n                                                ${resources.estimated_cost_per_run?.toFixed(4)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Monthly Server Cost\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                $20.00\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Your Project's Monthly Cost\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'orange', fontWeight: 'bold' }}>\r\n                                                ${calculateMonthlyCost().toFixed(2)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Per-Use Charge\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                ${project.price_per_use}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    {/* Complexity Score */}\r\n                                    <Box sx={{ mb: 2 }}>\r\n                                        <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\r\n                                            Complexity Score: {resources.complexity_score || 0}/100\r\n                                        </Typography>\r\n                                        <Chip\r\n                                            label={`${getComplexityLevel(resources.complexity_score || 0)} Complexity`}\r\n                                            color={getResourceIntensityColor(resources.resource_intensity)}\r\n                                            size=\"small\"\r\n                                            sx={{ mr: 1 }}\r\n                                        />\r\n                                        <Chip\r\n                                            label={`${resources.resource_intensity} Intensity`}\r\n                                            color={getResourceIntensityColor(resources.resource_intensity)}\r\n                                            size=\"small\"\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* Cost Summary Alert */}\r\n                            <Alert \r\n                                severity=\"info\" \r\n                                sx={{ mt: 2, color: 'black' }}\r\n                                icon={<CostIcon />}\r\n                            >\r\n                                Based on $20/month server cost, your project uses approximately {(calculateMonthlyCost() / 20 * 100).toFixed(1)}% of server resources.\r\n                                {calculateMonthlyCost() > 5 && (\r\n                                    <Typography variant=\"body2\" sx={{ mt: 1, color: 'orange' }}>\r\n                                        <WarningIcon sx={{ fontSize: 16, mr: 0.5, verticalAlign: 'middle' }} />\r\n                                        High resource usage detected. Consider optimizing your code.\r\n                                    </Typography>\r\n                                )}\r\n                            </Alert>\r\n                        </>\r\n                    ) : (\r\n                        <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                            <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\r\n                                No computing resource analysis available\r\n                            </Typography>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                startIcon={<TrendingIcon />}\r\n                                onClick={analyzeResources}\r\n                                disabled={loading}\r\n                                sx={{ backgroundColor: 'black', color: 'white' }}\r\n                            >\r\n                                Analyze Resources\r\n                            </Button>\r\n                        </Box>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Detailed Analysis Dialog */}\r\n            <Dialog\r\n                open={showDetails}\r\n                onClose={() => setShowDetails(false)}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>\r\n                    Detailed Computing Resource Analysis\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {resources && (\r\n                        <Box>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Resource Breakdown\r\n                                    </Typography>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Resource</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Usage</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Percentage</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Status</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <SpeedIcon fontSize=\"small\" />\r\n                                                            CPU Usage\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.cpu_usage?.toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.cpu_usage?.toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.cpu_usage > 70 ? 'High' : resources.cpu_usage > 30 ? 'Medium' : 'Low'}\r\n                                                            color={resources.cpu_usage > 70 ? 'error' : resources.cpu_usage > 30 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <MemoryIcon fontSize=\"small\" />\r\n                                                            Memory Usage\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.memory_usage?.toFixed(1)} MB\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {((resources.memory_usage || 0) / 1000 * 100).toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.memory_usage > 700 ? 'High' : resources.memory_usage > 300 ? 'Medium' : 'Low'}\r\n                                                            color={resources.memory_usage > 700 ? 'error' : resources.memory_usage > 300 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <TimerIcon fontSize=\"small\" />\r\n                                                            Execution Time\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.execution_time?.toFixed(2)}s\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {((resources.execution_time || 0) / 30 * 100).toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.execution_time > 20 ? 'High' : resources.execution_time > 10 ? 'Medium' : 'Low'}\r\n                                                            color={resources.execution_time > 20 ? 'error' : resources.execution_time > 10 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <StorageIcon fontSize=\"small\" />\r\n                                                            Storage Usage\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {resources.storage_usage?.toFixed(1)} MB\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {((resources.storage_usage || 0) / 100 * 100).toFixed(1)}%\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={resources.storage_usage > 70 ? 'High' : resources.storage_usage > 30 ? 'Medium' : 'Low'}\r\n                                                            color={resources.storage_usage > 70 ? 'error' : resources.storage_usage > 30 ? 'warning' : 'success'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Cost Analysis Details\r\n                                    </Typography>\r\n                                    <Alert severity=\"info\" sx={{ color: 'black' }}>\r\n                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                                            <strong>Cost Calculation Formula:</strong>\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>\r\n                                            Cost per run = (CPU% + Memory%) × Execution Time × Monthly Server Cost ÷ (30 days × 24 hours × 3600 seconds)\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                                            <strong>Monthly Server Cost:</strong> $20.00\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\">\r\n                                            <strong>Your Project's Monthly Cost:</strong> ${calculateMonthlyCost().toFixed(2)}\r\n                                        </Typography>\r\n                                    </Alert>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowDetails(false)} sx={{ color: 'black' }}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComputingResourceAnalysis; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Typography,\r\n    Grid,\r\n    Chip,\r\n    Alert,\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    IconButton,\r\n    Tooltip,\r\n    LinearProgress,\r\n    Divider\r\n} from '@mui/material';\r\nimport {\r\n    PlayArrow as RunIcon,\r\n    MonetizationOn as CostIcon,\r\n    TrendingUp as UsageIcon,\r\n    History as HistoryIcon,\r\n    Info as InfoIcon,\r\n    Refresh as RefreshIcon,\r\n    Warning as WarningIcon,\r\n    CheckCircle as CheckIcon,\r\n    Timer as TimerIcon,\r\n    Memory as MemoryIcon\r\n} from '@mui/icons-material';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { projectService } from 'src/services/projectService';\r\n\r\nconst ProjectUsageTracker = ({ project, onUpdate }) => {\r\n    const [userUsage, setUserUsage] = useState(null);\r\n    const [projectUsage, setProjectUsage] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        loadUsageData();\r\n    }, [project.id]);\r\n\r\n    const loadUsageData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            setError(null);\r\n            \r\n            // Load user's usage for this project\r\n            const userResponse = await projectService.getUserUsage(project.id);\r\n            setUserUsage(userResponse.data);\r\n            \r\n            // Load overall project usage (if user is owner or collaborator)\r\n            try {\r\n                const projectResponse = await projectService.getProjectUsage(project.id);\r\n                setProjectUsage(projectResponse.data);\r\n            } catch (error) {\r\n                // User might not have permission to view overall usage\r\n                console.log('No permission to view overall project usage');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading usage data:', error);\r\n            setError('Failed to load usage data');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const calculateTotalCost = () => {\r\n        if (!userUsage) return 0;\r\n        return parseFloat(userUsage.total_cost || 0);\r\n    };\r\n\r\n    const calculateAverageCostPerUse = () => {\r\n        if (!userUsage || userUsage.usage_count === 0) return 0;\r\n        return calculateTotalCost() / userUsage.usage_count;\r\n    };\r\n\r\n    const getUsageStatus = (count) => {\r\n        if (count === 0) return { label: 'Never Used', color: 'default' };\r\n        if (count < 5) return { label: 'Light Usage', color: 'success' };\r\n        if (count < 20) return { label: 'Moderate Usage', color: 'warning' };\r\n        return { label: 'Heavy Usage', color: 'error' };\r\n    };\r\n\r\n    const getCostStatus = (cost) => {\r\n        if (cost === 0) return { label: 'No Cost', color: 'success' };\r\n        if (cost < 1) return { label: 'Low Cost', color: 'success' };\r\n        if (cost < 5) return { label: 'Moderate Cost', color: 'warning' };\r\n        return { label: 'High Cost', color: 'error' };\r\n    };\r\n\r\n    if (loading && !userUsage) {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                            Loading Usage Data...\r\n                        </Typography>\r\n                        <LinearProgress />\r\n                    </Box>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <Card>\r\n                <CardContent>\r\n                    <Alert severity=\"error\" sx={{ color: 'black' }}>\r\n                        {error}\r\n                    </Alert>\r\n                    <Button\r\n                        startIcon={<RefreshIcon />}\r\n                        onClick={loadUsageData}\r\n                        sx={{ mt: 2, color: 'black' }}\r\n                    >\r\n                        Retry\r\n                    </Button>\r\n                </CardContent>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <CardContent>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n                        <Typography variant=\"h6\" sx={{ color: 'black' }}>\r\n                            Usage & Billing Tracker\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', gap: 1 }}>\r\n                            <Tooltip title=\"View Detailed Usage\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => setShowDetails(true)}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <InfoIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Refresh Usage Data\">\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={loadUsageData}\r\n                                    disabled={loading}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <RefreshIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    {userUsage ? (\r\n                        <>\r\n                            <Grid container spacing={3}>\r\n                                {/* Your Usage */}\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Your Usage\r\n                                    </Typography>\r\n                                    \r\n                                    <Box sx={{ mb: 3 }}>\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Times Used\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black', fontWeight: 'bold' }}>\r\n                                                {userUsage.usage_count}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Chip\r\n                                            label={getUsageStatus(userUsage.usage_count).label}\r\n                                            color={getUsageStatus(userUsage.usage_count).color}\r\n                                            size=\"small\"\r\n                                            sx={{ mb: 2 }}\r\n                                        />\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Total Cost\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'green', fontWeight: 'bold' }}>\r\n                                                ${calculateTotalCost().toFixed(2)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        <Chip\r\n                                            label={getCostStatus(calculateTotalCost()).label}\r\n                                            color={getCostStatus(calculateTotalCost()).color}\r\n                                            size=\"small\"\r\n                                            sx={{ mb: 2 }}\r\n                                        />\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Average Cost per Use\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                ${calculateAverageCostPerUse().toFixed(4)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Last Used\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                {formatDistanceToNow(new Date(userUsage.last_used), { addSuffix: true })}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Grid>\r\n\r\n                                {/* Project Pricing */}\r\n                                <Grid item xs={12} md={6}>\r\n                                    <Typography variant=\"subtitle1\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Pricing Information\r\n                                    </Typography>\r\n                                    \r\n                                    <Box sx={{ mb: 3 }}>\r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                One-time Purchase\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black', fontWeight: 'bold' }}>\r\n                                                ${project.price}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Per-use Charge\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black', fontWeight: 'bold' }}>\r\n                                                ${project.price_per_use}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Your Total Spent\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'orange', fontWeight: 'bold' }}>\r\n                                                ${calculateTotalCost().toFixed(2)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                        \r\n                                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                                Savings vs One-time\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" sx={{ \r\n                                                color: project.price > calculateTotalCost() ? 'green' : 'red', \r\n                                                fontWeight: 'bold' \r\n                                            }}>\r\n                                                ${(project.price - calculateTotalCost()).toFixed(2)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n\r\n                                    {/* Usage Recommendations */}\r\n                                    <Box>\r\n                                        <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\r\n                                            <strong>Recommendation:</strong>\r\n                                        </Typography>\r\n                                        {project.price > calculateTotalCost() ? (\r\n                                            <Alert severity=\"success\" sx={{ color: 'black' }}>\r\n                                                <Typography variant=\"body2\">\r\n                                                    Continue with per-use billing. You're saving ${(project.price - calculateTotalCost()).toFixed(2)} compared to one-time purchase.\r\n                                                </Typography>\r\n                                            </Alert>\r\n                                        ) : (\r\n                                            <Alert severity=\"warning\" sx={{ color: 'black' }}>\r\n                                                <Typography variant=\"body2\">\r\n                                                    Consider one-time purchase. You've spent ${calculateTotalCost().toFixed(2)} vs ${project.price} one-time cost.\r\n                                                </Typography>\r\n                                            </Alert>\r\n                                        )}\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            {/* Usage Summary Alert */}\r\n                            <Alert \r\n                                severity=\"info\" \r\n                                sx={{ mt: 2, color: 'black' }}\r\n                                icon={<UsageIcon />}\r\n                            >\r\n                                <Typography variant=\"body2\">\r\n                                    You've used this project {userUsage.usage_count} times with a total cost of ${calculateTotalCost().toFixed(2)}.\r\n                                    {userUsage.usage_count > 0 && (\r\n                                        <span> Average cost per use: ${calculateAverageCostPerUse().toFixed(4)}</span>\r\n                                    )}\r\n                                </Typography>\r\n                            </Alert>\r\n                        </>\r\n                    ) : (\r\n                        <Box sx={{ textAlign: 'center', py: 3 }}>\r\n                            <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\r\n                                No usage data available\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" sx={{ color: 'black' }}>\r\n                                Start using this project to see usage statistics and billing information.\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Detailed Usage Dialog */}\r\n            <Dialog\r\n                open={showDetails}\r\n                onClose={() => setShowDetails(false)}\r\n                maxWidth=\"md\"\r\n                fullWidth\r\n            >\r\n                <DialogTitle sx={{ color: 'black' }}>\r\n                    Detailed Usage & Billing Information\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    {userUsage && (\r\n                        <Box>\r\n                            <Grid container spacing={3}>\r\n                                {/* Your Usage Details */}\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Your Usage Details\r\n                                    </Typography>\r\n                                    <TableContainer component={Paper}>\r\n                                        <Table>\r\n                                            <TableHead>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Metric</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Value</TableCell>\r\n                                                    <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Status</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            <TableBody>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <RunIcon fontSize=\"small\" />\r\n                                                            Total Usage Count\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {userUsage.usage_count} times\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={getUsageStatus(userUsage.usage_count).label}\r\n                                                            color={getUsageStatus(userUsage.usage_count).color}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <CostIcon fontSize=\"small\" />\r\n                                                            Total Cost\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        ${calculateTotalCost().toFixed(2)}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={getCostStatus(calculateTotalCost()).label}\r\n                                                            color={getCostStatus(calculateTotalCost()).color}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <TimerIcon fontSize=\"small\" />\r\n                                                            Average Cost per Use\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        ${calculateAverageCostPerUse().toFixed(4)}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label={calculateAverageCostPerUse() < project.price_per_use ? 'Below Rate' : 'At Rate'}\r\n                                                            color={calculateAverageCostPerUse() < project.price_per_use ? 'success' : 'warning'}\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                                <TableRow>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n                                                            <HistoryIcon fontSize=\"small\" />\r\n                                                            Last Used\r\n                                                        </Box>\r\n                                                    </TableCell>\r\n                                                    <TableCell sx={{ color: 'black' }}>\r\n                                                        {formatDistanceToNow(new Date(userUsage.last_used), { addSuffix: true })}\r\n                                                    </TableCell>\r\n                                                    <TableCell>\r\n                                                        <Chip\r\n                                                            label=\"Recent\"\r\n                                                            color=\"success\"\r\n                                                            size=\"small\"\r\n                                                        />\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            </TableBody>\r\n                                        </Table>\r\n                                    </TableContainer>\r\n                                </Grid>\r\n\r\n                                {/* Project Usage Comparison */}\r\n                                {projectUsage && projectUsage.length > 0 && (\r\n                                    <Grid item xs={12}>\r\n                                        <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                            Project Usage Comparison\r\n                                        </Typography>\r\n                                        <TableContainer component={Paper}>\r\n                                            <Table>\r\n                                                <TableHead>\r\n                                                    <TableRow>\r\n                                                        <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>User</TableCell>\r\n                                                        <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Usage Count</TableCell>\r\n                                                        <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Total Cost</TableCell>\r\n                                                        <TableCell sx={{ color: 'black', fontWeight: 'bold' }}>Last Used</TableCell>\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {projectUsage.slice(0, 10).map((usage, index) => (\r\n                                                        <TableRow key={index}>\r\n                                                            <TableCell sx={{ color: 'black' }}>\r\n                                                                {usage.user.email}\r\n                                                            </TableCell>\r\n                                                            <TableCell sx={{ color: 'black' }}>\r\n                                                                {usage.usage_count}\r\n                                                            </TableCell>\r\n                                                            <TableCell sx={{ color: 'black' }}>\r\n                                                                ${parseFloat(usage.total_cost).toFixed(2)}\r\n                                                            </TableCell>\r\n                                                            <TableCell sx={{ color: 'black' }}>\r\n                                                                {formatDistanceToNow(new Date(usage.last_used), { addSuffix: true })}\r\n                                                            </TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </TableContainer>\r\n                                    </Grid>\r\n                                )}\r\n\r\n                                {/* Billing Recommendations */}\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h6\" sx={{ color: 'black', mb: 2 }}>\r\n                                        Billing Recommendations\r\n                                    </Typography>\r\n                                    <Alert severity=\"info\" sx={{ color: 'black' }}>\r\n                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                                            <strong>Current Billing Method:</strong> Per-use billing at ${project.price_per_use} per use\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                                            <strong>One-time Purchase Option:</strong> ${project.price}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n                                            <strong>Your Total Spent:</strong> ${calculateTotalCost().toFixed(2)}\r\n                                        </Typography>\r\n                                        <Divider sx={{ my: 1 }} />\r\n                                        <Typography variant=\"body2\">\r\n                                            {project.price > calculateTotalCost() ? (\r\n                                                <span style={{ color: 'green' }}>\r\n                                                    ✅ Continue with per-use billing. You're saving ${(project.price - calculateTotalCost()).toFixed(2)}.\r\n                                                </span>\r\n                                            ) : (\r\n                                                <span style={{ color: 'orange' }}>\r\n                                                    ⚠️ Consider one-time purchase. You've exceeded the one-time cost by ${(calculateTotalCost() - project.price).toFixed(2)}.\r\n                                                </span>\r\n                                            )}\r\n                                        </Typography>\r\n                                    </Alert>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setShowDetails(false)} sx={{ color: 'black' }}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProjectUsageTracker; ","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Button,\n  Chip,\n  Avatar,\n  Divider,\n  Tabs,\n  Tab,\n  TextField,\n  Alert,\n  Grid,\n  IconButton,\n  Tooltip,\n  Paper,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  LinearProgress,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails\n} from '@mui/material';\nimport {\n  Code as CodeIcon,\n  Description as DescriptionIcon,\n  Public as PublicIcon,\n  Lock as LockIcon,\n  Star as StarIcon,\n  PlayArrow as PlayIcon,\n  ShoppingCart as BuyIcon,\n  Person as PersonIcon,\n  Schedule as ScheduleIcon,\n  MonetizationOn as MonetizationIcon,\n  Info as InfoIcon,\n  CheckCircle as CheckCircleIcon,\n  Warning as WarningIcon,\n  ExpandMore as ExpandMoreIcon,\n  Memory as MemoryIcon,\n  Speed as SpeedIcon,\n  Storage as StorageIcon,\n  Timer as TimerIcon,\n  Group as GroupIcon,\n  Edit as EditIcon,\n  Visibility as ViewIcon,\n  Send as SendIcon,\n  Reviews as ApproveIcon,\n  Reject as RejectIcon\n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeHighlight from 'rehype-highlight';\nimport { useAuth } from 'src/contexts/AuthContext';\nimport { projectService } from 'src/services/projectService';\nimport ComputingResourceAnalysis from './ComputingResourceAnalysis';\nimport ProjectUsageTracker from './ProjectUsageTracker';\n\nconst ProjectDetails = ({\n  project,\n  onClose,\n  onRun,\n  onBuy,\n  isOwner\n}) => {\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const [activeTab, setActiveTab] = useState(0);\n  const [computingResources, setComputingResources] = useState(null);\n  const [userUsage, setUserUsage] = useState(null);\n  const [pendingVersions, setPendingVersions] = useState([]);\n  const [openVersionDialog, setOpenVersionDialog] = useState(false);\n  const [selectedVersion, setSelectedVersion] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    loadComputingResources();\n    loadUserUsage();\n    if (isOwner) {\n      loadPendingVersions();\n    }\n  }, [project.id, isOwner]);\n\n  const loadComputingResources = async () => {\n    try {\n      const response = await projectService.getComputingResources(project.id);\n      setComputingResources(response.data);\n    } catch (error) {\n      console.error('Error loading computing resources:', error);\n    }\n  };\n\n  const loadUserUsage = async () => {\n    try {\n      const response = await projectService.getUserUsage(project.id);\n      setUserUsage(response.data);\n    } catch (error) {\n      console.error('Error loading user usage:', error);\n    }\n  };\n\n  const loadPendingVersions = async () => {\n    try {\n      const response = await projectService.getPendingVersions(project.id);\n      setPendingVersions(response.data);\n    } catch (error) {\n      console.error('Error loading pending versions:', error);\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const handleRun = () => {\n    navigate(`/project/${project.id}/run`);\n  };\n\n  const handleApproveVersion = async (versionId) => {\n    try {\n      setLoading(true);\n      await projectService.approveVersion(project.id, versionId);\n      await loadPendingVersions();\n      setOpenVersionDialog(false);\n    } catch (error) {\n      console.error('Error approving version:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleRejectVersion = async (versionId, reason) => {\n    try {\n      setLoading(true);\n      await projectService.rejectVersion(project.id, versionId, reason);\n      await loadPendingVersions();\n      setOpenVersionDialog(false);\n    } catch (error) {\n      console.error('Error rejecting version:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getProjectTypeIcon = (type) => {\n    switch (type) {\n      case 'code':\n        return <CodeIcon sx={{ color: 'black' }} />;\n      case 'text':\n        return <DescriptionIcon sx={{ color: 'black' }} />;\n      default:\n        return <CodeIcon sx={{ color: 'black' }} />;\n    }\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'approved':\n        return 'success';\n      case 'pending':\n        return 'warning';\n      case 'rejected':\n        return 'error';\n      case 'draft':\n        return 'default';\n      default:\n        return 'default';\n    }\n  };\n\n  const calculateMonthlyCost = () => {\n    if (!computingResources) return 0;\n    const monthlyServerCost = 20; // $20/month server cost\n    const cpuPercentage = computingResources.cpu_usage;\n    const memoryPercentage = computingResources.memory_usage;\n    const avgUsage = (cpuPercentage + memoryPercentage) / 2;\n    return (avgUsage / 100) * monthlyServerCost;\n  };\n\n  const latestVersion = project.latest_public_version || project.latest_private_version;\n\n  return (\n    <Box sx={{ width: '100%', maxHeight: '80vh', overflow: 'auto' }}>\n      {/* Header */}\n      <Box sx={{ mb: 3 }}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n          <Box>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ color: 'black' }}>\n              {project.title}\n            </Typography>\n            <Typography variant=\"body1\" sx={{ mb: 2, color: 'black' }}>\n              {project.description}\n            </Typography>\n          </Box>\n          <Box sx={{ display: 'flex', gap: 1 }}>\n            {project.is_public ? (\n              <Chip icon={<PublicIcon sx={{ color: 'black' }} />} label=\"Public\" color=\"primary\" variant=\"outlined\" />\n            ) : (\n              <Chip icon={<LockIcon sx={{ color: 'black' }} />} label=\"Private\" color=\"default\" variant=\"outlined\" />\n            )}\n            <Chip\n              icon={<CheckCircleIcon sx={{ color: 'black' }} />}\n              label={project.status}\n              color={getStatusColor(project.status)}\n              variant=\"outlined\"\n            />\n          </Box>\n        </Box>\n\n        {/* Action Buttons */}\n        <Box sx={{ display: 'flex', gap: 2, mb: 3 }}>\n          {project.price > 0 && (\n            <Button\n              variant=\"outlined\"\n              color=\"warning\"\n              startIcon={<BuyIcon sx={{ color: 'black' }} />}\n              onClick={onBuy}\n              sx={{ color: 'black', borderColor: 'black' }}\n            >\n              Buy for ${project.price}\n            </Button>\n          )}\n          <Button\n            variant=\"contained\"\n            startIcon={<PlayIcon sx={{ color: 'white' }} />}\n            onClick={handleRun}\n            sx={{ backgroundColor: 'black', color: 'white' }}\n          >\n            Run Project\n          </Button>\n          {isOwner && (\n            <Button\n              variant=\"outlined\"\n              startIcon={<EditIcon sx={{ color: 'black' }} />}\n              onClick={() => navigate(`/project/${project.id}/edit`)}\n              sx={{ color: 'black', borderColor: 'black' }}\n            >\n              Edit Project\n            </Button>\n          )}\n        </Box>\n      </Box>\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 2 }}>\n        <Tabs value={activeTab} onChange={handleTabChange}>\n          <Tab label=\"Content\" sx={{ color: 'black' }} />\n          <Tab label=\"Usage\" sx={{ color: 'black' }} />\n          <Tab label=\"Computing Resources\" sx={{ color: 'black' }} />\n          <Tab label=\"Analytics\" sx={{ color: 'black' }} />\n          {isOwner && <Tab label=\"Collaboration\" sx={{ color: 'black' }} />}\n        </Tabs>\n      </Box>\n\n      {/* Tab Content */}\n      <Box sx={{ mt: 2 }}>\n        {/* Content Tab */}\n        {activeTab === 0 && (\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\n                Project Content\n              </Typography>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: '#f5f5f5',\n                  fontFamily: 'monospace',\n                  whiteSpace: 'pre-wrap',\n                  overflow: 'auto',\n                  maxHeight: '400px'\n                }}\n              >\n                {project.project_type === 'code' ? (\n                  <div style={{ color: 'black' }}>\n                    <ReactMarkdown rehypePlugins={[rehypeHighlight]}>\n                      {latestVersion?.content || 'No content available'}\n                    </ReactMarkdown>\n                  </div>\n                ) : (\n                  <Typography variant=\"body1\" sx={{ color: 'black' }}>\n                    {latestVersion?.content || 'No content available'}\n                  </Typography>\n                )}\n              </Paper>\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Usage Tab */}\n        {activeTab === 1 && (\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\n                    Usage Instructions\n                  </Typography>\n                  {latestVersion?.usage_instructions ? (\n                    <div style={{ color: 'black' }}>\n                      <ReactMarkdown>\n                        {latestVersion.usage_instructions}\n                      </ReactMarkdown>\n                    </div>\n                  ) : (\n                    <Typography sx={{ color: 'black' }}>\n                      No usage instructions available.\n                    </Typography>\n                  )}\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <ProjectUsageTracker \n                project={project} \n                onUpdate={loadUserUsage}\n              />\n            </Grid>\n          </Grid>\n        )}\n\n        {/* Computing Resources Tab */}\n        {activeTab === 2 && (\n          <ComputingResourceAnalysis \n            project={project} \n            onUpdate={loadComputingResources}\n          />\n        )}\n\n        {/* Analytics Tab */}\n        {activeTab === 3 && (\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\n                    Project Analytics\n                  </Typography>\n                  <Box sx={{ mb: 2 }}>\n                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                      Total Views: {project.total_views || 0}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                      Total Runs: {project.total_runs || 0}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                      Total Purchases: {project.total_purchases || 0}\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                      Total Revenue: ${project.total_revenue || 0}\n                    </Typography>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n            {userUsage && (\n              <Grid item xs={12} md={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\n                      Your Usage\n                    </Typography>\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                        Times Used: {userUsage.usage_count}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                        Total Cost: ${userUsage.total_cost}\n                      </Typography>\n                      <Typography variant=\"body2\" sx={{ color: 'black', mb: 1 }}>\n                        Last Used: {formatDistanceToNow(new Date(userUsage.last_used), { addSuffix: true })}\n                      </Typography>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            )}\n          </Grid>\n        )}\n\n        {/* Collaboration Tab (Owner Only) */}\n        {activeTab === 4 && isOwner && (\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'black' }}>\n                Collaboration Management\n              </Typography>\n              \n              {/* Pending Versions */}\n              <Accordion>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                  <Typography sx={{ color: 'black' }}>\n                    Pending Versions ({pendingVersions.length})\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  {pendingVersions.length > 0 ? (\n                    <List>\n                      {pendingVersions.map((version) => (\n                        <ListItem key={version.id} divider>\n                          <ListItemIcon>\n                            <EditIcon sx={{ color: 'black' }} />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={`Version ${version.version_number} by ${version.created_by.first_name} ${version.created_by.last_name}`}\n                            secondary={formatDistanceToNow(new Date(version.created_at), { addSuffix: true })}\n                            sx={{ '& .MuiListItemText-primary': { color: 'black' } }}\n                          />\n                          <Box sx={{ display: 'flex', gap: 1 }}>\n                            <Button\n                              size=\"small\"\n                              color=\"success\"\n                              startIcon={<ApproveIcon />}\n                              onClick={() => {\n                                setSelectedVersion(version);\n                                setOpenVersionDialog(true);\n                              }}\n                            >\n                              Review\n                            </Button>\n                          </Box>\n                        </ListItem>\n                      ))}\n                    </List>\n                  ) : (\n                    <Typography sx={{ color: 'black' }}>\n                      No pending versions to review.\n                    </Typography>\n                  )}\n                </AccordionDetails>\n              </Accordion>\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n\n      {/* Version Review Dialog */}\n      <Dialog\n        open={openVersionDialog}\n        onClose={() => setOpenVersionDialog(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle sx={{ color: 'black' }}>\n          Review Version {selectedVersion?.version_number}\n        </DialogTitle>\n        <DialogContent>\n          {selectedVersion && (\n            <Box>\n              <Typography variant=\"body2\" sx={{ mb: 2, color: 'black' }}>\n                Submitted by: {selectedVersion.created_by.first_name} {selectedVersion.created_by.last_name}\n              </Typography>\n              <Typography variant=\"body2\" sx={{ mb: 2, color: 'black' }}>\n                Date: {formatDistanceToNow(new Date(selectedVersion.created_at), { addSuffix: true })}\n              </Typography>\n              <Typography variant=\"h6\" sx={{ mb: 2, color: 'black' }}>\n                Content Changes:\n              </Typography>\n              <Paper\n                sx={{\n                  p: 2,\n                  backgroundColor: '#f5f5f5',\n                  fontFamily: 'monospace',\n                  whiteSpace: 'pre-wrap',\n                  overflow: 'auto',\n                  maxHeight: '300px'\n                }}\n              >\n                <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                  {selectedVersion.content}\n                </Typography>\n              </Paper>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button \n            onClick={() => setOpenVersionDialog(false)}\n            sx={{ color: 'black' }}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={() => handleRejectVersion(selectedVersion?.id, 'Rejected by owner')}\n            color=\"error\"\n            variant=\"outlined\"\n            disabled={loading}\n          >\n            Reject\n          </Button>\n          <Button\n            onClick={() => handleApproveVersion(selectedVersion?.id)}\n            color=\"success\"\n            variant=\"contained\"\n            disabled={loading}\n          >\n            Approve\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default ProjectDetails; ","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\r\n\r\n// Function to fetch CSRF token if needed\r\nconst fetchCSRFToken = async () => {\r\n  try {\r\n    // Check if CSRF token already exists\r\n    if (!Cookies.get('csrftoken')) {\r\n      console.log('No CSRF token found, fetching a new one...');\r\n      const response = await axios.get(`${API_BASE_URL}/api/get_csrf_token/`, {\r\n        withCredentials: true\r\n      });\r\n      if (response.status === 200) {\r\n        const token = Cookies.get('csrftoken');\r\n        console.log('CSRF token fetched successfully:', token ? 'Token received' : 'No token set');\r\n      } else {\r\n        console.warn('Failed to fetch CSRF token:', response.status);\r\n      }\r\n    } else {\r\n      console.log('CSRF token already exists:', Cookies.get('csrftoken') ? 'Token exists' : 'No token found');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching CSRF token:', error);\r\n    // Continue without CSRF token - backend will handle exempt views\r\n  }\r\n};\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: `${API_BASE_URL}/api`,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // Enable sending cookies with requests\r\n});\r\n\r\n// Add request interceptor to include auth token and CSRF token\r\napi.interceptors.request.use(\r\n  async (config) => {\r\n    // Fetch CSRF token if needed\r\n    await fetchCSRFToken();\r\n    \r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // Add CSRF token to headers\r\n    const csrfToken = Cookies.get('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('accessToken');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const projectService = {\r\n  // Get all projects\r\n  getAllProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get user's projects\r\n  getMyProjects: async (params = {}) => {\r\n    const response = await api.get('/projects/my_projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search projects\r\n  searchProjects: async (query, params = {}) => {\r\n    const response = await api.get('/projects/search/', {\r\n      params: { q: query, ...params }\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Get single project\r\n  getProject: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Create new project\r\n  createProject: async (projectData) => {\r\n    const response = await api.post('/projects/', projectData);\r\n    return response;\r\n  },\r\n\r\n  // Update project\r\n  updateProject: async (projectId, projectData) => {\r\n    const response = await api.put(`/projects/${projectId}/`, projectData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project\r\n  deleteProject: async (projectId) => {\r\n    const response = await api.delete(`/projects/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Run project\r\n  runProject: async (projectId, inputData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/run/`, inputData);\r\n    return response;\r\n  },\r\n\r\n  // Buy project\r\n  buyProject: async (projectId, purchaseData = {}) => {\r\n    const response = await api.post(`/projects/${projectId}/buy/`, purchaseData);\r\n    return response;\r\n  },\r\n\r\n  // Track project view\r\n  trackProjectView: async (projectId) => {\r\n    const response = await api.post(`/projects/${projectId}/view/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project analytics\r\n  getProjectAnalytics: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/analytics/`);\r\n    return response;\r\n  },\r\n\r\n  // Get collaborators\r\n  getCollaborators: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/collaborators/`);\r\n    return response;\r\n  },\r\n\r\n  // Add collaborator\r\n  addCollaborator: async (projectId, collaboratorData) => {\r\n    const response = await api.post(`/projects/${projectId}/add_collaborator/`, collaboratorData);\r\n    return response;\r\n  },\r\n\r\n  // Remove collaborator\r\n  removeCollaborator: async (projectId, userId) => {\r\n    const response = await api.post(`/projects/${projectId}/remove_collaborator/`, { user_id: userId });\r\n    return response;\r\n  },\r\n\r\n  // Submit version for review (for collaborators)\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Promote version to public\r\n  promoteVersionToPublic: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/promote_to_public/`);\r\n    return response;\r\n  },\r\n\r\n  // Get project versions\r\n  getProjectVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Create project version\r\n  createProjectVersion: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Update project version\r\n  updateProjectVersion: async (projectId, versionId, versionData) => {\r\n    const response = await api.put(`/projects/${projectId}/versions/${versionId}/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Delete project version\r\n  deleteProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.delete(`/projects/${projectId}/versions/${versionId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve project version\r\n  approveProjectVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project version\r\n  rejectProjectVersion: async (projectId, versionId, reason = '') => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Analyze computing resources\r\n  analyzeComputingResources: async (projectId, code) => {\r\n    const response = await api.post(`/projects/${projectId}/computing-resources/`, { code });\r\n    return response;\r\n  },\r\n\r\n  // Get computing resources\r\n  getComputingResources: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/computing-resources/`);\r\n    return response;\r\n  },\r\n\r\n  // Update computing resources\r\n  updateComputingResources: async (projectId, resourceId, resourceData) => {\r\n    const response = await api.put(`/projects/${projectId}/computing-resources/${resourceId}/`, resourceData);\r\n    return response;\r\n  },\r\n\r\n  // Admin functions\r\n  // Get all projects for admin\r\n  getAllProjectsAdmin: async (params = {}) => {\r\n    const response = await api.get('/projects/admin/projects/', { params });\r\n    return response;\r\n  },\r\n\r\n  // Get admin analytics\r\n  getAdminAnalytics: async () => {\r\n    const response = await api.get('/projects/admin/projects/analytics/');\r\n    return response;\r\n  },\r\n\r\n  // Approve project\r\n  approveProject: async (projectId) => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject project\r\n  rejectProject: async (projectId, reason = '') => {\r\n    const response = await api.post(`/projects/admin/projects/${projectId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Get project usage statistics\r\n  getProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user's project usage\r\n  getUserProjectUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get user usage for a specific project\r\n  getUserUsage: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/user_usage/`);\r\n    return response;\r\n  },\r\n\r\n  // Get pending versions for review\r\n  getPendingVersions: async (projectId) => {\r\n    const response = await api.get(`/projects/${projectId}/pending_versions/`);\r\n    return response;\r\n  },\r\n\r\n  // Approve a version\r\n  approveVersion: async (projectId, versionId) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/approve/`);\r\n    return response;\r\n  },\r\n\r\n  // Reject a version\r\n  rejectVersion: async (projectId, versionId, reason) => {\r\n    const response = await api.post(`/projects/${projectId}/versions/${versionId}/reject/`, { reason });\r\n    return response;\r\n  },\r\n\r\n  // Submit a new version for review\r\n  submitVersionForReview: async (projectId, versionData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_version_for_review/`, versionData);\r\n    return response;\r\n  },\r\n\r\n  // Submit project for review\r\n  submitForReview: async (projectId, reviewData) => {\r\n    const response = await api.post(`/projects/${projectId}/submit_for_review/`, reviewData);\r\n    return response;\r\n  },\r\n\r\n  // Get public project by ID\r\n  getPublicProject: async (projectId) => {\r\n    const response = await api.get(`/projects/public/${projectId}/`);\r\n    return response;\r\n  },\r\n\r\n  // Get private project by URL\r\n  getPrivateProject: async (privateUrl) => {\r\n    const response = await api.get(`/projects/private/${privateUrl}/`);\r\n    return response;\r\n  },\r\n\r\n  // Execute code using backend endpoint\r\n  executeCode: async (code, language) => {\r\n    const response = await api.post('/projects/execute-code/', {\r\n      code: code,\r\n      language: language\r\n    });\r\n    return response;\r\n  },\r\n\r\n  // Enhanced search with filters\r\n  advancedSearch: async (filters = {}) => {\r\n    const {\r\n      query = '',\r\n      projectType = '',\r\n      language = '',\r\n      minPrice = '',\r\n      maxPrice = '',\r\n      sortBy = 'created_at',\r\n      sortOrder = 'desc'\r\n    } = filters;\r\n\r\n    const params = {\r\n      q: query,\r\n      type: projectType,\r\n      language: language,\r\n      min_price: minPrice,\r\n      max_price: maxPrice,\r\n      sort_by: sortBy,\r\n      sort_order: sortOrder\r\n    };\r\n\r\n    const response = await api.get('/projects/search/', { params });\r\n    return response;\r\n  }\r\n};\r\n\r\nexport default projectService;"],"names":["_ref","_resources$cpu_usage","_resources$memory_usa","_resources$execution_","_resources$estimated_","_resources$cpu_usage2","_resources$cpu_usage3","_resources$memory_usa2","_resources$execution_2","_resources$storage_us","project","onUpdate","resources","setResources","useState","loading","setLoading","showDetails","setShowDetails","error","setError","useEffect","loadResources","id","async","response","projectService","getComputingResources","data","console","analyzeResources","_project$latest_versi","analyzeComputingResources","latest_version","content","calculateMonthlyCost","cpu_usage","memory_usage","getResourceIntensityColor","intensity","_jsx","Card","children","CardContent","_jsxs","Box","sx","textAlign","py","Typography","variant","color","mb","LinearProgress","Alert","severity","Button","startIcon","RefreshIcon","onClick","mt","_Fragment","display","justifyContent","alignItems","gap","Tooltip","title","IconButton","size","InfoIcon","disabled","Grid","container","spacing","item","xs","md","toFixed","value","Math","min","execution_time","fontWeight","estimated_cost_per_run","price_per_use","complexity_score","Chip","label","score","resource_intensity","mr","icon","CostIcon","WarningIcon","fontSize","verticalAlign","TrendingIcon","backgroundColor","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","SpeedIcon","MemoryIcon","TimerIcon","StorageIcon","storage_usage","fontFamily","DialogActions","userUsage","setUserUsage","projectUsage","setProjectUsage","loadUsageData","userResponse","getUserUsage","projectResponse","getProjectUsage","log","calculateTotalCost","parseFloat","total_cost","calculateAverageCostPerUse","usage_count","getUsageStatus","count","getCostStatus","cost","formatDistanceToNow","Date","last_used","addSuffix","price","UsageIcon","RunIcon","HistoryIcon","length","slice","map","usage","index","user","email","Divider","my","style","onRun","onBuy","isOwner","navigate","useNavigate","useAuth","activeTab","setActiveTab","computingResources","setComputingResources","pendingVersions","setPendingVersions","openVersionDialog","setOpenVersionDialog","selectedVersion","setSelectedVersion","loadComputingResources","loadUserUsage","loadPendingVersions","getPendingVersions","latestVersion","latest_public_version","latest_private_version","width","maxHeight","overflow","gutterBottom","description","is_public","PublicIcon","LockIcon","CheckCircleIcon","status","getStatusColor","BuyIcon","borderColor","PlayIcon","handleRun","EditIcon","borderBottom","Tabs","onChange","handleTabChange","event","newValue","Tab","p","whiteSpace","project_type","ReactMarkdown","rehypePlugins","rehypeHighlight","usage_instructions","ProjectUsageTracker","ComputingResourceAnalysis","total_views","total_runs","total_purchases","total_revenue","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","List","version","ListItem","divider","ListItemIcon","ListItemText","primary","version_number","created_by","first_name","last_name","secondary","created_at","ApproveIcon","versionId","reason","rejectVersion","handleRejectVersion","approveVersion","handleApproveVersion","API_BASE_URL","process","api","axios","create","baseURL","headers","withCredentials","interceptors","request","use","Cookies","get","token","warn","fetchCSRFToken","localStorage","getItem","config","Authorization","csrfToken","Promise","reject","_error$response","removeItem","window","location","href","getAllProjects","params","arguments","undefined","getMyProjects","searchProjects","query","q","getProject","projectId","createProject","post","projectData","updateProject","put","deleteProject","delete","runProject","inputData","buyProject","purchaseData","trackProjectView","getProjectAnalytics","getCollaborators","addCollaborator","collaboratorData","removeCollaborator","userId","user_id","submitVersionForReview","versionData","promoteVersionToPublic","getProjectVersions","createProjectVersion","updateProjectVersion","deleteProjectVersion","approveProjectVersion","rejectProjectVersion","code","updateComputingResources","resourceId","resourceData","getAllProjectsAdmin","getAdminAnalytics","approveProject","rejectProject","getUserProjectUsage","submitForReview","reviewData","getPublicProject","getPrivateProject","privateUrl","executeCode","language","advancedSearch","filters","projectType","minPrice","maxPrice","sortBy","sortOrder","type","min_price","max_price","sort_by","sort_order"],"sourceRoot":""}