{"version":3,"file":"static/js/254.712c270d.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Add.js","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/FilterList.js","../node_modules/@mui/icons-material/esm/Warning.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","../node_modules/@mui/icons-material/esm/Star.js","../node_modules/@mui/icons-material/esm/MoreVert.js","content/applications/Projects/components/ProjectCard.js","content/applications/Projects/index.js","../node_modules/@mui/icons-material/esm/MonetizationOn.js","../node_modules/@mui/icons-material/esm/Group.js","../node_modules/@mui/icons-material/esm/Description.js","../node_modules/@mui/icons-material/esm/ShoppingCart.js","../node_modules/@mui/icons-material/esm/Search.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6z\"\n}), 'Add');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5M12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5m0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3\"\n}), 'Visibility');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4zM3 6v2h18V6zm3 7h12v-2H6z\"\n}), 'FilterList');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M1 21h22L12 2zm12-3h-2v-2h2zm0-4h-2v-4h2z\"\n}), 'Warning');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17.27 18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2m0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2\"\n}), 'MoreVert');","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Chip,\r\n    Divider,\r\n    IconButton,\r\n    Tooltip,\r\n    Typography,\r\n    Menu,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n} from '@mui/material';\r\nimport {\r\n    Code as CodeIcon,\r\n    Delete as DeleteIcon,\r\n    Description as DescriptionIcon,\r\n    Edit as EditIcon,\r\n    Lock as LockIcon,\r\n    Person as PersonIcon,\r\n    PlayArrow as PlayIcon,\r\n    Public as PublicIcon,\r\n    ShoppingCart as BuyIcon,\r\n    Star as StarIcon,\r\n    Visibility as ViewIcon,\r\n    TrendingUp as TrendingIcon,\r\n    MonetizationOn as RevenueIcon,\r\n    Group as CollaborationIcon,\r\n    MoreVert as MoreIcon,\r\n    Settings as SettingsIcon,\r\n    Analytics as AnalyticsIcon,\r\n    Share as ShareIcon,\r\n    Download as DownloadIcon,\r\n    Upload as UploadIcon\r\n} from '@mui/icons-material';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nconst ProjectCard = ({ \r\n    project, \r\n    onView, \r\n    onEdit, \r\n    onDelete, \r\n    onRun, \r\n    onViewPublic,\r\n    onCollaboration,\r\n    isOwner \r\n}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        handleMenuClose();\r\n        switch (action) {\r\n            case 'view':\r\n                onView();\r\n                break;\r\n            case 'edit':\r\n                onEdit();\r\n                break;\r\n            case 'run':\r\n                onRun();\r\n                break;\r\n            case 'collaborate':\r\n                onCollaboration();\r\n                break;\r\n            case 'view_public':\r\n                onViewPublic();\r\n                break;\r\n            case 'delete':\r\n                onDelete();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const getProjectTypeIcon = (type) => {\r\n        switch (type) {\r\n            case 'code':\r\n                return <CodeIcon fontSize=\"small\" sx={{ color: 'black' }} />;\r\n            case 'text':\r\n                return <DescriptionIcon fontSize=\"small\" sx={{ color: 'black' }} />;\r\n            default:\r\n                return <ViewIcon fontSize=\"small\" sx={{ color: 'black' }} />;\r\n        }\r\n    };\r\n\r\n    const getProjectTypeColor = (type) => {\r\n        switch (type) {\r\n            case 'code':\r\n                return 'primary';\r\n            case 'text':\r\n                return 'secondary';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'approved':\r\n                return 'success';\r\n            case 'pending':\r\n                return 'warning';\r\n            case 'rejected':\r\n                return 'error';\r\n            case 'draft':\r\n                return 'default';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\r\n                '&:hover': {\r\n                    transform: 'translateY(-4px)',\r\n                    boxShadow: 4\r\n                }\r\n            }}\r\n        >\r\n            <CardContent sx={{ flexGrow: 1 }}>\r\n                {/* Header */}\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'flex-start',\r\n                        mb: 2\r\n                    }}\r\n                >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flex: 1 }}>\r\n                        {getProjectTypeIcon(project.project_type)}\r\n                        <Typography variant=\"h6\" component=\"h2\" noWrap color=\"black\" sx={{ flex: 1 }}>\r\n                            {project.title}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', gap: 0.5, alignItems: 'center' }}>\r\n                        {project.is_public ? (\r\n                            <Tooltip title=\"Public Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <PublicIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </Tooltip>\r\n                        ) : (\r\n                            <Tooltip title=\"Private Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <LockIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </Tooltip>\r\n                        )}\r\n                        {project.is_approved && (\r\n                            <Tooltip title=\"Approved\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <StarIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </Tooltip>\r\n                        )}\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            onClick={handleMenuOpen}\r\n                            sx={{ color: 'black' }}\r\n                        >\r\n                            <MoreIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* Description */}\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                        mb: 2,\r\n                        display: '-webkit-box',\r\n                        WebkitLineClamp: 3,\r\n                        WebkitBoxOrient: 'vertical',\r\n                        overflow: 'hidden',\r\n                        color: 'black'\r\n                    }}\r\n                >\r\n                    {project.description}\r\n                </Typography>\r\n\r\n                {/* Chips */}\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                        mb: 2,\r\n                        flexWrap: 'wrap'\r\n                    }}\r\n                >\r\n                    <Chip\r\n                        label={project.project_type}\r\n                        color={getProjectTypeColor(project.project_type)}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        label={project.status}\r\n                        color={getStatusColor(project.status)}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    {project.language && (\r\n                        <Chip\r\n                            label={project.language}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                    )}\r\n\r\n                </Box>\r\n\r\n                {/* Analytics */}\r\n                {project.analytics && (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            gap: 1,\r\n                            mb: 2,\r\n                            flexWrap: 'wrap'\r\n                        }}\r\n                    >\r\n                        <Chip\r\n                            icon={<ViewIcon />}\r\n                            label={project.analytics.total_views || 0}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                        <Chip\r\n                            icon={<PlayIcon />}\r\n                            label={project.analytics.total_runs || 0}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                        <Chip\r\n                            icon={<BuyIcon />}\r\n                            label={project.analytics.total_purchases || 0}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                        {project.analytics.total_revenue > 0 && (\r\n                            <Chip\r\n                                icon={<RevenueIcon />}\r\n                                label={`$${project.analytics.total_revenue}`}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                color=\"success\"\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Owner Info */}\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1,\r\n                        mb: 2\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ width: 24, height: 24 }}>\r\n                        {project.owner.avatar ? (\r\n                            <img\r\n                                src={project.owner.avatar}\r\n                                alt={project.owner.first_name}\r\n                            />\r\n                        ) : (\r\n                            <PersonIcon fontSize=\"small\" />\r\n                        )}\r\n                    </Avatar>\r\n                    <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                        by {project.owner.first_name} {project.owner.last_name}\r\n                    </Typography>\r\n                </Box>\r\n\r\n                {/* Usage Info */}\r\n                {project.usage_count > 0 && (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: 1,\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        <PlayIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                        <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                            Used {project.usage_count} times\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Computing Resources */}\r\n                {project.computing_resources &&\r\n                    project.computing_resources.length > 0 && (\r\n                        <Box sx={{ mb: 2 }}>\r\n                            <Typography\r\n                                variant=\"caption\"\r\n                                sx={{ color: 'black' }}\r\n                                display=\"block\"\r\n                            >\r\n                                Cost per run: $\r\n                                {project.computing_resources[0]\r\n                                    .estimated_cost_per_run}\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n\r\n                {/* Timestamp */}\r\n                <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                    {formatDistanceToNow(new Date(project.created_at), {\r\n                        addSuffix: true\r\n                    })}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <Divider />\r\n\r\n            <CardActions sx={{ flexWrap: 'wrap', justifyContent: 'space-between', p: 2 }}>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<ViewIcon />}\r\n                        onClick={onView}\r\n                        sx={{ color: 'black', borderColor: 'black' }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<PlayIcon />}\r\n                        onClick={onRun}\r\n                        sx={{ color: 'black', borderColor: 'black' }}\r\n                    >\r\n                        Run\r\n                    </Button>\r\n\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<CollaborationIcon />}\r\n                        onClick={onCollaboration}\r\n                        sx={{ color: 'black', borderColor: 'black' }}\r\n                    >\r\n                        Collaborate\r\n                    </Button>\r\n\r\n                    {project.is_public && (\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={onViewPublic}\r\n                            startIcon={<PublicIcon />}\r\n                            sx={{ color: 'black', borderColor: 'black' }}\r\n                        >\r\n                            Public\r\n                        </Button>\r\n                    )}\r\n\r\n                    {isOwner && (\r\n                        <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                            <Tooltip title=\"Edit Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={onEdit}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <EditIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n\r\n                            <Tooltip title=\"Delete Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    color=\"error\"\r\n                                    onClick={onDelete}\r\n                                >\r\n                                    <DeleteIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n\r\n            </CardActions>\r\n\r\n            {/* Action Menu */}\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n                sx={{\r\n                    '& .MuiMenuItem-root': {\r\n                        color: 'black'\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem onClick={() => handleMenuAction('view')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                    <ListItemIcon>\r\n                        <ViewIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>View Details</ListItemText>\r\n                </MenuItem>\r\n                \r\n                <MenuItem onClick={() => handleMenuAction('run')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                    <ListItemIcon>\r\n                        <PlayIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Run Project</ListItemText>\r\n                </MenuItem>\r\n                \r\n                <MenuItem onClick={() => handleMenuAction('collaborate')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                    <ListItemIcon>\r\n                        <CollaborationIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Collaborate</ListItemText>\r\n                </MenuItem>\r\n                \r\n                {/* {project.is_public && (\r\n                    <MenuItem onClick={() => handleMenuAction('view_public')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                        <ListItemIcon>\r\n                            <PublicIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText>View Public Page</ListItemText>\r\n                    </MenuItem>\r\n                )} */}\r\n                \r\n                {isOwner && (\r\n                    <>\r\n                        <MenuItem onClick={() => handleMenuAction('edit')} sx={{ color: 'black !important',\r\n                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                    color: 'black !important'\r\n                                }\r\n                            }}>\r\n                            <ListItemIcon>\r\n                                <EditIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </ListItemIcon>\r\n                            <ListItemText>Edit Project</ListItemText>\r\n                        </MenuItem>\r\n                        \r\n                        <MenuItem onClick={() => handleMenuAction('delete')}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\r\n                            </ListItemIcon>\r\n                            <ListItemText sx={{ color: 'red' }}>Delete Project</ListItemText>\r\n                        </MenuItem>\r\n                    </>\r\n                )}\r\n            </Menu>\r\n        </Card>\r\n    );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n    project: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        project_type: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price_per_use: PropTypes.number.isRequired,\r\n        is_public: PropTypes.bool.isRequired,\r\n        is_approved: PropTypes.bool.isRequired,\r\n        usage_count: PropTypes.number.isRequired,\r\n        created_at: PropTypes.string.isRequired,\r\n        language: PropTypes.string,\r\n        owner: PropTypes.shape({\r\n            first_name: PropTypes.string.isRequired,\r\n            last_name: PropTypes.string.isRequired,\r\n            avatar: PropTypes.string\r\n        }).isRequired,\r\n        analytics: PropTypes.shape({\r\n            total_views: PropTypes.number,\r\n            total_runs: PropTypes.number,\r\n            total_purchases: PropTypes.number,\r\n            total_revenue: PropTypes.string\r\n        }),\r\n        computing_resources: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                estimated_cost_per_run: PropTypes.number.isRequired\r\n            })\r\n        )\r\n    }).isRequired,\r\n    onView: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onRun: PropTypes.func.isRequired,\r\n    onViewPublic: PropTypes.func.isRequired,\r\n    onCollaboration: PropTypes.func.isRequired,\r\n    isOwner: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ProjectCard; ","import { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Alert,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Fab,\n    FormControl,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    MenuItem,\n    Select,\n    Slider,\n    Snackbar,\n    TextField,\n    Typography,\n    Chip,\n} from '@mui/material';\nimport {\n    Add as AddIcon,\n    Code as CodeIcon,\n    Delete as DeleteIcon,\n    Description as DescriptionIcon,\n    Search as SearchIcon,\n    Visibility as VisibilityIcon,\n    Warning as WarningIcon,\n    FilterList as FilterIcon,\n    Sort as SortIcon,\n    Language as LanguageIcon,\n    AttachMoney as PriceIcon\n} from '@mui/icons-material';\n\nimport { useAuth } from 'src/contexts/AuthContext';\nimport { projectService } from 'src/services/projectService';\nimport ProjectCard from './components/ProjectCard';\nimport ProjectDetails from './components/ProjectDetails';\nimport ProjectForm from './components/ProjectForm';\n\nconst Projects = () => {\n    const { user } = useAuth();\n    const navigate = useNavigate();\n\n    // State management\n    const [projects, setProjects] = useState([]);\n    const [filteredProjects, setFilteredProjects] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterType, setFilterType] = useState('all');\n    const [filterLanguage, setFilterLanguage] = useState('all');\n\n    const [sortBy, setSortBy] = useState('created_at');\n    const [sortOrder, setSortOrder] = useState('desc');\n    const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n    const [openDetailsDialog, setOpenDetailsDialog] = useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [selectedProject, setSelectedProject] = useState(null);\n    const [projectToDelete, setProjectToDelete] = useState(null);\n    const [snackbar, setSnackbar] = useState({\n        open: false,\n        message: '',\n        severity: 'success'\n    });\n\n    // Effects\n    useEffect(() => {\n        loadProjects();\n    }, []);\n\n    useEffect(() => {\n        filterAndSortProjects();\n    }, [projects, searchTerm, filterType, filterLanguage, sortBy, sortOrder]);\n\n    const getFilterIcon = (type) => {\n        switch (type) {\n            case 'code':\n                return <CodeIcon />;\n            case 'text':\n                return <DescriptionIcon />;\n            default:\n                return <VisibilityIcon />;\n        }\n    };\n\n    const showSnackbar = (message, severity = 'success') => {\n        setSnackbar({\n            open: true,\n            message,\n            severity\n        });\n    };\n\n    const loadProjects = async () => {\n        try {\n            setLoading(true);\n            const response = await projectService.getAllProjects();\n            console.log('response', response);\n            setProjects(response.data);\n        } catch (error) {\n            console.error('Error loading projects:', error);\n            showSnackbar('Failed to load projects', 'error');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const filterAndSortProjects = () => {\n        let filtered = [...projects];\n\n        // Filter by search term\n        if (searchTerm) {\n            filtered = filtered.filter(project =>\n                project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.owner.first_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.owner.last_name.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        // Filter by type\n        if (filterType !== 'all') {\n            filtered = filtered.filter(project => project.project_type === filterType);\n        }\n\n        // Filter by language\n        if (filterLanguage !== 'all') {\n            filtered = filtered.filter(project => project.language === filterLanguage);\n        }\n\n\n\n        // Sort projects\n        filtered.sort((a, b) => {\n            let aValue, bValue;\n            \n            switch (sortBy) {\n                case 'title':\n                    aValue = a.title.toLowerCase();\n                    bValue = b.title.toLowerCase();\n                    break;\n                case 'created_at':\n                    aValue = new Date(a.created_at);\n                    bValue = new Date(b.created_at);\n                    break;\n\n                case 'views':\n                    aValue = a.analytics?.total_views || 0;\n                    bValue = b.analytics?.total_views || 0;\n                    break;\n                case 'runs':\n                    aValue = a.analytics?.total_runs || 0;\n                    bValue = b.analytics?.total_runs || 0;\n                    break;\n                case 'revenue':\n                    aValue = parseFloat(a.analytics?.total_revenue || 0);\n                    bValue = parseFloat(b.analytics?.total_revenue || 0);\n                    break;\n                default:\n                    return 0;\n            }\n\n            if (sortOrder === 'desc') {\n                return bValue > aValue ? 1 : -1;\n            } else {\n                return aValue > bValue ? 1 : -1;\n            }\n        });\n\n        setFilteredProjects(filtered);\n    };\n\n    const handleCollaboration = (project) => {\n        navigate(`/projects/${project.id}/collaboration`);\n    };\n\n    const handleDeleteProject = (project) => {\n        if (project) {\n            setProjectToDelete(project);\n            setOpenDeleteDialog(true);\n        }\n    };\n\n    const handleProjectAction = (action, project) => {\n        switch (action) {\n            case 'view':\n                navigate(`/project/${project.id}`);\n                break;\n            case 'edit':\n                navigate(`/project/${project.id}/edit`);\n                break;\n            case 'delete':\n                handleDeleteProject(project);\n                break;\n            case 'run':\n                navigate(`/project/${project.id}/run`);\n                break;\n            case 'view_public':\n                handleViewPublic(project);\n                break;\n            case 'collaboration':\n                handleCollaboration(project);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleConfirmDelete = async () => {\n        try {\n            await projectService.deleteProject(projectToDelete.id);\n            setProjects(projects.filter(p => p.id !== projectToDelete.id));\n            setOpenDeleteDialog(false);\n            setProjectToDelete(null);\n            showSnackbar('Project deleted successfully!');\n        } catch (error) {\n            console.error('Error deleting project:', error);\n            showSnackbar('Failed to delete project', 'error');\n        }\n    };\n\n    const handleCancelDelete = () => {\n        setOpenDeleteDialog(false);\n        setProjectToDelete(null);\n    };\n\n    const handleViewProject = (project) => {\n        setSelectedProject(project);\n        setOpenDetailsDialog(true);\n    };\n\n    const handleEditProject = (project) => {\n        navigate(`/project/${project.id}/edit`);\n    };\n\n    const handleViewPublic = (project) => {\n        if (!project.is_approved) {\n            showSnackbar('This project is not approved yet', 'warning');\n            return;\n        }\n        \n        if (project.is_public) {\n            navigate(`/project/public/${project.id}`);\n        } else {\n            showSnackbar('This project is not public', 'warning');\n        }\n    };\n\n    const programmingLanguages = [\n        { value: 'javascript', label: 'JavaScript' },\n        { value: 'python', label: 'Python' },\n        { value: 'java', label: 'Java' },\n        { value: 'php', label: 'PHP' },\n        { value: 'go', label: 'Go' },\n        { value: 'rust', label: 'Rust' },\n        { value: 'sql', label: 'SQL' }\n    ];\n\n    return (\n        <>\n            <Helmet>\n                <title>Projects - OneDollarAI</title>\n            </Helmet>\n\n            <Container maxWidth=\"lg\">\n                <Box sx={{ mt: 3, mb: 4 }}>\n                    <Typography variant=\"h2\" component=\"h1\" gutterBottom sx={{ color: 'black' }}>\n                        Code Projects\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ color: 'black' }}>\n                        Discover, create, and manage code projects. Run them instantly or purchase for unlimited access.\n                    </Typography>\n                </Box>\n\n                {/* Search and Filter Bar */}\n                <Card sx={{ mb: 3 }}>\n                    <CardContent>\n                        <Grid container spacing={2} alignItems=\"center\">\n                            <Grid item xs={12} md={4}>\n                                <TextField\n                                    fullWidth\n                                    placeholder=\"Search projects by title, description, or owner...\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <SearchIcon sx={{ color: 'black' }} />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    sx={{\n                                        '& .MuiInputBase-root': {\n                                            color: 'black',\n                                            '& fieldset': {\n                                                borderColor: 'black'\n                                            },\n                                            '&:hover fieldset': {\n                                                borderColor: 'black'\n                                            },\n                                            '&.Mui-focused fieldset': {\n                                                borderColor: 'black'\n                                            }\n                                        },\n                                        '& .MuiInputLabel-root': {\n                                            color: 'black',\n                                            '&.Mui-focused': {\n                                                color: 'black'\n                                            }\n                                        },\n                                        '& .MuiFormHelperText-root': {\n                                            color: 'black'\n                                        }\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Type</InputLabel>\n                                    <Select\n                                        value={filterType}\n                                        onChange={(e) => setFilterType(e.target.value)}\n                                        label=\"Type\"\n                                    >\n                                        <MenuItem value=\"all\"\n                                            sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}\n                                        >\n                                            All Types\n                                        </MenuItem>\n                                        <MenuItem value=\"code\"\n                                            sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}\n                                        >\n                                            Code Projects\n                                        </MenuItem>\n                                        <MenuItem value=\"text\"\n                                            sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}\n                                        >\n                                            Text Projects\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Language</InputLabel>\n                                    <Select\n                                        value={filterLanguage}\n                                        onChange={(e) => setFilterLanguage(e.target.value)}\n                                        label=\"Language\"\n                                    >\n                                        <MenuItem value=\"all\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>All Languages</MenuItem>\n                                        {programmingLanguages.map((lang) => (\n                                            <MenuItem key={lang.value} value={lang.value} sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>\n                                                {lang.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Sort By</InputLabel>\n                                    <Select\n                                        value={sortBy}\n                                        onChange={(e) => setSortBy(e.target.value)}\n                                        label=\"Sort By\"\n                                    >\n                                        <MenuItem value=\"created_at\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Newest First</MenuItem>\n                                        <MenuItem value=\"title\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Title</MenuItem>\n\n                                        <MenuItem value=\"views\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Most Viewed</MenuItem>\n                                        <MenuItem value=\"runs\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Most Used</MenuItem>\n                                        <MenuItem value=\"revenue\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Highest Revenue</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    startIcon={<AddIcon />}\n                                    onClick={() => navigate('/projects/add')}\n                                    sx={{\n                                        backgroundColor: 'black',\n                                        color: 'white',\n                                        '&:hover': {\n                                            backgroundColor: 'rgba(0, 0, 0, 0.8)'\n                                        }\n                                    }}\n                                >\n                                    Create Project\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* Advanced Filters */}\n                        <Box sx={{ mt: 2 }}>\n                            <Button\n                                startIcon={<FilterIcon />}\n                                onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n                                sx={{ color: 'black' }}\n                            >\n                                {showAdvancedFilters ? 'Hide' : 'Show'} Advanced Filters\n                            </Button>\n                            \n\n                        </Box>\n                    </CardContent>\n                </Card>\n\n                {/* Add a button to navigate to '/projects/add' above the project list */}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<AddIcon />}\n                    sx={{ mb: 2 }}\n                    onClick={() => navigate('/projects/add')}\n                >\n                    Create New Project\n                </Button>\n\n                <Grid container spacing={3}>\n                    {filteredProjects.map((project) => (\n                        <Grid item xs={12} sm={6} md={4} key={project.id}>\n                            <ProjectCard\n                                project={project}\n                                onView={() => handleViewProject(project)}\n                                onEdit={() => handleEditProject(project)}\n                                onDelete={() => handleProjectAction('delete', project)}\n                                onRun={() => handleProjectAction('run', project)}\n                                onViewPublic={() => handleViewPublic(project)}\n                                onCollaboration={() => handleCollaboration(project)}\n                                isOwner={project.owner.id === user?.id}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n\n                {filteredProjects.length === 0 && !loading && (\n                    <Box sx={{ textAlign: 'center', mt: 4 }}>\n                        <Typography variant=\"h6\" sx={{ color: 'black' }} gutterBottom>\n                            No projects found\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                            {searchTerm || filterType !== 'all' || filterLanguage !== 'all'\n                                ? 'Try adjusting your search or filters'\n                                : 'Be the first to create a project!'\n                            }\n                        </Typography>\n                    </Box>\n                )}\n\n                {/* Project Details Dialog */}\n                <Dialog\n                    open={openDetailsDialog}\n                    onClose={() => setOpenDetailsDialog(false)}\n                    maxWidth=\"lg\"\n                    fullWidth\n                >\n                    <DialogContent>\n                        {selectedProject && (\n                            <ProjectDetails\n                                project={selectedProject}\n                                onClose={() => setOpenDetailsDialog(false)}\n                                onRun={() => handleProjectAction('run', selectedProject)}\n                                onViewPublic={() => handleViewPublic(selectedProject)}\n                                onCollaboration={() => handleCollaboration(selectedProject)}\n                                isOwner={selectedProject.owner.id === user?.id}\n                            />\n                        )}\n                    </DialogContent>\n                </Dialog>\n\n                {/* Delete Confirmation Dialog */}\n                <Dialog\n                    open={openDeleteDialog}\n                    onClose={handleCancelDelete}\n                    maxWidth=\"sm\"\n                    fullWidth\n                >\n                    <DialogTitle sx={{ \n                        color: 'black', \n                        backgroundColor: '#fff3cd',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 1\n                    }}>\n                        <WarningIcon sx={{ color: '#856404' }} />\n                        Confirm Delete\n                    </DialogTitle>\n                    <DialogContent sx={{ backgroundColor: '#fff3cd', pt: 2 }}>\n                        <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\n                            Are you sure you want to delete the project \"{projectToDelete?.title}\"?\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#856404' }}>\n                            This action cannot be undone. The project and all its data will be permanently removed.\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions sx={{ backgroundColor: '#fff3cd', px: 3, pb: 2 }}>\n                        <Button \n                            onClick={handleCancelDelete}\n                            sx={{ \n                                color: 'black',\n                                borderColor: 'black',\n                                '&:hover': {\n                                    borderColor: 'black',\n                                    backgroundColor: 'rgba(0, 0, 0, 0.04)'\n                                }\n                            }}\n                        >\n                            Cancel\n                        </Button>\n                        <Button \n                            onClick={handleConfirmDelete}\n                            variant=\"contained\"\n                            color=\"error\"\n                            startIcon={<DeleteIcon />}\n                            sx={{\n                                backgroundColor: '#dc3545',\n                                '&:hover': {\n                                    backgroundColor: '#c82333'\n                                }\n                            }}\n                        >\n                            Delete Project\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* Snackbar for notifications */}\n                <Snackbar\n                    open={snackbar.open}\n                    autoHideDuration={6000}\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\n                >\n                    <Alert\n                        onClose={() => setSnackbar({ ...snackbar, open: false })}\n                        severity={snackbar.severity}\n                        sx={{ width: '100%' }}\n                    >\n                        {snackbar.message}\n                    </Alert>\n                </Snackbar>\n            </Container>\n        </>\n    );\n};\n\nexport default Projects; ","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1.41 16.09V20h-2.67v-1.93c-1.71-.36-3.16-1.46-3.27-3.4h1.96c.1 1.05.82 1.87 2.65 1.87 1.96 0 2.4-.98 2.4-1.59 0-.83-.44-1.61-2.67-2.14-2.48-.6-4.18-1.62-4.18-3.67 0-1.72 1.39-2.84 3.11-3.21V4h2.67v1.95c1.86.45 2.79 1.86 2.85 3.39H14.3c-.05-1.11-.64-1.87-2.22-1.87-1.5 0-2.4.68-2.4 1.64 0 .84.65 1.39 2.67 1.91s4.18 1.39 4.18 3.91c-.01 1.83-1.38 2.83-3.12 3.16\"\n}), 'MonetizationOn');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3m-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3m0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5m8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5\"\n}), 'Group');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M14 2H6c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8zm2 16H8v-2h8zm0-4H8v-2h8zm-3-5V3.5L18.5 9z\"\n}), 'Description');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2M1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.08-.14.12-.31.12-.48 0-.55-.45-1-1-1H5.21l-.94-2zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2\"\n}), 'ShoppingCart');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');"],"names":["createSvgIcon","_jsx","d","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_ref","_extends","display","alignItems","padding","marginLeft","React","inProps","ref","useDefaultProps","className","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","clsx","project","onView","onEdit","onDelete","onRun","onViewPublic","onCollaboration","isOwner","anchorEl","setAnchorEl","useState","handleMenuClose","handleMenuAction","action","_jsxs","Card","sx","height","flexDirection","transition","transform","boxShadow","children","CardContent","flexGrow","Box","justifyContent","mb","gap","flex","type","CodeIcon","fontSize","color","DescriptionIcon","ViewIcon","getProjectTypeIcon","project_type","Typography","variant","component","noWrap","title","is_public","Tooltip","componentsProps","tooltip","bgcolor","PublicIcon","LockIcon","is_approved","StarIcon","IconButton","size","onClick","event","currentTarget","MoreIcon","WebkitLineClamp","WebkitBoxOrient","overflow","description","flexWrap","Chip","label","getProjectTypeColor","status","getStatusColor","language","analytics","icon","total_views","PlayIcon","total_runs","BuyIcon","total_purchases","total_revenue","RevenueIcon","Avatar","width","owner","avatar","src","alt","first_name","PersonIcon","last_name","usage_count","computing_resources","length","estimated_cost_per_run","formatDistanceToNow","Date","created_at","addSuffix","Divider","CardActions","p","Button","startIcon","borderColor","CollaborationIcon","EditIcon","DeleteIcon","Menu","open","Boolean","onClose","MenuItem","ListItemIcon","ListItemText","_Fragment","Projects","user","useAuth","navigate","useNavigate","projects","setProjects","filteredProjects","setFilteredProjects","loading","setLoading","searchTerm","setSearchTerm","filterType","setFilterType","filterLanguage","setFilterLanguage","sortBy","setSortBy","sortOrder","setSortOrder","showAdvancedFilters","setShowAdvancedFilters","openDetailsDialog","setOpenDetailsDialog","openDeleteDialog","setOpenDeleteDialog","selectedProject","setSelectedProject","projectToDelete","setProjectToDelete","snackbar","setSnackbar","message","severity","useEffect","loadProjects","filterAndSortProjects","showSnackbar","arguments","undefined","async","response","projectService","getAllProjects","console","log","data","error","filtered","filter","toLowerCase","includes","sort","a","b","_a$analytics","_b$analytics","_a$analytics2","_b$analytics2","_a$analytics3","_b$analytics3","aValue","bValue","parseFloat","handleCollaboration","id","handleProjectAction","handleDeleteProject","handleViewPublic","handleCancelDelete","Helmet","Container","maxWidth","mt","gutterBottom","Grid","container","item","xs","md","TextField","fullWidth","placeholder","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","FormControl","InputLabel","Select","map","lang","AddIcon","backgroundColor","FilterIcon","sm","ProjectCard","handleViewProject","handleEditProject","textAlign","Dialog","DialogContent","ProjectDetails","DialogTitle","WarningIcon","pt","DialogActions","px","pb","deleteProject","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}