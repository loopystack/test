{"version":3,"file":"static/js/845.a7f559c9.chunk.js","mappings":"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","sources":["content/applications/Projects/components/ProjectCard.js","content/applications/Projects/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Avatar,\r\n    Box,\r\n    Button,\r\n    Card,\r\n    CardActions,\r\n    CardContent,\r\n    Chip,\r\n    Divider,\r\n    IconButton,\r\n    Tooltip,\r\n    Typography,\r\n    Menu,\r\n    MenuItem,\r\n    ListItemIcon,\r\n    ListItemText\r\n} from '@mui/material';\r\nimport {\r\n    Code as CodeIcon,\r\n    Delete as DeleteIcon,\r\n    Description as DescriptionIcon,\r\n    Edit as EditIcon,\r\n    Lock as LockIcon,\r\n    Person as PersonIcon,\r\n    PlayArrow as PlayIcon,\r\n    Public as PublicIcon,\r\n    ShoppingCart as BuyIcon,\r\n    Star as StarIcon,\r\n    Visibility as ViewIcon,\r\n    TrendingUp as TrendingIcon,\r\n    MonetizationOn as RevenueIcon,\r\n    Group as CollaborationIcon,\r\n    MoreVert as MoreIcon,\r\n    Settings as SettingsIcon,\r\n    Analytics as AnalyticsIcon,\r\n    Share as ShareIcon,\r\n    Download as DownloadIcon,\r\n    Upload as UploadIcon\r\n} from '@mui/icons-material';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nconst ProjectCard = ({ \r\n    project, \r\n    onView, \r\n    onEdit, \r\n    onDelete, \r\n    onRun, \r\n    onViewPublic,\r\n    onCollaboration,\r\n    isOwner \r\n}) => {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuAction = (action) => {\r\n        handleMenuClose();\r\n        switch (action) {\r\n            case 'view':\r\n                onView();\r\n                break;\r\n            case 'edit':\r\n                onEdit();\r\n                break;\r\n            case 'run':\r\n                onRun();\r\n                break;\r\n            case 'collaborate':\r\n                onCollaboration();\r\n                break;\r\n            case 'view_public':\r\n                onViewPublic();\r\n                break;\r\n            case 'delete':\r\n                onDelete();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const getProjectTypeIcon = (type) => {\r\n        switch (type) {\r\n            case 'code':\r\n                return <CodeIcon fontSize=\"small\" sx={{ color: 'black' }} />;\r\n            case 'text':\r\n                return <DescriptionIcon fontSize=\"small\" sx={{ color: 'black' }} />;\r\n            default:\r\n                return <ViewIcon fontSize=\"small\" sx={{ color: 'black' }} />;\r\n        }\r\n    };\r\n\r\n    const getProjectTypeColor = (type) => {\r\n        switch (type) {\r\n            case 'code':\r\n                return 'primary';\r\n            case 'text':\r\n                return 'secondary';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'approved':\r\n                return 'success';\r\n            case 'pending':\r\n                return 'warning';\r\n            case 'rejected':\r\n                return 'error';\r\n            case 'draft':\r\n                return 'default';\r\n            default:\r\n                return 'default';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                transition: 'transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out',\r\n                '&:hover': {\r\n                    transform: 'translateY(-4px)',\r\n                    boxShadow: 4\r\n                }\r\n            }}\r\n        >\r\n            <CardContent sx={{ flexGrow: 1 }}>\r\n                {/* Header */}\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        alignItems: 'flex-start',\r\n                        mb: 2\r\n                    }}\r\n                >\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flex: 1 }}>\r\n                        {getProjectTypeIcon(project.project_type)}\r\n                        <Typography variant=\"h6\" component=\"h2\" noWrap color=\"black\" sx={{ flex: 1 }}>\r\n                            {project.title}\r\n                        </Typography>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', gap: 0.5, alignItems: 'center' }}>\r\n                        {project.is_public ? (\r\n                            <Tooltip title=\"Public Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <PublicIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </Tooltip>\r\n                        ) : (\r\n                            <Tooltip title=\"Private Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <LockIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </Tooltip>\r\n                        )}\r\n                        {project.is_approved && (\r\n                            <Tooltip title=\"Approved\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <StarIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </Tooltip>\r\n                        )}\r\n                        <IconButton\r\n                            size=\"small\"\r\n                            onClick={handleMenuOpen}\r\n                            sx={{ color: 'black' }}\r\n                        >\r\n                            <MoreIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Box>\r\n                </Box>\r\n\r\n                {/* Description */}\r\n                <Typography\r\n                    variant=\"body2\"\r\n                    sx={{\r\n                        mb: 2,\r\n                        display: '-webkit-box',\r\n                        WebkitLineClamp: 3,\r\n                        WebkitBoxOrient: 'vertical',\r\n                        overflow: 'hidden',\r\n                        color: 'black'\r\n                    }}\r\n                >\r\n                    {project.description}\r\n                </Typography>\r\n\r\n                {/* Chips */}\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        gap: 1,\r\n                        mb: 2,\r\n                        flexWrap: 'wrap'\r\n                    }}\r\n                >\r\n                    <Chip\r\n                        label={project.project_type}\r\n                        color={getProjectTypeColor(project.project_type)}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <Chip\r\n                        label={project.status}\r\n                        color={getStatusColor(project.status)}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    {project.language && (\r\n                        <Chip\r\n                            label={project.language}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                    )}\r\n                    {project.price > 0 && (\r\n                        <Chip\r\n                            label={`$${project.price}`}\r\n                            color=\"warning\"\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )}\r\n                </Box>\r\n\r\n                {/* Analytics */}\r\n                {project.analytics && (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            gap: 1,\r\n                            mb: 2,\r\n                            flexWrap: 'wrap'\r\n                        }}\r\n                    >\r\n                        <Chip\r\n                            icon={<ViewIcon />}\r\n                            label={project.analytics.total_views || 0}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                        <Chip\r\n                            icon={<PlayIcon />}\r\n                            label={project.analytics.total_runs || 0}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                        <Chip\r\n                            icon={<BuyIcon />}\r\n                            label={project.analytics.total_purchases || 0}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            sx={{ color: 'black' }}\r\n                        />\r\n                        {project.analytics.total_revenue > 0 && (\r\n                            <Chip\r\n                                icon={<RevenueIcon />}\r\n                                label={`$${project.analytics.total_revenue}`}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                color=\"success\"\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Owner Info */}\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        gap: 1,\r\n                        mb: 2\r\n                    }}\r\n                >\r\n                    <Avatar sx={{ width: 24, height: 24 }}>\r\n                        {project.owner.avatar ? (\r\n                            <img\r\n                                src={project.owner.avatar}\r\n                                alt={project.owner.first_name}\r\n                            />\r\n                        ) : (\r\n                            <PersonIcon fontSize=\"small\" />\r\n                        )}\r\n                    </Avatar>\r\n                    <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                        by {project.owner.first_name} {project.owner.last_name}\r\n                    </Typography>\r\n                </Box>\r\n\r\n                {/* Usage Info */}\r\n                {project.usage_count > 0 && (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            gap: 1,\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        <PlayIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                        <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                            Used {project.usage_count} times\r\n                        </Typography>\r\n                    </Box>\r\n                )}\r\n\r\n                {/* Computing Resources */}\r\n                {project.computing_resources &&\r\n                    project.computing_resources.length > 0 && (\r\n                        <Box sx={{ mb: 2 }}>\r\n                            <Typography\r\n                                variant=\"caption\"\r\n                                sx={{ color: 'black' }}\r\n                                display=\"block\"\r\n                            >\r\n                                Cost per run: $\r\n                                {project.computing_resources[0]\r\n                                    .estimated_cost_per_run}\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n\r\n                {/* Timestamp */}\r\n                <Typography variant=\"caption\" sx={{ color: 'black' }}>\r\n                    {formatDistanceToNow(new Date(project.created_at), {\r\n                        addSuffix: true\r\n                    })}\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <Divider />\r\n\r\n            <CardActions sx={{ flexWrap: 'wrap', justifyContent: 'space-between', p: 2 }}>\r\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<ViewIcon />}\r\n                        onClick={onView}\r\n                        sx={{ color: 'black', borderColor: 'black' }}\r\n                    >\r\n                        View\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<PlayIcon />}\r\n                        onClick={onRun}\r\n                        sx={{ color: 'black', borderColor: 'black' }}\r\n                    >\r\n                        Run\r\n                    </Button>\r\n\r\n                    <Button\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        startIcon={<CollaborationIcon />}\r\n                        onClick={onCollaboration}\r\n                        sx={{ color: 'black', borderColor: 'black' }}\r\n                    >\r\n                        Collaborate\r\n                    </Button>\r\n\r\n                    {project.is_public && (\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={onViewPublic}\r\n                            startIcon={<PublicIcon />}\r\n                            sx={{ color: 'black', borderColor: 'black' }}\r\n                        >\r\n                            Public\r\n                        </Button>\r\n                    )}\r\n\r\n                    {isOwner && (\r\n                        <Box sx={{ display: 'flex', gap: 0.5 }}>\r\n                            <Tooltip title=\"Edit Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={onEdit}\r\n                                    sx={{ color: 'black' }}\r\n                                >\r\n                                    <EditIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n\r\n                            <Tooltip title=\"Delete Project\"\r\n                                componentsProps={{\r\n                                    tooltip: {\r\n                                        sx: {\r\n                                            bgcolor: 'black',\r\n                                            color: 'white',\r\n                                            '& .MuiTooltip-arrow': {\r\n                                                color: 'black'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    color=\"error\"\r\n                                    onClick={onDelete}\r\n                                >\r\n                                    <DeleteIcon fontSize=\"small\" />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Box>\r\n                    )}\r\n                </Box>\r\n\r\n            </CardActions>\r\n\r\n            {/* Action Menu */}\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleMenuClose}\r\n                sx={{\r\n                    '& .MuiMenuItem-root': {\r\n                        color: 'black'\r\n                    }\r\n                }}\r\n            >\r\n                <MenuItem onClick={() => handleMenuAction('view')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                    <ListItemIcon>\r\n                        <ViewIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>View Details</ListItemText>\r\n                </MenuItem>\r\n                \r\n                <MenuItem onClick={() => handleMenuAction('run')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                    <ListItemIcon>\r\n                        <PlayIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Run Project</ListItemText>\r\n                </MenuItem>\r\n                \r\n                <MenuItem onClick={() => handleMenuAction('collaborate')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                    <ListItemIcon>\r\n                        <CollaborationIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Collaborate</ListItemText>\r\n                </MenuItem>\r\n                \r\n                {/* {project.is_public && (\r\n                    <MenuItem onClick={() => handleMenuAction('view_public')} sx={{ color: 'black !important',\r\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                                    color: 'black !important'\r\n                                                }\r\n                                            }}>\r\n                        <ListItemIcon>\r\n                            <PublicIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText>View Public Page</ListItemText>\r\n                    </MenuItem>\r\n                )} */}\r\n                \r\n                {isOwner && (\r\n                    <>\r\n                        <MenuItem onClick={() => handleMenuAction('edit')} sx={{ color: 'black !important',\r\n                                '&:hover, &:active, &.active, &.Mui-selected': {\r\n                                    color: 'black !important'\r\n                                }\r\n                            }}>\r\n                            <ListItemIcon>\r\n                                <EditIcon fontSize=\"small\" sx={{ color: 'black' }} />\r\n                            </ListItemIcon>\r\n                            <ListItemText>Edit Project</ListItemText>\r\n                        </MenuItem>\r\n                        \r\n                        <MenuItem onClick={() => handleMenuAction('delete')}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon fontSize=\"small\" sx={{ color: 'red' }} />\r\n                            </ListItemIcon>\r\n                            <ListItemText sx={{ color: 'red' }}>Delete Project</ListItemText>\r\n                        </MenuItem>\r\n                    </>\r\n                )}\r\n            </Menu>\r\n        </Card>\r\n    );\r\n};\r\n\r\nProjectCard.propTypes = {\r\n    project: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        description: PropTypes.string.isRequired,\r\n        project_type: PropTypes.string.isRequired,\r\n        status: PropTypes.string.isRequired,\r\n        price: PropTypes.number.isRequired,\r\n        price_per_use: PropTypes.number.isRequired,\r\n        is_public: PropTypes.bool.isRequired,\r\n        is_approved: PropTypes.bool.isRequired,\r\n        usage_count: PropTypes.number.isRequired,\r\n        created_at: PropTypes.string.isRequired,\r\n        language: PropTypes.string,\r\n        owner: PropTypes.shape({\r\n            first_name: PropTypes.string.isRequired,\r\n            last_name: PropTypes.string.isRequired,\r\n            avatar: PropTypes.string\r\n        }).isRequired,\r\n        analytics: PropTypes.shape({\r\n            total_views: PropTypes.number,\r\n            total_runs: PropTypes.number,\r\n            total_purchases: PropTypes.number,\r\n            total_revenue: PropTypes.string\r\n        }),\r\n        computing_resources: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                estimated_cost_per_run: PropTypes.number.isRequired\r\n            })\r\n        )\r\n    }).isRequired,\r\n    onView: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onRun: PropTypes.func.isRequired,\r\n    onViewPublic: PropTypes.func.isRequired,\r\n    onCollaboration: PropTypes.func.isRequired,\r\n    isOwner: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default ProjectCard; ","import { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate } from 'react-router-dom';\nimport {\n    Alert,\n    Box,\n    Button,\n    Card,\n    CardContent,\n    Container,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Fab,\n    FormControl,\n    Grid,\n    InputAdornment,\n    InputLabel,\n    MenuItem,\n    Select,\n    Slider,\n    Snackbar,\n    TextField,\n    Typography,\n    Chip,\n} from '@mui/material';\nimport {\n    Add as AddIcon,\n    Code as CodeIcon,\n    Delete as DeleteIcon,\n    Description as DescriptionIcon,\n    Search as SearchIcon,\n    Visibility as VisibilityIcon,\n    Warning as WarningIcon,\n    FilterList as FilterIcon,\n    Sort as SortIcon,\n    Language as LanguageIcon,\n    AttachMoney as PriceIcon\n} from '@mui/icons-material';\n\nimport { useAuth } from 'src/contexts/AuthContext';\nimport { projectService } from 'src/services/projectService';\nimport ProjectCard from './components/ProjectCard';\nimport ProjectDetails from './components/ProjectDetails';\nimport ProjectForm from './components/ProjectForm';\n\nconst Projects = () => {\n    const { user } = useAuth();\n    const navigate = useNavigate();\n\n    // State management\n    const [projects, setProjects] = useState([]);\n    const [filteredProjects, setFilteredProjects] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterType, setFilterType] = useState('all');\n    const [filterLanguage, setFilterLanguage] = useState('all');\n    const [priceRange, setPriceRange] = useState([0, 100]);\n    const [sortBy, setSortBy] = useState('created_at');\n    const [sortOrder, setSortOrder] = useState('desc');\n    const [showAdvancedFilters, setShowAdvancedFilters] = useState(false);\n    const [openDetailsDialog, setOpenDetailsDialog] = useState(false);\n    const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\n    const [selectedProject, setSelectedProject] = useState(null);\n    const [projectToDelete, setProjectToDelete] = useState(null);\n    const [snackbar, setSnackbar] = useState({\n        open: false,\n        message: '',\n        severity: 'success'\n    });\n\n    // Effects\n    useEffect(() => {\n        loadProjects();\n    }, []);\n\n    useEffect(() => {\n        filterAndSortProjects();\n    }, [projects, searchTerm, filterType, filterLanguage, priceRange, sortBy, sortOrder]);\n\n    const getFilterIcon = (type) => {\n        switch (type) {\n            case 'code':\n                return <CodeIcon />;\n            case 'text':\n                return <DescriptionIcon />;\n            default:\n                return <VisibilityIcon />;\n        }\n    };\n\n    const showSnackbar = (message, severity = 'success') => {\n        setSnackbar({\n            open: true,\n            message,\n            severity\n        });\n    };\n\n    const loadProjects = async () => {\n        try {\n            setLoading(true);\n            const response = await projectService.getAllProjects();\n            console.log('response', response);\n            setProjects(response.data);\n        } catch (error) {\n            console.error('Error loading projects:', error);\n            showSnackbar('Failed to load projects', 'error');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const filterAndSortProjects = () => {\n        let filtered = [...projects];\n\n        // Filter by search term\n        if (searchTerm) {\n            filtered = filtered.filter(project =>\n                project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.description.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.owner.first_name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                project.owner.last_name.toLowerCase().includes(searchTerm.toLowerCase())\n            );\n        }\n\n        // Filter by type\n        if (filterType !== 'all') {\n            filtered = filtered.filter(project => project.project_type === filterType);\n        }\n\n        // Filter by language\n        if (filterLanguage !== 'all') {\n            filtered = filtered.filter(project => project.language === filterLanguage);\n        }\n\n        // Filter by price range\n        filtered = filtered.filter(project => \n            project.price >= priceRange[0] && project.price <= priceRange[1]\n        );\n\n        // Sort projects\n        filtered.sort((a, b) => {\n            let aValue, bValue;\n            \n            switch (sortBy) {\n                case 'title':\n                    aValue = a.title.toLowerCase();\n                    bValue = b.title.toLowerCase();\n                    break;\n                case 'created_at':\n                    aValue = new Date(a.created_at);\n                    bValue = new Date(b.created_at);\n                    break;\n                case 'price':\n                    aValue = parseFloat(a.price);\n                    bValue = parseFloat(b.price);\n                    break;\n                case 'views':\n                    aValue = a.analytics?.total_views || 0;\n                    bValue = b.analytics?.total_views || 0;\n                    break;\n                case 'runs':\n                    aValue = a.analytics?.total_runs || 0;\n                    bValue = b.analytics?.total_runs || 0;\n                    break;\n                case 'revenue':\n                    aValue = parseFloat(a.analytics?.total_revenue || 0);\n                    bValue = parseFloat(b.analytics?.total_revenue || 0);\n                    break;\n                default:\n                    return 0;\n            }\n\n            if (sortOrder === 'desc') {\n                return bValue > aValue ? 1 : -1;\n            } else {\n                return aValue > bValue ? 1 : -1;\n            }\n        });\n\n        setFilteredProjects(filtered);\n    };\n\n    const handleCollaboration = (project) => {\n        navigate(`/projects/${project.id}/collaboration`);\n    };\n\n    const handleDeleteProject = async (projectId) => {\n        try {\n            await projectService.deleteProject(projectId);\n            setProjects(projects.filter(project => project.id !== projectId));\n            showSnackbar('Project deleted successfully!', 'success');\n        } catch (error) {\n            console.error('Error deleting project:', error);\n            showSnackbar('Failed to delete project', 'error');\n        }\n    };\n\n    const handleProjectAction = (action, project) => {\n        switch (action) {\n            case 'view':\n                navigate(`/project/${project.id}`);\n                break;\n            case 'edit':\n                navigate(`/project/${project.id}/edit`);\n                break;\n            case 'delete':\n                handleDeleteProject(project.id);\n                break;\n            case 'run':\n                navigate(`/project/${project.id}/run`);\n                break;\n            case 'view_public':\n                handleViewPublic(project);\n                break;\n            case 'collaboration':\n                handleCollaboration(project);\n                break;\n            default:\n                break;\n        }\n    };\n\n    const handleConfirmDelete = async () => {\n        try {\n            await projectService.deleteProject(projectToDelete.id);\n            setProjects(projects.filter(p => p.id !== projectToDelete.id));\n            setOpenDeleteDialog(false);\n            setProjectToDelete(null);\n            showSnackbar('Project deleted successfully!');\n        } catch (error) {\n            console.error('Error deleting project:', error);\n            showSnackbar('Failed to delete project', 'error');\n        }\n    };\n\n    const handleCancelDelete = () => {\n        setOpenDeleteDialog(false);\n        setProjectToDelete(null);\n    };\n\n    const handleViewProject = (project) => {\n        setSelectedProject(project);\n        setOpenDetailsDialog(true);\n    };\n\n    const handleEditProject = (project) => {\n        navigate(`/project/${project.id}/edit`);\n    };\n\n    const handleViewPublic = (project) => {\n        if (project.is_public) {\n            navigate(`/project/public/${project.id}`);\n        } else {\n            showSnackbar('This project is not public', 'warning');\n        }\n    };\n\n    const programmingLanguages = [\n        { value: 'javascript', label: 'JavaScript' },\n        { value: 'python', label: 'Python' },\n        { value: 'java', label: 'Java' },\n        { value: 'php', label: 'PHP' },\n        { value: 'go', label: 'Go' },\n        { value: 'rust', label: 'Rust' },\n        { value: 'sql', label: 'SQL' }\n    ];\n\n    return (\n        <>\n            <Helmet>\n                <title>Projects - OneDollarAI</title>\n            </Helmet>\n\n            <Container maxWidth=\"lg\">\n                <Box sx={{ mt: 3, mb: 4 }}>\n                    <Typography variant=\"h2\" component=\"h1\" gutterBottom sx={{ color: 'black' }}>\n                        Code Projects\n                    </Typography>\n                    <Typography variant=\"body1\" sx={{ color: 'black' }}>\n                        Discover, create, and manage code projects. Run them instantly or purchase for unlimited access.\n                    </Typography>\n                </Box>\n\n                {/* Search and Filter Bar */}\n                <Card sx={{ mb: 3 }}>\n                    <CardContent>\n                        <Grid container spacing={2} alignItems=\"center\">\n                            <Grid item xs={12} md={4}>\n                                <TextField\n                                    fullWidth\n                                    placeholder=\"Search projects by title, description, or owner...\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                    InputProps={{\n                                        startAdornment: (\n                                            <InputAdornment position=\"start\">\n                                                <SearchIcon sx={{ color: 'black' }} />\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                    sx={{\n                                        '& .MuiInputBase-root': {\n                                            color: 'black',\n                                            '& fieldset': {\n                                                borderColor: 'black'\n                                            },\n                                            '&:hover fieldset': {\n                                                borderColor: 'black'\n                                            },\n                                            '&.Mui-focused fieldset': {\n                                                borderColor: 'black'\n                                            }\n                                        },\n                                        '& .MuiInputLabel-root': {\n                                            color: 'black',\n                                            '&.Mui-focused': {\n                                                color: 'black'\n                                            }\n                                        },\n                                        '& .MuiFormHelperText-root': {\n                                            color: 'black'\n                                        }\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Type</InputLabel>\n                                    <Select\n                                        value={filterType}\n                                        onChange={(e) => setFilterType(e.target.value)}\n                                        label=\"Type\"\n                                    >\n                                        <MenuItem value=\"all\"\n                                            sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}\n                                        >\n                                            All Types\n                                        </MenuItem>\n                                        <MenuItem value=\"code\"\n                                            sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}\n                                        >\n                                            Code Projects\n                                        </MenuItem>\n                                        <MenuItem value=\"text\"\n                                            sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}\n                                        >\n                                            Text Projects\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Language</InputLabel>\n                                    <Select\n                                        value={filterLanguage}\n                                        onChange={(e) => setFilterLanguage(e.target.value)}\n                                        label=\"Language\"\n                                    >\n                                        <MenuItem value=\"all\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>All Languages</MenuItem>\n                                        {programmingLanguages.map((lang) => (\n                                            <MenuItem key={lang.value} value={lang.value} sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>\n                                                {lang.label}\n                                            </MenuItem>\n                                        ))}\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <FormControl fullWidth sx={{\n                                    '& .MuiInputBase-root': {\n                                        color: 'black',\n                                        '& fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&:hover fieldset': {\n                                            borderColor: 'black'\n                                        },\n                                        '&.Mui-focused fieldset': {\n                                            borderColor: 'black'\n                                        }\n                                    },\n                                    '& .MuiInputLabel-root': {\n                                        color: 'black',\n                                        '&.Mui-focused': {\n                                            color: 'black'\n                                        }\n                                    },\n                                    '& .MuiSelect-icon': {\n                                        color: 'black'\n                                    }\n                                }}>\n                                    <InputLabel>Sort By</InputLabel>\n                                    <Select\n                                        value={sortBy}\n                                        onChange={(e) => setSortBy(e.target.value)}\n                                        label=\"Sort By\"\n                                    >\n                                        <MenuItem value=\"created_at\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Newest First</MenuItem>\n                                        <MenuItem value=\"title\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Title</MenuItem>\n                                        <MenuItem value=\"price\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Price</MenuItem>\n                                        <MenuItem value=\"views\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Most Viewed</MenuItem>\n                                        <MenuItem value=\"runs\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Most Used</MenuItem>\n                                        <MenuItem value=\"revenue\" sx={{ color: 'black !important',\n                                                '&:hover, &:active, &.active, &.Mui-selected': {\n                                                    color: 'black !important'\n                                                }\n                                            }}>Highest Revenue</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={2}>\n                                <Button\n                                    fullWidth\n                                    variant=\"contained\"\n                                    startIcon={<AddIcon />}\n                                    onClick={() => navigate('/projects/add')}\n                                    sx={{\n                                        backgroundColor: 'black',\n                                        color: 'white',\n                                        '&:hover': {\n                                            backgroundColor: 'rgba(0, 0, 0, 0.8)'\n                                        }\n                                    }}\n                                >\n                                    Create Project\n                                </Button>\n                            </Grid>\n                        </Grid>\n\n                        {/* Advanced Filters */}\n                        <Box sx={{ mt: 2 }}>\n                            <Button\n                                startIcon={<FilterIcon />}\n                                onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}\n                                sx={{ color: 'black' }}\n                            >\n                                {showAdvancedFilters ? 'Hide' : 'Show'} Advanced Filters\n                            </Button>\n                            \n                            {showAdvancedFilters && (\n                                <Box sx={{ mt: 2 }}>\n                                    <Typography variant=\"subtitle2\" sx={{ color: 'black', mb: 1 }}>\n                                        Price Range: ${priceRange[0]} - ${priceRange[1]}\n                                    </Typography>\n                                    <Slider\n                                        value={priceRange}\n                                        onChange={(event, newValue) => setPriceRange(newValue)}\n                                        valueLabelDisplay=\"auto\"\n                                        min={0}\n                                        max={100}\n                                        sx={{\n                                            '& .MuiSlider-thumb': {\n                                                backgroundColor: 'black'\n                                            },\n                                            '& .MuiSlider-track': {\n                                                backgroundColor: 'black'\n                                            },\n                                            '& .MuiSlider-rail': {\n                                                backgroundColor: 'rgba(0, 0, 0, 0.3)'\n                                            }\n                                        }}\n                                    />\n                                </Box>\n                            )}\n                        </Box>\n                    </CardContent>\n                </Card>\n\n                {/* Add a button to navigate to '/projects/add' above the project list */}\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<AddIcon />}\n                    sx={{ mb: 2 }}\n                    onClick={() => navigate('/projects/add')}\n                >\n                    Create New Project\n                </Button>\n\n                <Grid container spacing={3}>\n                    {filteredProjects.map((project) => (\n                        <Grid item xs={12} sm={6} md={4} key={project.id}>\n                            <ProjectCard\n                                project={project}\n                                onView={() => handleViewProject(project)}\n                                onEdit={() => handleEditProject(project)}\n                                onDelete={() => handleProjectAction('delete', project)}\n                                onRun={() => handleProjectAction('run', project)}\n                                onViewPublic={() => handleViewPublic(project)}\n                                onCollaboration={() => handleCollaboration(project)}\n                                isOwner={project.owner.id === user?.id}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n\n                {filteredProjects.length === 0 && !loading && (\n                    <Box sx={{ textAlign: 'center', mt: 4 }}>\n                        <Typography variant=\"h6\" sx={{ color: 'black' }} gutterBottom>\n                            No projects found\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: 'black' }}>\n                            {searchTerm || filterType !== 'all' || filterLanguage !== 'all'\n                                ? 'Try adjusting your search or filters'\n                                : 'Be the first to create a project!'\n                            }\n                        </Typography>\n                    </Box>\n                )}\n\n                {/* Project Details Dialog */}\n                <Dialog\n                    open={openDetailsDialog}\n                    onClose={() => setOpenDetailsDialog(false)}\n                    maxWidth=\"lg\"\n                    fullWidth\n                >\n                    <DialogContent>\n                        {selectedProject && (\n                            <ProjectDetails\n                                project={selectedProject}\n                                onClose={() => setOpenDetailsDialog(false)}\n                                onRun={() => handleProjectAction('run', selectedProject)}\n                                onViewPublic={() => handleViewPublic(selectedProject)}\n                                onCollaboration={() => handleCollaboration(selectedProject)}\n                                isOwner={selectedProject.owner.id === user?.id}\n                            />\n                        )}\n                    </DialogContent>\n                </Dialog>\n\n                {/* Delete Confirmation Dialog */}\n                <Dialog\n                    open={openDeleteDialog}\n                    onClose={handleCancelDelete}\n                    maxWidth=\"sm\"\n                    fullWidth\n                >\n                    <DialogTitle sx={{ \n                        color: 'black', \n                        backgroundColor: '#fff3cd',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 1\n                    }}>\n                        <WarningIcon sx={{ color: '#856404' }} />\n                        Confirm Delete\n                    </DialogTitle>\n                    <DialogContent sx={{ backgroundColor: '#fff3cd', pt: 2 }}>\n                        <Typography variant=\"body1\" sx={{ color: 'black', mb: 2 }}>\n                            Are you sure you want to delete the project \"{projectToDelete?.title}\"?\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ color: '#856404' }}>\n                            This action cannot be undone. The project and all its data will be permanently removed.\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions sx={{ backgroundColor: '#fff3cd', px: 3, pb: 2 }}>\n                        <Button \n                            onClick={handleCancelDelete}\n                            sx={{ \n                                color: 'black',\n                                borderColor: 'black',\n                                '&:hover': {\n                                    borderColor: 'black',\n                                    backgroundColor: 'rgba(0, 0, 0, 0.04)'\n                                }\n                            }}\n                        >\n                            Cancel\n                        </Button>\n                        <Button \n                            onClick={handleConfirmDelete}\n                            variant=\"contained\"\n                            color=\"error\"\n                            startIcon={<DeleteIcon />}\n                            sx={{\n                                backgroundColor: '#dc3545',\n                                '&:hover': {\n                                    backgroundColor: '#c82333'\n                                }\n                            }}\n                        >\n                            Delete Project\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n\n                {/* Snackbar for notifications */}\n                <Snackbar\n                    open={snackbar.open}\n                    autoHideDuration={6000}\n                    onClose={() => setSnackbar({ ...snackbar, open: false })}\n                >\n                    <Alert\n                        onClose={() => setSnackbar({ ...snackbar, open: false })}\n                        severity={snackbar.severity}\n                        sx={{ width: '100%' }}\n                    >\n                        {snackbar.message}\n                    </Alert>\n                </Snackbar>\n            </Container>\n        </>\n    );\n};\n\nexport default Projects; "],"names":["_ref","project","onView","onEdit","onDelete","onRun","onViewPublic","onCollaboration","isOwner","anchorEl","setAnchorEl","useState","handleMenuClose","handleMenuAction","action","_jsxs","Card","sx","height","display","flexDirection","transition","transform","boxShadow","children","CardContent","flexGrow","Box","justifyContent","alignItems","mb","gap","flex","type","_jsx","CodeIcon","fontSize","color","DescriptionIcon","ViewIcon","getProjectTypeIcon","project_type","Typography","variant","component","noWrap","title","is_public","Tooltip","componentsProps","tooltip","bgcolor","PublicIcon","LockIcon","is_approved","StarIcon","IconButton","size","onClick","event","currentTarget","MoreIcon","WebkitLineClamp","WebkitBoxOrient","overflow","description","flexWrap","Chip","label","getProjectTypeColor","status","getStatusColor","language","price","analytics","icon","total_views","PlayIcon","total_runs","BuyIcon","total_purchases","total_revenue","RevenueIcon","Avatar","width","owner","avatar","src","alt","first_name","PersonIcon","last_name","usage_count","computing_resources","length","estimated_cost_per_run","formatDistanceToNow","Date","created_at","addSuffix","Divider","CardActions","p","Button","startIcon","borderColor","CollaborationIcon","EditIcon","DeleteIcon","Menu","open","Boolean","onClose","MenuItem","ListItemIcon","ListItemText","_Fragment","Projects","user","useAuth","navigate","useNavigate","projects","setProjects","filteredProjects","setFilteredProjects","loading","setLoading","searchTerm","setSearchTerm","filterType","setFilterType","filterLanguage","setFilterLanguage","priceRange","setPriceRange","sortBy","setSortBy","sortOrder","setSortOrder","showAdvancedFilters","setShowAdvancedFilters","openDetailsDialog","setOpenDetailsDialog","openDeleteDialog","setOpenDeleteDialog","selectedProject","setSelectedProject","projectToDelete","setProjectToDelete","snackbar","setSnackbar","message","severity","useEffect","loadProjects","filterAndSortProjects","showSnackbar","arguments","undefined","async","response","projectService","getAllProjects","console","log","data","error","filtered","filter","toLowerCase","includes","sort","a","b","_a$analytics","_b$analytics","_a$analytics2","_b$analytics2","_a$analytics3","_b$analytics3","aValue","bValue","parseFloat","handleCollaboration","id","handleProjectAction","deleteProject","projectId","handleDeleteProject","handleViewPublic","handleCancelDelete","Helmet","Container","maxWidth","mt","gutterBottom","Grid","container","spacing","item","xs","md","TextField","fullWidth","placeholder","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","FormControl","InputLabel","Select","map","lang","AddIcon","backgroundColor","FilterIcon","Slider","newValue","valueLabelDisplay","min","max","sm","ProjectCard","handleViewProject","handleEditProject","textAlign","Dialog","DialogContent","ProjectDetails","DialogTitle","WarningIcon","pt","DialogActions","px","pb","Snackbar","autoHideDuration","Alert"],"sourceRoot":""}